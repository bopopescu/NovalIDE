(dp0
S'doc'
p1
S'Fast profiler'
p2
sS'is_builtin'
p3
I01
sS'childs'
p4
(lp5
(dp6
g1
S'Profiler(custom_timer=None, time_unit=None, subcalls=True, builtins=True)\n\n    Builds a profiler object using the specified timer function.\n    The default timer is a fast built-in one based on real time.\n    For custom timer functions returning integers, time_unit can\n    be a float specifying a scale (i.e. how long each integer unit\n    is, in seconds).\n'
p7
sg3
I01
sg4
(lp8
(dp9
g3
I01
sS'type'
p10
I5
sS'name'
p11
S'__delattr__'
p12
sa(dp13
g3
I01
sg10
I5
sg11
S'__doc__'
p14
sa(dp15
g1
S'default object formatter'
p16
sg3
I01
sg10
I2
sg11
S'__format__'
p17
sa(dp18
g3
I01
sg10
I5
sg11
S'__getattribute__'
p19
sa(dp20
g3
I01
sg10
I5
sg11
S'__hash__'
p21
sa(dp22
g3
I01
sg10
I5
sg11
S'__init__'
p23
sa(dp24
g1
S'T.__new__(S, ...) -> a new object with type S, a subtype of T'
p25
sg3
I01
sg10
I2
sg11
S'__new__'
p26
sa(dp27
g1
S'helper for pickle'
p28
sg3
I01
sg10
I2
sg11
S'__reduce__'
p29
sa(dp30
g1
S'helper for pickle'
p31
sg3
I01
sg10
I2
sg11
S'__reduce_ex__'
p32
sa(dp33
g3
I01
sg10
I5
sg11
S'__repr__'
p34
sa(dp35
g3
I01
sg10
I5
sg11
S'__setattr__'
p36
sa(dp37
g1
S'__sizeof__() -> int\nsize of object in memory, in bytes'
p38
sg3
I01
sg10
I2
sg11
S'__sizeof__'
p39
sa(dp40
g3
I01
sg10
I5
sg11
S'__str__'
p41
sa(dp42
g1
S'Abstract classes can override this to customize issubclass().\n\nThis is invoked early on by abc.ABCMeta.__subclasscheck__().\nIt should return True, False or NotImplemented.  If it returns\nNotImplemented, the normal algorithm is used.  Otherwise, it\noverrides the normal algorithm (and the outcome is cached).\n'
p43
sg3
I01
sg10
I2
sg11
S'__subclasshook__'
p44
sa(dp45
g1
S'clear()\n\nClear all profiling information collected so far.\n'
p46
sg3
I01
sg10
I2
sg11
S'clear'
p47
sa(dp48
g1
S'disable()\n\nStop collecting profiling information.\n'
p49
sg3
I01
sg10
I2
sg11
S'disable'
p50
sa(dp51
g1
S"enable(subcalls=True, builtins=True)\n\nStart collecting profiling information.\nIf 'subcalls' is True, also records for each function\nstatistics separated according to its current caller.\nIf 'builtins' is True, records the time spent in\nbuilt-in functions separately from their caller.\n"
p52
sg3
I01
sg10
I2
sg11
S'enable'
p53
sa(dp54
g1
S'getstats() -> list of profiler_entry objects\n\nReturn all information collected by the profiler.\nEach profiler_entry is a tuple-like object with the\nfollowing attributes:\n\n    code          code object\n    callcount     how many times this was called\n    reccallcount  how many times called recursively\n    totaltime     total time in this entry\n    inlinetime    inline time in this entry (not in subcalls)\n    calls         details of the calls\n\nThe calls attribute is either None or a list of\nprofiler_subentry objects:\n\n    code          called code object\n    callcount     how many times this is called\n    reccallcount  how many times this is called recursively\n    totaltime     total time spent in this call\n    inlinetime    inline time (not in further subcalls)\n'
p55
sg3
I01
sg10
I2
sg11
S'getstats'
p56
sasg10
I3
sg11
S'Profiler'
p57
sa(dp58
g3
I01
sg10
I5
sg11
g14
sa(dp59
g3
I01
sg10
I5
sg11
S'__name__'
p60
sa(dp61
g3
I01
sg10
I5
sg11
S'__package__'
p62
sa(dp63
g1
Nsg3
I01
sg4
(lp64
(dp65
g3
I01
sg10
I5
sg11
S'__add__'
p66
sa(dp67
g3
I01
sg10
I5
sg11
S'__contains__'
p68
sa(dp69
g3
I01
sg10
I5
sg11
g12
sa(dp70
g3
I01
sg10
I5
sg11
g14
sa(dp71
g3
I01
sg10
I5
sg11
S'__eq__'
p72
sa(dp73
g1
S'default object formatter'
p74
sg3
I01
sg10
I2
sg11
g17
sa(dp75
g3
I01
sg10
I5
sg11
S'__ge__'
p76
sa(dp77
g3
I01
sg10
I5
sg11
g19
sa(dp78
g3
I01
sg10
I5
sg11
S'__getitem__'
p79
sa(dp80
g3
I01
sg10
I5
sg11
S'__getslice__'
p81
sa(dp82
g3
I01
sg10
I5
sg11
S'__gt__'
p83
sa(dp84
g3
I01
sg10
I5
sg11
g21
sa(dp85
g3
I01
sg10
I5
sg11
g23
sa(dp86
g3
I01
sg10
I5
sg11
S'__le__'
p87
sa(dp88
g3
I01
sg10
I5
sg11
S'__len__'
p89
sa(dp90
g3
I01
sg10
I5
sg11
S'__lt__'
p91
sa(dp92
g3
I01
sg10
I5
sg11
S'__mul__'
p93
sa(dp94
g3
I01
sg10
I5
sg11
S'__ne__'
p95
sa(dp96
g1
S'T.__new__(S, ...) -> a new object with type S, a subtype of T'
p97
sg3
I01
sg10
I2
sg11
g26
sa(dp98
g1
Nsg3
I01
sg10
I2
sg11
g29
sa(dp99
g1
S'helper for pickle'
p100
sg3
I01
sg10
I2
sg11
g32
sa(dp101
g3
I01
sg10
I5
sg11
g34
sa(dp102
g3
I01
sg10
I5
sg11
S'__rmul__'
p103
sa(dp104
g3
I01
sg10
I5
sg11
g36
sa(dp105
g1
S'__sizeof__() -> int\nsize of object in memory, in bytes'
p106
sg3
I01
sg10
I2
sg11
g39
sa(dp107
g3
I01
sg10
I5
sg11
g41
sa(dp108
g1
S'Abstract classes can override this to customize issubclass().\n\nThis is invoked early on by abc.ABCMeta.__subclasscheck__().\nIt should return True, False or NotImplemented.  If it returns\nNotImplemented, the normal algorithm is used.  Otherwise, it\noverrides the normal algorithm (and the outcome is cached).\n'
p109
sg3
I01
sg10
I2
sg11
g44
sa(dp110
g3
I01
sg10
I5
sg11
S'callcount'
p111
sa(dp112
g3
I01
sg10
I5
sg11
S'calls'
p113
sa(dp114
g3
I01
sg10
I5
sg11
S'code'
p115
sa(dp116
g3
I01
sg10
I5
sg11
S'inlinetime'
p117
sa(dp118
g3
I01
sg10
I5
sg11
S'n_fields'
p119
sa(dp120
g3
I01
sg10
I5
sg11
S'n_sequence_fields'
p121
sa(dp122
g3
I01
sg10
I5
sg11
S'n_unnamed_fields'
p123
sa(dp124
g3
I01
sg10
I5
sg11
S'reccallcount'
p125
sa(dp126
g3
I01
sg10
I5
sg11
S'totaltime'
p127
sasg10
I3
sg11
S'profiler_entry'
p128
sa(dp129
g1
Nsg3
I01
sg4
(lp130
(dp131
g3
I01
sg10
I5
sg11
g66
sa(dp132
g3
I01
sg10
I5
sg11
g68
sa(dp133
g3
I01
sg10
I5
sg11
g12
sa(dp134
g3
I01
sg10
I5
sg11
g14
sa(dp135
g3
I01
sg10
I5
sg11
g72
sa(dp136
g1
S'default object formatter'
p137
sg3
I01
sg10
I2
sg11
g17
sa(dp138
g3
I01
sg10
I5
sg11
g76
sa(dp139
g3
I01
sg10
I5
sg11
g19
sa(dp140
g3
I01
sg10
I5
sg11
g79
sa(dp141
g3
I01
sg10
I5
sg11
g81
sa(dp142
g3
I01
sg10
I5
sg11
g83
sa(dp143
g3
I01
sg10
I5
sg11
g21
sa(dp144
g3
I01
sg10
I5
sg11
g23
sa(dp145
g3
I01
sg10
I5
sg11
g87
sa(dp146
g3
I01
sg10
I5
sg11
g89
sa(dp147
g3
I01
sg10
I5
sg11
g91
sa(dp148
g3
I01
sg10
I5
sg11
g93
sa(dp149
g3
I01
sg10
I5
sg11
g95
sa(dp150
g1
S'T.__new__(S, ...) -> a new object with type S, a subtype of T'
p151
sg3
I01
sg10
I2
sg11
g26
sa(dp152
g1
Nsg3
I01
sg10
I2
sg11
g29
sa(dp153
g1
S'helper for pickle'
p154
sg3
I01
sg10
I2
sg11
g32
sa(dp155
g3
I01
sg10
I5
sg11
g34
sa(dp156
g3
I01
sg10
I5
sg11
g103
sa(dp157
g3
I01
sg10
I5
sg11
g36
sa(dp158
g1
S'__sizeof__() -> int\nsize of object in memory, in bytes'
p159
sg3
I01
sg10
I2
sg11
g39
sa(dp160
g3
I01
sg10
I5
sg11
g41
sa(dp161
g1
S'Abstract classes can override this to customize issubclass().\n\nThis is invoked early on by abc.ABCMeta.__subclasscheck__().\nIt should return True, False or NotImplemented.  If it returns\nNotImplemented, the normal algorithm is used.  Otherwise, it\noverrides the normal algorithm (and the outcome is cached).\n'
p162
sg3
I01
sg10
I2
sg11
g44
sa(dp163
g3
I01
sg10
I5
sg11
g111
sa(dp164
g3
I01
sg10
I5
sg11
g115
sa(dp165
g3
I01
sg10
I5
sg11
g117
sa(dp166
g3
I01
sg10
I5
sg11
g119
sa(dp167
g3
I01
sg10
I5
sg11
g121
sa(dp168
g3
I01
sg10
I5
sg11
g123
sa(dp169
g3
I01
sg10
I5
sg11
g125
sa(dp170
g3
I01
sg10
I5
sg11
g127
sasg10
I3
sg11
S'profiler_subentry'
p171
sasg10
I1
sg11
S'_lsprof'
p172
s.