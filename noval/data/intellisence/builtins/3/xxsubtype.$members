(dp0
Vname
p1
Vxxsubtype
p2
sVis_builtin
p3
I01
sVdoc
p4
Vxxsubtype is an example module showing how to subtype builtin types from C.\u000atest_descr.py in the standard test suite requires it in order to complete.\u000aIf you don't care about the examples, and don't intend to run the Python\u000atest suite, you can recompile Python without Modules/xxsubtype.c.
p5
sVchilds
p6
(lp7
(dp8
g1
V__doc__
p9
sg3
I01
sVtype
p10
L5L
sa(dp11
g1
V__loader__
p12
sg3
I01
sg10
L3L
sg6
(lp13
(dp14
g1
V__delattr__
p15
sg3
I01
sg10
L5L
sa(dp16
g1
V__dict__
p17
sg3
I01
sg10
L5L
sa(dp18
g1
V__dir__
p19
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p20
sa(dp21
g1
g9
sg3
I01
sg10
L5L
sa(dp22
g1
V__eq__
p23
sg3
I01
sg10
L5L
sa(dp24
g1
V__format__
p25
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p26
sa(dp27
g1
V__ge__
p28
sg3
I01
sg10
L5L
sa(dp29
g1
V__getattribute__
p30
sg3
I01
sg10
L5L
sa(dp31
g1
V__gt__
p32
sg3
I01
sg10
L5L
sa(dp33
g1
V__hash__
p34
sg3
I01
sg10
L5L
sa(dp35
g1
V__init__
p36
sg3
I01
sg10
L5L
sa(dp37
g1
V__init_subclass__
p38
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p39
sa(dp40
g1
V__le__
p41
sg3
I01
sg10
L5L
sa(dp42
g1
V__lt__
p43
sg3
I01
sg10
L5L
sa(dp44
g1
V__module__
p45
sg3
I01
sg10
L5L
sa(dp46
g1
V__ne__
p47
sg3
I01
sg10
L5L
sa(dp48
g1
V__new__
p49
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p50
sa(dp51
g1
V__reduce__
p52
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p53
sa(dp54
g1
V__reduce_ex__
p55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p56
sa(dp57
g1
V__repr__
p58
sg3
I01
sg10
L5L
sa(dp59
g1
V__setattr__
p60
sg3
I01
sg10
L5L
sa(dp61
g1
V__sizeof__
p62
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p63
sa(dp64
g1
V__str__
p65
sg3
I01
sg10
L5L
sa(dp66
g1
V__subclasshook__
p67
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p68
sa(dp69
g1
V__weakref__
p70
sg3
I01
sg10
L5L
sa(dp71
g1
Vcreate_module
p72
sg3
I01
sg10
L5L
sa(dp73
g1
Vexec_module
p74
sg3
I01
sg10
L5L
sa(dp75
g1
Vfind_module
p76
sg3
I01
sg10
L5L
sa(dp77
g1
Vfind_spec
p78
sg3
I01
sg10
L5L
sa(dp79
g1
Vget_code
p80
sg3
I01
sg10
L5L
sa(dp81
g1
Vget_source
p82
sg3
I01
sg10
L5L
sa(dp83
g1
Vis_package
p84
sg3
I01
sg10
L5L
sa(dp85
g1
Vload_module
p86
sg3
I01
sg10
L5L
sa(dp87
g1
Vmodule_repr
p88
sg3
I01
sg10
L5L
sasg4
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p89
sa(dp90
g1
V__name__
p91
sg3
I01
sg10
L5L
sa(dp92
g1
V__package__
p93
sg3
I01
sg10
L5L
sa(dp94
g1
V__spec__
p95
sg3
I01
sg10
L5L
sa(dp96
g1
Vbench
p97
sg3
I01
sg10
L2L
sg4
Nsa(dp98
g1
Vspamdict
p99
sg3
I01
sg10
L3L
sg6
(lp100
(dp101
g1
V__contains__
p102
sg3
I01
sg10
L2L
sg4
VTrue if D has a key k, else False.
p103
sa(dp104
g1
g15
sg3
I01
sg10
L5L
sa(dp105
g1
V__delitem__
p106
sg3
I01
sg10
L5L
sa(dp107
g1
g19
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p108
sa(dp109
g1
g9
sg3
I01
sg10
L5L
sa(dp110
g1
g23
sg3
I01
sg10
L5L
sa(dp111
g1
g25
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p112
sa(dp113
g1
g28
sg3
I01
sg10
L5L
sa(dp114
g1
g30
sg3
I01
sg10
L5L
sa(dp115
g1
V__getitem__
p116
sg3
I01
sg10
L2L
sg4
Vx.__getitem__(y) <==> x[y]
p117
sa(dp118
g1
g32
sg3
I01
sg10
L5L
sa(dp119
g1
g34
sg3
I01
sg10
L5L
sa(dp120
g1
g36
sg3
I01
sg10
L5L
sa(dp121
g1
g38
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p122
sa(dp123
g1
V__iter__
p124
sg3
I01
sg10
L5L
sa(dp125
g1
g41
sg3
I01
sg10
L5L
sa(dp126
g1
V__len__
p127
sg3
I01
sg10
L5L
sa(dp128
g1
g43
sg3
I01
sg10
L5L
sa(dp129
g1
g47
sg3
I01
sg10
L5L
sa(dp130
g1
g49
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p131
sa(dp132
g1
g52
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p133
sa(dp134
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p135
sa(dp136
g1
g58
sg3
I01
sg10
L5L
sa(dp137
g1
g60
sg3
I01
sg10
L5L
sa(dp138
g1
V__setitem__
p139
sg3
I01
sg10
L5L
sa(dp140
g1
g62
sg3
I01
sg10
L2L
sg4
VD.__sizeof__() -> size of D in memory, in bytes
p141
sa(dp142
g1
g65
sg3
I01
sg10
L5L
sa(dp143
g1
g67
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p144
sa(dp145
g1
Vclear
p146
sg3
I01
sg10
L2L
sg4
VD.clear() -> None.  Remove all items from D.
p147
sa(dp148
g1
Vcopy
p149
sg3
I01
sg10
L2L
sg4
VD.copy() -> a shallow copy of D
p150
sa(dp151
g1
Vfromkeys
p152
sg3
I01
sg10
L2L
sg4
VReturns a new dict with keys from iterable and values equal to value.
p153
sa(dp154
g1
Vget
p155
sg3
I01
sg10
L2L
sg4
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p156
sa(dp157
g1
Vgetstate
p158
sg3
I01
sg10
L2L
sg4
Vgetstate() -> state
p159
sa(dp160
g1
Vitems
p161
sg3
I01
sg10
L2L
sg4
VD.items() -> a set-like object providing a view on D's items
p162
sa(dp163
g1
Vkeys
p164
sg3
I01
sg10
L2L
sg4
VD.keys() -> a set-like object providing a view on D's keys
p165
sa(dp166
g1
Vpop
p167
sg3
I01
sg10
L2L
sg4
VD.pop(k[,d]) -> v, remove specified key and return the corresponding value.\u000aIf key is not found, d is returned if given, otherwise KeyError is raised
p168
sa(dp169
g1
Vpopitem
p170
sg3
I01
sg10
L2L
sg4
VD.popitem() -> (k, v), remove and return some (key, value) pair as a\u000a2-tuple; but raise KeyError if D is empty.
p171
sa(dp172
g1
Vsetdefault
p173
sg3
I01
sg10
L2L
sg4
VD.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
p174
sa(dp175
g1
Vsetstate
p176
sg3
I01
sg10
L2L
sg4
Vsetstate(state)
p177
sa(dp178
g1
Vstate
p179
sg3
I01
sg10
L5L
sa(dp180
g1
Vupdate
p181
sg3
I01
sg10
L2L
sg4
VD.update([E, ]**F) -> None.  Update D from dict/iterable E and F.\u000aIf E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\u000aIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\u000aIn either case, this is followed by: for k in F:  D[k] = F[k]
p182
sa(dp183
g1
Vvalues
p184
sg3
I01
sg10
L2L
sg4
VD.values() -> an object providing a view on D's values
p185
sasg4
Nsa(dp186
g1
Vspamlist
p187
sg3
I01
sg10
L3L
sg6
(lp188
(dp189
g1
V__add__
p190
sg3
I01
sg10
L5L
sa(dp191
g1
g102
sg3
I01
sg10
L5L
sa(dp192
g1
g15
sg3
I01
sg10
L5L
sa(dp193
g1
g106
sg3
I01
sg10
L5L
sa(dp194
g1
g19
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p195
sa(dp196
g1
g9
sg3
I01
sg10
L5L
sa(dp197
g1
g23
sg3
I01
sg10
L5L
sa(dp198
g1
g25
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p199
sa(dp200
g1
g28
sg3
I01
sg10
L5L
sa(dp201
g1
g30
sg3
I01
sg10
L5L
sa(dp202
g1
g116
sg3
I01
sg10
L2L
sg4
Vx.__getitem__(y) <==> x[y]
p203
sa(dp204
g1
g32
sg3
I01
sg10
L5L
sa(dp205
g1
g34
sg3
I01
sg10
L5L
sa(dp206
g1
V__iadd__
p207
sg3
I01
sg10
L5L
sa(dp208
g1
V__imul__
p209
sg3
I01
sg10
L5L
sa(dp210
g1
g36
sg3
I01
sg10
L5L
sa(dp211
g1
g38
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p212
sa(dp213
g1
g124
sg3
I01
sg10
L5L
sa(dp214
g1
g41
sg3
I01
sg10
L5L
sa(dp215
g1
g127
sg3
I01
sg10
L5L
sa(dp216
g1
g43
sg3
I01
sg10
L5L
sa(dp217
g1
V__mul__
p218
sg3
I01
sg10
L5L
sa(dp219
g1
g47
sg3
I01
sg10
L5L
sa(dp220
g1
g49
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p221
sa(dp222
g1
g52
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p223
sa(dp224
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p225
sa(dp226
g1
g58
sg3
I01
sg10
L5L
sa(dp227
g1
V__reversed__
p228
sg3
I01
sg10
L2L
sg4
VL.__reversed__() -- return a reverse iterator over the list
p229
sa(dp230
g1
V__rmul__
p231
sg3
I01
sg10
L5L
sa(dp232
g1
g60
sg3
I01
sg10
L5L
sa(dp233
g1
g139
sg3
I01
sg10
L5L
sa(dp234
g1
g62
sg3
I01
sg10
L2L
sg4
VL.__sizeof__() -- size of L in memory, in bytes
p235
sa(dp236
g1
g65
sg3
I01
sg10
L5L
sa(dp237
g1
g67
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p238
sa(dp239
g1
Vappend
p240
sg3
I01
sg10
L2L
sg4
VL.append(object) -> None -- append object to end
p241
sa(dp242
g1
Vclassmeth
p243
sg3
I01
sg10
L2L
sg4
Vclassmeth(*args, **kw)
p244
sa(dp245
g1
g146
sg3
I01
sg10
L2L
sg4
VL.clear() -> None -- remove all items from L
p246
sa(dp247
g1
g149
sg3
I01
sg10
L2L
sg4
VL.copy() -> list -- a shallow copy of L
p248
sa(dp249
g1
Vcount
p250
sg3
I01
sg10
L2L
sg4
VL.count(value) -> integer -- return number of occurrences of value
p251
sa(dp252
g1
Vextend
p253
sg3
I01
sg10
L2L
sg4
VL.extend(iterable) -> None -- extend list by appending elements from the iterable
p254
sa(dp255
g1
g158
sg3
I01
sg10
L2L
sg4
Vgetstate() -> state
p256
sa(dp257
g1
Vindex
p258
sg3
I01
sg10
L2L
sg4
VL.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p259
sa(dp260
g1
Vinsert
p261
sg3
I01
sg10
L2L
sg4
VL.insert(index, object) -- insert object before index
p262
sa(dp263
g1
g167
sg3
I01
sg10
L2L
sg4
VL.pop([index]) -> item -- remove and return item at index (default last).\u000aRaises IndexError if list is empty or index is out of range.
p264
sa(dp265
g1
Vremove
p266
sg3
I01
sg10
L2L
sg4
VL.remove(value) -> None -- remove first occurrence of value.\u000aRaises ValueError if the value is not present.
p267
sa(dp268
g1
Vreverse
p269
sg3
I01
sg10
L2L
sg4
VL.reverse() -- reverse *IN PLACE*
p270
sa(dp271
g1
g176
sg3
I01
sg10
L2L
sg4
Vsetstate(state)
p272
sa(dp273
g1
Vsort
p274
sg3
I01
sg10
L2L
sg4
VL.sort(key=None, reverse=False) -> None -- stable sort *IN PLACE*
p275
sa(dp276
g1
g179
sg3
I01
sg10
L5L
sa(dp277
g1
Vstaticmeth
p278
sg3
I01
sg10
L2L
sg4
Vstaticmeth(*args, **kw)
p279
sasg4
Nsasg10
L1L
s.