(dp0
Vname
p1
Vcmath
p2
sVis_builtin
p3
I01
sVdoc
p4
VThis module is always available. It provides access to mathematical\u000afunctions for complex numbers.
p5
sVchilds
p6
(lp7
(dp8
g1
V__doc__
p9
sg3
I01
sVtype
p10
L5L
sa(dp11
g1
V__loader__
p12
sg3
I01
sg10
L3L
sg6
(lp13
(dp14
g1
V__delattr__
p15
sg3
I01
sg10
L5L
sa(dp16
g1
V__dict__
p17
sg3
I01
sg10
L5L
sa(dp18
g1
V__dir__
p19
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p20
sa(dp21
g1
g9
sg3
I01
sg10
L5L
sa(dp22
g1
V__eq__
p23
sg3
I01
sg10
L5L
sa(dp24
g1
V__format__
p25
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p26
sa(dp27
g1
V__ge__
p28
sg3
I01
sg10
L5L
sa(dp29
g1
V__getattribute__
p30
sg3
I01
sg10
L5L
sa(dp31
g1
V__gt__
p32
sg3
I01
sg10
L5L
sa(dp33
g1
V__hash__
p34
sg3
I01
sg10
L5L
sa(dp35
g1
V__init__
p36
sg3
I01
sg10
L5L
sa(dp37
g1
V__init_subclass__
p38
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p39
sa(dp40
g1
V__le__
p41
sg3
I01
sg10
L5L
sa(dp42
g1
V__lt__
p43
sg3
I01
sg10
L5L
sa(dp44
g1
V__module__
p45
sg3
I01
sg10
L5L
sa(dp46
g1
V__ne__
p47
sg3
I01
sg10
L5L
sa(dp48
g1
V__new__
p49
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p50
sa(dp51
g1
V__reduce__
p52
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p53
sa(dp54
g1
V__reduce_ex__
p55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p56
sa(dp57
g1
V__repr__
p58
sg3
I01
sg10
L5L
sa(dp59
g1
V__setattr__
p60
sg3
I01
sg10
L5L
sa(dp61
g1
V__sizeof__
p62
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p63
sa(dp64
g1
V__str__
p65
sg3
I01
sg10
L5L
sa(dp66
g1
V__subclasshook__
p67
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p68
sa(dp69
g1
V__weakref__
p70
sg3
I01
sg10
L5L
sa(dp71
g1
Vcreate_module
p72
sg3
I01
sg10
L5L
sa(dp73
g1
Vexec_module
p74
sg3
I01
sg10
L5L
sa(dp75
g1
Vfind_module
p76
sg3
I01
sg10
L5L
sa(dp77
g1
Vfind_spec
p78
sg3
I01
sg10
L5L
sa(dp79
g1
Vget_code
p80
sg3
I01
sg10
L5L
sa(dp81
g1
Vget_source
p82
sg3
I01
sg10
L5L
sa(dp83
g1
Vis_package
p84
sg3
I01
sg10
L5L
sa(dp85
g1
Vload_module
p86
sg3
I01
sg10
L5L
sa(dp87
g1
Vmodule_repr
p88
sg3
I01
sg10
L5L
sasg4
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p89
sa(dp90
g1
V__name__
p91
sg3
I01
sg10
L5L
sa(dp92
g1
V__package__
p93
sg3
I01
sg10
L5L
sa(dp94
g1
V__spec__
p95
sg3
I01
sg10
L5L
sa(dp96
g1
Vacos
p97
sg3
I01
sg10
L2L
sg4
VReturn the arc cosine of z.
p98
sa(dp99
g1
Vacosh
p100
sg3
I01
sg10
L2L
sg4
VReturn the inverse hyperbolic cosine of z.
p101
sa(dp102
g1
Vasin
p103
sg3
I01
sg10
L2L
sg4
VReturn the arc sine of z.
p104
sa(dp105
g1
Vasinh
p106
sg3
I01
sg10
L2L
sg4
VReturn the inverse hyperbolic sine of z.
p107
sa(dp108
g1
Vatan
p109
sg3
I01
sg10
L2L
sg4
VReturn the arc tangent of z.
p110
sa(dp111
g1
Vatanh
p112
sg3
I01
sg10
L2L
sg4
VReturn the inverse hyperbolic tangent of z.
p113
sa(dp114
g1
Vcos
p115
sg3
I01
sg10
L2L
sg4
VReturn the cosine of z.
p116
sa(dp117
g1
Vcosh
p118
sg3
I01
sg10
L2L
sg4
VReturn the hyperbolic cosine of z.
p119
sa(dp120
g1
Ve
p121
sg3
I01
sg10
L5L
sa(dp122
g1
Vexp
p123
sg3
I01
sg10
L2L
sg4
VReturn the exponential value e**z.
p124
sa(dp125
g1
Vinf
p126
sg3
I01
sg10
L5L
sa(dp127
g1
Vinfj
p128
sg3
I01
sg10
L5L
sa(dp129
g1
Visclose
p130
sg3
I01
sg10
L2L
sg4
VDetermine whether two complex numbers are close in value.\u000a\u000a  rel_tol\u000a    maximum difference for being considered "close", relative to the\u000a    magnitude of the input values\u000a  abs_tol\u000a    maximum difference for being considered "close", regardless of the\u000a    magnitude of the input values\u000a\u000aReturn True if a is close in value to b, and False otherwise.\u000a\u000aFor the values to be considered close, the difference between them must be\u000asmaller than at least one of the tolerances.\u000a\u000a-inf, inf and NaN behave similarly to the IEEE 754 Standard. That is, NaN is\u000anot close to anything, even itself. inf and -inf are only close to themselves.
p131
sa(dp132
g1
Visfinite
p133
sg3
I01
sg10
L2L
sg4
VReturn True if both the real and imaginary parts of z are finite, else False.
p134
sa(dp135
g1
Visinf
p136
sg3
I01
sg10
L2L
sg4
VChecks if the real or imaginary part of z is infinite.
p137
sa(dp138
g1
Visnan
p139
sg3
I01
sg10
L2L
sg4
VChecks if the real or imaginary part of z not a number (NaN).
p140
sa(dp141
g1
Vlog
p142
sg3
I01
sg10
L2L
sg4
VThe logarithm of z to the given base.\u000a\u000aIf the base not specified, returns the natural logarithm (base e) of z.
p143
sa(dp144
g1
Vlog10
p145
sg3
I01
sg10
L2L
sg4
VReturn the base-10 logarithm of z.
p146
sa(dp147
g1
Vnan
p148
sg3
I01
sg10
L5L
sa(dp149
g1
Vnanj
p150
sg3
I01
sg10
L5L
sa(dp151
g1
Vphase
p152
sg3
I01
sg10
L2L
sg4
VReturn argument, also known as the phase angle, of a complex.
p153
sa(dp154
g1
Vpi
p155
sg3
I01
sg10
L5L
sa(dp156
g1
Vpolar
p157
sg3
I01
sg10
L2L
sg4
VConvert a complex from rectangular coordinates to polar coordinates.\u000a\u000ar is the distance from 0 and phi the phase angle.
p158
sa(dp159
g1
Vrect
p160
sg3
I01
sg10
L2L
sg4
VConvert from polar coordinates to rectangular coordinates.
p161
sa(dp162
g1
Vsin
p163
sg3
I01
sg10
L2L
sg4
VReturn the sine of z.
p164
sa(dp165
g1
Vsinh
p166
sg3
I01
sg10
L2L
sg4
VReturn the hyperbolic sine of z.
p167
sa(dp168
g1
Vsqrt
p169
sg3
I01
sg10
L2L
sg4
VReturn the square root of z.
p170
sa(dp171
g1
Vtan
p172
sg3
I01
sg10
L2L
sg4
VReturn the tangent of z.
p173
sa(dp174
g1
Vtanh
p175
sg3
I01
sg10
L2L
sg4
VReturn the hyperbolic tangent of z.
p176
sa(dp177
g1
Vtau
p178
sg3
I01
sg10
L5L
sasg10
L1L
s.