(dp0
Vname
p1
Vgc
p2
sVis_builtin
p3
I01
sVdoc
p4
VThis module provides access to the garbage collector for reference cycles.\u000a\u000aenable() -- Enable automatic garbage collection.\u000adisable() -- Disable automatic garbage collection.\u000aisenabled() -- Returns true if automatic collection is enabled.\u000acollect() -- Do a full collection right now.\u000aget_count() -- Return the current collection counts.\u000aget_stats() -- Return list of dictionaries containing per-generation stats.\u000aset_debug() -- Set debugging flags.\u000aget_debug() -- Get debugging flags.\u000aset_threshold() -- Set the collection thresholds.\u000aget_threshold() -- Return the current the collection thresholds.\u000aget_objects() -- Return a list of all objects tracked by the collector.\u000ais_tracked() -- Returns true if a given object is tracked.\u000aget_referrers() -- Return the list of objects that refer to an object.\u000aget_referents() -- Return the list of objects that an object refers to.\u000a
p5
sVchilds
p6
(lp7
(dp8
g1
VDEBUG_COLLECTABLE
p9
sg3
I01
sVtype
p10
L5L
sa(dp11
g1
VDEBUG_LEAK
p12
sg3
I01
sg10
L5L
sa(dp13
g1
VDEBUG_SAVEALL
p14
sg3
I01
sg10
L5L
sa(dp15
g1
VDEBUG_STATS
p16
sg3
I01
sg10
L5L
sa(dp17
g1
VDEBUG_UNCOLLECTABLE
p18
sg3
I01
sg10
L5L
sa(dp19
g1
V__doc__
p20
sg3
I01
sg10
L5L
sa(dp21
g1
V__loader__
p22
sg3
I01
sg10
L3L
sg6
(lp23
(dp24
g1
V__delattr__
p25
sg3
I01
sg10
L5L
sa(dp26
g1
V__dict__
p27
sg3
I01
sg10
L5L
sa(dp28
g1
V__dir__
p29
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p30
sa(dp31
g1
g20
sg3
I01
sg10
L5L
sa(dp32
g1
V__eq__
p33
sg3
I01
sg10
L5L
sa(dp34
g1
V__format__
p35
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p36
sa(dp37
g1
V__ge__
p38
sg3
I01
sg10
L5L
sa(dp39
g1
V__getattribute__
p40
sg3
I01
sg10
L5L
sa(dp41
g1
V__gt__
p42
sg3
I01
sg10
L5L
sa(dp43
g1
V__hash__
p44
sg3
I01
sg10
L5L
sa(dp45
g1
V__init__
p46
sg3
I01
sg10
L5L
sa(dp47
g1
V__init_subclass__
p48
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p49
sa(dp50
g1
V__le__
p51
sg3
I01
sg10
L5L
sa(dp52
g1
V__lt__
p53
sg3
I01
sg10
L5L
sa(dp54
g1
V__module__
p55
sg3
I01
sg10
L5L
sa(dp56
g1
V__ne__
p57
sg3
I01
sg10
L5L
sa(dp58
g1
V__new__
p59
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p60
sa(dp61
g1
V__reduce__
p62
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p63
sa(dp64
g1
V__reduce_ex__
p65
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p66
sa(dp67
g1
V__repr__
p68
sg3
I01
sg10
L5L
sa(dp69
g1
V__setattr__
p70
sg3
I01
sg10
L5L
sa(dp71
g1
V__sizeof__
p72
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p73
sa(dp74
g1
V__str__
p75
sg3
I01
sg10
L5L
sa(dp76
g1
V__subclasshook__
p77
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p78
sa(dp79
g1
V__weakref__
p80
sg3
I01
sg10
L5L
sa(dp81
g1
Vcreate_module
p82
sg3
I01
sg10
L5L
sa(dp83
g1
Vexec_module
p84
sg3
I01
sg10
L5L
sa(dp85
g1
Vfind_module
p86
sg3
I01
sg10
L5L
sa(dp87
g1
Vfind_spec
p88
sg3
I01
sg10
L5L
sa(dp89
g1
Vget_code
p90
sg3
I01
sg10
L5L
sa(dp91
g1
Vget_source
p92
sg3
I01
sg10
L5L
sa(dp93
g1
Vis_package
p94
sg3
I01
sg10
L5L
sa(dp95
g1
Vload_module
p96
sg3
I01
sg10
L5L
sa(dp97
g1
Vmodule_repr
p98
sg3
I01
sg10
L5L
sasg4
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p99
sa(dp100
g1
V__name__
p101
sg3
I01
sg10
L5L
sa(dp102
g1
V__package__
p103
sg3
I01
sg10
L5L
sa(dp104
g1
V__spec__
p105
sg3
I01
sg10
L5L
sa(dp106
g1
Vcallbacks
p107
sg3
I01
sg10
L5L
sa(dp108
g1
Vcollect
p109
sg3
I01
sg10
L2L
sg4
Vcollect([generation]) -> n\u000a\u000aWith no arguments, run a full collection.  The optional argument\u000amay be an integer specifying which generation to collect.  A ValueError\u000ais raised if the generation number is invalid.\u000a\u000aThe number of unreachable objects is returned.\u000a
p110
sa(dp111
g1
Vdisable
p112
sg3
I01
sg10
L2L
sg4
Vdisable() -> None\u000a\u000aDisable automatic garbage collection.\u000a
p113
sa(dp114
g1
Venable
p115
sg3
I01
sg10
L2L
sg4
Venable() -> None\u000a\u000aEnable automatic garbage collection.\u000a
p116
sa(dp117
g1
Vgarbage
p118
sg3
I01
sg10
L5L
sa(dp119
g1
Vget_count
p120
sg3
I01
sg10
L2L
sg4
Vget_count() -> (count0, count1, count2)\u000a\u000aReturn the current collection counts\u000a
p121
sa(dp122
g1
Vget_debug
p123
sg3
I01
sg10
L2L
sg4
Vget_debug() -> flags\u000a\u000aGet the garbage collection debugging flags.\u000a
p124
sa(dp125
g1
Vget_objects
p126
sg3
I01
sg10
L2L
sg4
Vget_objects() -> [...]\u000a\u000aReturn a list of objects tracked by the collector (excluding the list\u000areturned).\u000a
p127
sa(dp128
g1
Vget_referents
p129
sg3
I01
sg10
L2L
sg4
Vget_referents(*objs) -> list\u000aReturn the list of objects that are directly referred to by objs.
p130
sa(dp131
g1
Vget_referrers
p132
sg3
I01
sg10
L2L
sg4
Vget_referrers(*objs) -> list\u000aReturn the list of objects that directly refer to any of objs.
p133
sa(dp134
g1
Vget_stats
p135
sg3
I01
sg10
L2L
sg4
Vget_stats() -> [...]\u000a\u000aReturn a list of dictionaries containing per-generation statistics.\u000a
p136
sa(dp137
g1
Vget_threshold
p138
sg3
I01
sg10
L2L
sg4
Vget_threshold() -> (threshold0, threshold1, threshold2)\u000a\u000aReturn the current collection thresholds\u000a
p139
sa(dp140
g1
Vis_tracked
p141
sg3
I01
sg10
L2L
sg4
Vis_tracked(obj) -> bool\u000a\u000aReturns true if the object is tracked by the garbage collector.\u000aSimple atomic objects will return false.\u000a
p142
sa(dp143
g1
Visenabled
p144
sg3
I01
sg10
L2L
sg4
Visenabled() -> status\u000a\u000aReturns true if automatic garbage collection is enabled.\u000a
p145
sa(dp146
g1
Vset_debug
p147
sg3
I01
sg10
L2L
sg4
Vset_debug(flags) -> None\u000a\u000aSet the garbage collection debugging flags. Debugging information is\u000awritten to sys.stderr.\u000a\u000aflags is an integer and can have the following bits turned on:\u000a\u000a  DEBUG_STATS - Print statistics during collection.\u000a  DEBUG_COLLECTABLE - Print collectable objects found.\u000a  DEBUG_UNCOLLECTABLE - Print unreachable but uncollectable objects found.\u000a  DEBUG_SAVEALL - Save objects to gc.garbage rather than freeing them.\u000a  DEBUG_LEAK - Debug leaking programs (everything but STATS).\u000a
p148
sa(dp149
g1
Vset_threshold
p150
sg3
I01
sg10
L2L
sg4
Vset_threshold(threshold0, [threshold1, threshold2]) -> None\u000a\u000aSets the collection thresholds.  Setting threshold0 to zero disables\u000acollection.\u000a
p151
sasg10
L1L
s.