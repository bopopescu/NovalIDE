(dp0
Vname
p1
Vbuiltins
p2
sVis_builtin
p3
I01
sVdoc
p4
VBuilt-in functions, exceptions, and other objects.\u000a\u000aNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.
p5
sVchilds
p6
(lp7
(dp8
g1
VArithmeticError
p9
sg3
I01
sVtype
p10
L3L
sg6
(lp11
(dp12
g1
V__cause__
p13
sg3
I01
sg10
L5L
sa(dp14
g1
V__context__
p15
sg3
I01
sg10
L5L
sa(dp16
g1
V__delattr__
p17
sg3
I01
sg10
L5L
sa(dp18
g1
V__dict__
p19
sg3
I01
sg10
L5L
sa(dp20
g1
V__dir__
p21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p22
sa(dp23
g1
V__doc__
p24
sg3
I01
sg10
L5L
sa(dp25
g1
V__eq__
p26
sg3
I01
sg10
L5L
sa(dp27
g1
V__format__
p28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p29
sa(dp30
g1
V__ge__
p31
sg3
I01
sg10
L5L
sa(dp32
g1
V__getattribute__
p33
sg3
I01
sg10
L5L
sa(dp34
g1
V__gt__
p35
sg3
I01
sg10
L5L
sa(dp36
g1
V__hash__
p37
sg3
I01
sg10
L5L
sa(dp38
g1
V__init__
p39
sg3
I01
sg10
L5L
sa(dp40
g1
V__init_subclass__
p41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p42
sa(dp43
g1
V__le__
p44
sg3
I01
sg10
L5L
sa(dp45
g1
V__lt__
p46
sg3
I01
sg10
L5L
sa(dp47
g1
V__ne__
p48
sg3
I01
sg10
L5L
sa(dp49
g1
V__new__
p50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p51
sa(dp52
g1
V__reduce__
p53
sg3
I01
sg10
L2L
sg4
Nsa(dp54
g1
V__reduce_ex__
p55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p56
sa(dp57
g1
V__repr__
p58
sg3
I01
sg10
L5L
sa(dp59
g1
V__setattr__
p60
sg3
I01
sg10
L5L
sa(dp61
g1
V__setstate__
p62
sg3
I01
sg10
L2L
sg4
Nsa(dp63
g1
V__sizeof__
p64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p65
sa(dp66
g1
V__str__
p67
sg3
I01
sg10
L5L
sa(dp68
g1
V__subclasshook__
p69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p70
sa(dp71
g1
V__suppress_context__
p72
sg3
I01
sg10
L5L
sa(dp73
g1
V__traceback__
p74
sg3
I01
sg10
L5L
sa(dp75
g1
Vargs
p76
sg3
I01
sg10
L5L
sa(dp77
g1
Vwith_traceback
p78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p79
sasg4
VBase class for arithmetic errors.
p80
sa(dp81
g1
VAssertionError
p82
sg3
I01
sg10
L3L
sg6
(lp83
(dp84
g1
g13
sg3
I01
sg10
L5L
sa(dp85
g1
g15
sg3
I01
sg10
L5L
sa(dp86
g1
g17
sg3
I01
sg10
L5L
sa(dp87
g1
g19
sg3
I01
sg10
L5L
sa(dp88
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p89
sa(dp90
g1
g24
sg3
I01
sg10
L5L
sa(dp91
g1
g26
sg3
I01
sg10
L5L
sa(dp92
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p93
sa(dp94
g1
g31
sg3
I01
sg10
L5L
sa(dp95
g1
g33
sg3
I01
sg10
L5L
sa(dp96
g1
g35
sg3
I01
sg10
L5L
sa(dp97
g1
g37
sg3
I01
sg10
L5L
sa(dp98
g1
g39
sg3
I01
sg10
L5L
sa(dp99
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p100
sa(dp101
g1
g44
sg3
I01
sg10
L5L
sa(dp102
g1
g46
sg3
I01
sg10
L5L
sa(dp103
g1
g48
sg3
I01
sg10
L5L
sa(dp104
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p105
sa(dp106
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp107
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p108
sa(dp109
g1
g58
sg3
I01
sg10
L5L
sa(dp110
g1
g60
sg3
I01
sg10
L5L
sa(dp111
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp112
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p113
sa(dp114
g1
g67
sg3
I01
sg10
L5L
sa(dp115
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p116
sa(dp117
g1
g72
sg3
I01
sg10
L5L
sa(dp118
g1
g74
sg3
I01
sg10
L5L
sa(dp119
g1
g76
sg3
I01
sg10
L5L
sa(dp120
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p121
sasg4
VAssertion failed.
p122
sa(dp123
g1
VAttributeError
p124
sg3
I01
sg10
L3L
sg6
(lp125
(dp126
g1
g13
sg3
I01
sg10
L5L
sa(dp127
g1
g15
sg3
I01
sg10
L5L
sa(dp128
g1
g17
sg3
I01
sg10
L5L
sa(dp129
g1
g19
sg3
I01
sg10
L5L
sa(dp130
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p131
sa(dp132
g1
g24
sg3
I01
sg10
L5L
sa(dp133
g1
g26
sg3
I01
sg10
L5L
sa(dp134
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p135
sa(dp136
g1
g31
sg3
I01
sg10
L5L
sa(dp137
g1
g33
sg3
I01
sg10
L5L
sa(dp138
g1
g35
sg3
I01
sg10
L5L
sa(dp139
g1
g37
sg3
I01
sg10
L5L
sa(dp140
g1
g39
sg3
I01
sg10
L5L
sa(dp141
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p142
sa(dp143
g1
g44
sg3
I01
sg10
L5L
sa(dp144
g1
g46
sg3
I01
sg10
L5L
sa(dp145
g1
g48
sg3
I01
sg10
L5L
sa(dp146
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p147
sa(dp148
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp149
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p150
sa(dp151
g1
g58
sg3
I01
sg10
L5L
sa(dp152
g1
g60
sg3
I01
sg10
L5L
sa(dp153
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp154
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p155
sa(dp156
g1
g67
sg3
I01
sg10
L5L
sa(dp157
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p158
sa(dp159
g1
g72
sg3
I01
sg10
L5L
sa(dp160
g1
g74
sg3
I01
sg10
L5L
sa(dp161
g1
g76
sg3
I01
sg10
L5L
sa(dp162
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p163
sasg4
VAttribute not found.
p164
sa(dp165
g1
VBaseException
p166
sg3
I01
sg10
L3L
sg6
(lp167
(dp168
g1
g13
sg3
I01
sg10
L5L
sa(dp169
g1
g15
sg3
I01
sg10
L5L
sa(dp170
g1
g17
sg3
I01
sg10
L5L
sa(dp171
g1
g19
sg3
I01
sg10
L5L
sa(dp172
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p173
sa(dp174
g1
g24
sg3
I01
sg10
L5L
sa(dp175
g1
g26
sg3
I01
sg10
L5L
sa(dp176
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p177
sa(dp178
g1
g31
sg3
I01
sg10
L5L
sa(dp179
g1
g33
sg3
I01
sg10
L5L
sa(dp180
g1
g35
sg3
I01
sg10
L5L
sa(dp181
g1
g37
sg3
I01
sg10
L5L
sa(dp182
g1
g39
sg3
I01
sg10
L5L
sa(dp183
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p184
sa(dp185
g1
g44
sg3
I01
sg10
L5L
sa(dp186
g1
g46
sg3
I01
sg10
L5L
sa(dp187
g1
g48
sg3
I01
sg10
L5L
sa(dp188
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p189
sa(dp190
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp191
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p192
sa(dp193
g1
g58
sg3
I01
sg10
L5L
sa(dp194
g1
g60
sg3
I01
sg10
L5L
sa(dp195
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp196
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p197
sa(dp198
g1
g67
sg3
I01
sg10
L5L
sa(dp199
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p200
sa(dp201
g1
g72
sg3
I01
sg10
L5L
sa(dp202
g1
g74
sg3
I01
sg10
L5L
sa(dp203
g1
g76
sg3
I01
sg10
L5L
sa(dp204
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p205
sasg4
VCommon base class for all exceptions
p206
sa(dp207
g1
VBlockingIOError
p208
sg3
I01
sg10
L3L
sg6
(lp209
(dp210
g1
g13
sg3
I01
sg10
L5L
sa(dp211
g1
g15
sg3
I01
sg10
L5L
sa(dp212
g1
g17
sg3
I01
sg10
L5L
sa(dp213
g1
g19
sg3
I01
sg10
L5L
sa(dp214
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p215
sa(dp216
g1
g24
sg3
I01
sg10
L5L
sa(dp217
g1
g26
sg3
I01
sg10
L5L
sa(dp218
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p219
sa(dp220
g1
g31
sg3
I01
sg10
L5L
sa(dp221
g1
g33
sg3
I01
sg10
L5L
sa(dp222
g1
g35
sg3
I01
sg10
L5L
sa(dp223
g1
g37
sg3
I01
sg10
L5L
sa(dp224
g1
g39
sg3
I01
sg10
L5L
sa(dp225
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p226
sa(dp227
g1
g44
sg3
I01
sg10
L5L
sa(dp228
g1
g46
sg3
I01
sg10
L5L
sa(dp229
g1
g48
sg3
I01
sg10
L5L
sa(dp230
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p231
sa(dp232
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp233
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p234
sa(dp235
g1
g58
sg3
I01
sg10
L5L
sa(dp236
g1
g60
sg3
I01
sg10
L5L
sa(dp237
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp238
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p239
sa(dp240
g1
g67
sg3
I01
sg10
L5L
sa(dp241
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p242
sa(dp243
g1
g72
sg3
I01
sg10
L5L
sa(dp244
g1
g74
sg3
I01
sg10
L5L
sa(dp245
g1
g76
sg3
I01
sg10
L5L
sa(dp246
g1
Vcharacters_written
p247
sg3
I01
sg10
L5L
sa(dp248
g1
Verrno
p249
sg3
I01
sg10
L5L
sa(dp250
g1
Vfilename
p251
sg3
I01
sg10
L5L
sa(dp252
g1
Vfilename2
p253
sg3
I01
sg10
L5L
sa(dp254
g1
Vstrerror
p255
sg3
I01
sg10
L5L
sa(dp256
g1
Vwinerror
p257
sg3
I01
sg10
L5L
sa(dp258
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p259
sasg4
VI/O operation would block.
p260
sa(dp261
g1
VBrokenPipeError
p262
sg3
I01
sg10
L3L
sg6
(lp263
(dp264
g1
g13
sg3
I01
sg10
L5L
sa(dp265
g1
g15
sg3
I01
sg10
L5L
sa(dp266
g1
g17
sg3
I01
sg10
L5L
sa(dp267
g1
g19
sg3
I01
sg10
L5L
sa(dp268
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p269
sa(dp270
g1
g24
sg3
I01
sg10
L5L
sa(dp271
g1
g26
sg3
I01
sg10
L5L
sa(dp272
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p273
sa(dp274
g1
g31
sg3
I01
sg10
L5L
sa(dp275
g1
g33
sg3
I01
sg10
L5L
sa(dp276
g1
g35
sg3
I01
sg10
L5L
sa(dp277
g1
g37
sg3
I01
sg10
L5L
sa(dp278
g1
g39
sg3
I01
sg10
L5L
sa(dp279
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p280
sa(dp281
g1
g44
sg3
I01
sg10
L5L
sa(dp282
g1
g46
sg3
I01
sg10
L5L
sa(dp283
g1
g48
sg3
I01
sg10
L5L
sa(dp284
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p285
sa(dp286
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp287
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p288
sa(dp289
g1
g58
sg3
I01
sg10
L5L
sa(dp290
g1
g60
sg3
I01
sg10
L5L
sa(dp291
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp292
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p293
sa(dp294
g1
g67
sg3
I01
sg10
L5L
sa(dp295
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p296
sa(dp297
g1
g72
sg3
I01
sg10
L5L
sa(dp298
g1
g74
sg3
I01
sg10
L5L
sa(dp299
g1
g76
sg3
I01
sg10
L5L
sa(dp300
g1
g247
sg3
I01
sg10
L5L
sa(dp301
g1
g249
sg3
I01
sg10
L5L
sa(dp302
g1
g251
sg3
I01
sg10
L5L
sa(dp303
g1
g253
sg3
I01
sg10
L5L
sa(dp304
g1
g255
sg3
I01
sg10
L5L
sa(dp305
g1
g257
sg3
I01
sg10
L5L
sa(dp306
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p307
sasg4
VBroken pipe.
p308
sa(dp309
g1
VBufferError
p310
sg3
I01
sg10
L3L
sg6
(lp311
(dp312
g1
g13
sg3
I01
sg10
L5L
sa(dp313
g1
g15
sg3
I01
sg10
L5L
sa(dp314
g1
g17
sg3
I01
sg10
L5L
sa(dp315
g1
g19
sg3
I01
sg10
L5L
sa(dp316
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p317
sa(dp318
g1
g24
sg3
I01
sg10
L5L
sa(dp319
g1
g26
sg3
I01
sg10
L5L
sa(dp320
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p321
sa(dp322
g1
g31
sg3
I01
sg10
L5L
sa(dp323
g1
g33
sg3
I01
sg10
L5L
sa(dp324
g1
g35
sg3
I01
sg10
L5L
sa(dp325
g1
g37
sg3
I01
sg10
L5L
sa(dp326
g1
g39
sg3
I01
sg10
L5L
sa(dp327
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p328
sa(dp329
g1
g44
sg3
I01
sg10
L5L
sa(dp330
g1
g46
sg3
I01
sg10
L5L
sa(dp331
g1
g48
sg3
I01
sg10
L5L
sa(dp332
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p333
sa(dp334
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp335
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p336
sa(dp337
g1
g58
sg3
I01
sg10
L5L
sa(dp338
g1
g60
sg3
I01
sg10
L5L
sa(dp339
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp340
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p341
sa(dp342
g1
g67
sg3
I01
sg10
L5L
sa(dp343
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p344
sa(dp345
g1
g72
sg3
I01
sg10
L5L
sa(dp346
g1
g74
sg3
I01
sg10
L5L
sa(dp347
g1
g76
sg3
I01
sg10
L5L
sa(dp348
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p349
sasg4
VBuffer error.
p350
sa(dp351
g1
VBytesWarning
p352
sg3
I01
sg10
L3L
sg6
(lp353
(dp354
g1
g13
sg3
I01
sg10
L5L
sa(dp355
g1
g15
sg3
I01
sg10
L5L
sa(dp356
g1
g17
sg3
I01
sg10
L5L
sa(dp357
g1
g19
sg3
I01
sg10
L5L
sa(dp358
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p359
sa(dp360
g1
g24
sg3
I01
sg10
L5L
sa(dp361
g1
g26
sg3
I01
sg10
L5L
sa(dp362
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p363
sa(dp364
g1
g31
sg3
I01
sg10
L5L
sa(dp365
g1
g33
sg3
I01
sg10
L5L
sa(dp366
g1
g35
sg3
I01
sg10
L5L
sa(dp367
g1
g37
sg3
I01
sg10
L5L
sa(dp368
g1
g39
sg3
I01
sg10
L5L
sa(dp369
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p370
sa(dp371
g1
g44
sg3
I01
sg10
L5L
sa(dp372
g1
g46
sg3
I01
sg10
L5L
sa(dp373
g1
g48
sg3
I01
sg10
L5L
sa(dp374
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p375
sa(dp376
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp377
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p378
sa(dp379
g1
g58
sg3
I01
sg10
L5L
sa(dp380
g1
g60
sg3
I01
sg10
L5L
sa(dp381
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp382
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p383
sa(dp384
g1
g67
sg3
I01
sg10
L5L
sa(dp385
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p386
sa(dp387
g1
g72
sg3
I01
sg10
L5L
sa(dp388
g1
g74
sg3
I01
sg10
L5L
sa(dp389
g1
g76
sg3
I01
sg10
L5L
sa(dp390
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p391
sasg4
VBase class for warnings about bytes and buffer related problems, mostly\u000arelated to conversion from str or comparing to str.
p392
sa(dp393
g1
VChildProcessError
p394
sg3
I01
sg10
L3L
sg6
(lp395
(dp396
g1
g13
sg3
I01
sg10
L5L
sa(dp397
g1
g15
sg3
I01
sg10
L5L
sa(dp398
g1
g17
sg3
I01
sg10
L5L
sa(dp399
g1
g19
sg3
I01
sg10
L5L
sa(dp400
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p401
sa(dp402
g1
g24
sg3
I01
sg10
L5L
sa(dp403
g1
g26
sg3
I01
sg10
L5L
sa(dp404
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p405
sa(dp406
g1
g31
sg3
I01
sg10
L5L
sa(dp407
g1
g33
sg3
I01
sg10
L5L
sa(dp408
g1
g35
sg3
I01
sg10
L5L
sa(dp409
g1
g37
sg3
I01
sg10
L5L
sa(dp410
g1
g39
sg3
I01
sg10
L5L
sa(dp411
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p412
sa(dp413
g1
g44
sg3
I01
sg10
L5L
sa(dp414
g1
g46
sg3
I01
sg10
L5L
sa(dp415
g1
g48
sg3
I01
sg10
L5L
sa(dp416
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p417
sa(dp418
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp419
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p420
sa(dp421
g1
g58
sg3
I01
sg10
L5L
sa(dp422
g1
g60
sg3
I01
sg10
L5L
sa(dp423
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp424
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p425
sa(dp426
g1
g67
sg3
I01
sg10
L5L
sa(dp427
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p428
sa(dp429
g1
g72
sg3
I01
sg10
L5L
sa(dp430
g1
g74
sg3
I01
sg10
L5L
sa(dp431
g1
g76
sg3
I01
sg10
L5L
sa(dp432
g1
g247
sg3
I01
sg10
L5L
sa(dp433
g1
g249
sg3
I01
sg10
L5L
sa(dp434
g1
g251
sg3
I01
sg10
L5L
sa(dp435
g1
g253
sg3
I01
sg10
L5L
sa(dp436
g1
g255
sg3
I01
sg10
L5L
sa(dp437
g1
g257
sg3
I01
sg10
L5L
sa(dp438
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p439
sasg4
VChild process error.
p440
sa(dp441
g1
VConnectionAbortedError
p442
sg3
I01
sg10
L3L
sg6
(lp443
(dp444
g1
g13
sg3
I01
sg10
L5L
sa(dp445
g1
g15
sg3
I01
sg10
L5L
sa(dp446
g1
g17
sg3
I01
sg10
L5L
sa(dp447
g1
g19
sg3
I01
sg10
L5L
sa(dp448
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p449
sa(dp450
g1
g24
sg3
I01
sg10
L5L
sa(dp451
g1
g26
sg3
I01
sg10
L5L
sa(dp452
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p453
sa(dp454
g1
g31
sg3
I01
sg10
L5L
sa(dp455
g1
g33
sg3
I01
sg10
L5L
sa(dp456
g1
g35
sg3
I01
sg10
L5L
sa(dp457
g1
g37
sg3
I01
sg10
L5L
sa(dp458
g1
g39
sg3
I01
sg10
L5L
sa(dp459
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p460
sa(dp461
g1
g44
sg3
I01
sg10
L5L
sa(dp462
g1
g46
sg3
I01
sg10
L5L
sa(dp463
g1
g48
sg3
I01
sg10
L5L
sa(dp464
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p465
sa(dp466
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp467
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p468
sa(dp469
g1
g58
sg3
I01
sg10
L5L
sa(dp470
g1
g60
sg3
I01
sg10
L5L
sa(dp471
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp472
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p473
sa(dp474
g1
g67
sg3
I01
sg10
L5L
sa(dp475
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p476
sa(dp477
g1
g72
sg3
I01
sg10
L5L
sa(dp478
g1
g74
sg3
I01
sg10
L5L
sa(dp479
g1
g76
sg3
I01
sg10
L5L
sa(dp480
g1
g247
sg3
I01
sg10
L5L
sa(dp481
g1
g249
sg3
I01
sg10
L5L
sa(dp482
g1
g251
sg3
I01
sg10
L5L
sa(dp483
g1
g253
sg3
I01
sg10
L5L
sa(dp484
g1
g255
sg3
I01
sg10
L5L
sa(dp485
g1
g257
sg3
I01
sg10
L5L
sa(dp486
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p487
sasg4
VConnection aborted.
p488
sa(dp489
g1
VConnectionError
p490
sg3
I01
sg10
L3L
sg6
(lp491
(dp492
g1
g13
sg3
I01
sg10
L5L
sa(dp493
g1
g15
sg3
I01
sg10
L5L
sa(dp494
g1
g17
sg3
I01
sg10
L5L
sa(dp495
g1
g19
sg3
I01
sg10
L5L
sa(dp496
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p497
sa(dp498
g1
g24
sg3
I01
sg10
L5L
sa(dp499
g1
g26
sg3
I01
sg10
L5L
sa(dp500
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p501
sa(dp502
g1
g31
sg3
I01
sg10
L5L
sa(dp503
g1
g33
sg3
I01
sg10
L5L
sa(dp504
g1
g35
sg3
I01
sg10
L5L
sa(dp505
g1
g37
sg3
I01
sg10
L5L
sa(dp506
g1
g39
sg3
I01
sg10
L5L
sa(dp507
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p508
sa(dp509
g1
g44
sg3
I01
sg10
L5L
sa(dp510
g1
g46
sg3
I01
sg10
L5L
sa(dp511
g1
g48
sg3
I01
sg10
L5L
sa(dp512
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p513
sa(dp514
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp515
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p516
sa(dp517
g1
g58
sg3
I01
sg10
L5L
sa(dp518
g1
g60
sg3
I01
sg10
L5L
sa(dp519
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp520
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p521
sa(dp522
g1
g67
sg3
I01
sg10
L5L
sa(dp523
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p524
sa(dp525
g1
g72
sg3
I01
sg10
L5L
sa(dp526
g1
g74
sg3
I01
sg10
L5L
sa(dp527
g1
g76
sg3
I01
sg10
L5L
sa(dp528
g1
g247
sg3
I01
sg10
L5L
sa(dp529
g1
g249
sg3
I01
sg10
L5L
sa(dp530
g1
g251
sg3
I01
sg10
L5L
sa(dp531
g1
g253
sg3
I01
sg10
L5L
sa(dp532
g1
g255
sg3
I01
sg10
L5L
sa(dp533
g1
g257
sg3
I01
sg10
L5L
sa(dp534
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p535
sasg4
VConnection error.
p536
sa(dp537
g1
VConnectionRefusedError
p538
sg3
I01
sg10
L3L
sg6
(lp539
(dp540
g1
g13
sg3
I01
sg10
L5L
sa(dp541
g1
g15
sg3
I01
sg10
L5L
sa(dp542
g1
g17
sg3
I01
sg10
L5L
sa(dp543
g1
g19
sg3
I01
sg10
L5L
sa(dp544
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p545
sa(dp546
g1
g24
sg3
I01
sg10
L5L
sa(dp547
g1
g26
sg3
I01
sg10
L5L
sa(dp548
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p549
sa(dp550
g1
g31
sg3
I01
sg10
L5L
sa(dp551
g1
g33
sg3
I01
sg10
L5L
sa(dp552
g1
g35
sg3
I01
sg10
L5L
sa(dp553
g1
g37
sg3
I01
sg10
L5L
sa(dp554
g1
g39
sg3
I01
sg10
L5L
sa(dp555
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p556
sa(dp557
g1
g44
sg3
I01
sg10
L5L
sa(dp558
g1
g46
sg3
I01
sg10
L5L
sa(dp559
g1
g48
sg3
I01
sg10
L5L
sa(dp560
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p561
sa(dp562
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp563
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p564
sa(dp565
g1
g58
sg3
I01
sg10
L5L
sa(dp566
g1
g60
sg3
I01
sg10
L5L
sa(dp567
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp568
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p569
sa(dp570
g1
g67
sg3
I01
sg10
L5L
sa(dp571
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p572
sa(dp573
g1
g72
sg3
I01
sg10
L5L
sa(dp574
g1
g74
sg3
I01
sg10
L5L
sa(dp575
g1
g76
sg3
I01
sg10
L5L
sa(dp576
g1
g247
sg3
I01
sg10
L5L
sa(dp577
g1
g249
sg3
I01
sg10
L5L
sa(dp578
g1
g251
sg3
I01
sg10
L5L
sa(dp579
g1
g253
sg3
I01
sg10
L5L
sa(dp580
g1
g255
sg3
I01
sg10
L5L
sa(dp581
g1
g257
sg3
I01
sg10
L5L
sa(dp582
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p583
sasg4
VConnection refused.
p584
sa(dp585
g1
VConnectionResetError
p586
sg3
I01
sg10
L3L
sg6
(lp587
(dp588
g1
g13
sg3
I01
sg10
L5L
sa(dp589
g1
g15
sg3
I01
sg10
L5L
sa(dp590
g1
g17
sg3
I01
sg10
L5L
sa(dp591
g1
g19
sg3
I01
sg10
L5L
sa(dp592
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p593
sa(dp594
g1
g24
sg3
I01
sg10
L5L
sa(dp595
g1
g26
sg3
I01
sg10
L5L
sa(dp596
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p597
sa(dp598
g1
g31
sg3
I01
sg10
L5L
sa(dp599
g1
g33
sg3
I01
sg10
L5L
sa(dp600
g1
g35
sg3
I01
sg10
L5L
sa(dp601
g1
g37
sg3
I01
sg10
L5L
sa(dp602
g1
g39
sg3
I01
sg10
L5L
sa(dp603
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p604
sa(dp605
g1
g44
sg3
I01
sg10
L5L
sa(dp606
g1
g46
sg3
I01
sg10
L5L
sa(dp607
g1
g48
sg3
I01
sg10
L5L
sa(dp608
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p609
sa(dp610
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp611
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p612
sa(dp613
g1
g58
sg3
I01
sg10
L5L
sa(dp614
g1
g60
sg3
I01
sg10
L5L
sa(dp615
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp616
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p617
sa(dp618
g1
g67
sg3
I01
sg10
L5L
sa(dp619
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p620
sa(dp621
g1
g72
sg3
I01
sg10
L5L
sa(dp622
g1
g74
sg3
I01
sg10
L5L
sa(dp623
g1
g76
sg3
I01
sg10
L5L
sa(dp624
g1
g247
sg3
I01
sg10
L5L
sa(dp625
g1
g249
sg3
I01
sg10
L5L
sa(dp626
g1
g251
sg3
I01
sg10
L5L
sa(dp627
g1
g253
sg3
I01
sg10
L5L
sa(dp628
g1
g255
sg3
I01
sg10
L5L
sa(dp629
g1
g257
sg3
I01
sg10
L5L
sa(dp630
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p631
sasg4
VConnection reset.
p632
sa(dp633
g1
VDeprecationWarning
p634
sg3
I01
sg10
L3L
sg6
(lp635
(dp636
g1
g13
sg3
I01
sg10
L5L
sa(dp637
g1
g15
sg3
I01
sg10
L5L
sa(dp638
g1
g17
sg3
I01
sg10
L5L
sa(dp639
g1
g19
sg3
I01
sg10
L5L
sa(dp640
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p641
sa(dp642
g1
g24
sg3
I01
sg10
L5L
sa(dp643
g1
g26
sg3
I01
sg10
L5L
sa(dp644
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p645
sa(dp646
g1
g31
sg3
I01
sg10
L5L
sa(dp647
g1
g33
sg3
I01
sg10
L5L
sa(dp648
g1
g35
sg3
I01
sg10
L5L
sa(dp649
g1
g37
sg3
I01
sg10
L5L
sa(dp650
g1
g39
sg3
I01
sg10
L5L
sa(dp651
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p652
sa(dp653
g1
g44
sg3
I01
sg10
L5L
sa(dp654
g1
g46
sg3
I01
sg10
L5L
sa(dp655
g1
g48
sg3
I01
sg10
L5L
sa(dp656
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p657
sa(dp658
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp659
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p660
sa(dp661
g1
g58
sg3
I01
sg10
L5L
sa(dp662
g1
g60
sg3
I01
sg10
L5L
sa(dp663
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp664
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p665
sa(dp666
g1
g67
sg3
I01
sg10
L5L
sa(dp667
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p668
sa(dp669
g1
g72
sg3
I01
sg10
L5L
sa(dp670
g1
g74
sg3
I01
sg10
L5L
sa(dp671
g1
g76
sg3
I01
sg10
L5L
sa(dp672
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p673
sasg4
VBase class for warnings about deprecated features.
p674
sa(dp675
g1
VEOFError
p676
sg3
I01
sg10
L3L
sg6
(lp677
(dp678
g1
g13
sg3
I01
sg10
L5L
sa(dp679
g1
g15
sg3
I01
sg10
L5L
sa(dp680
g1
g17
sg3
I01
sg10
L5L
sa(dp681
g1
g19
sg3
I01
sg10
L5L
sa(dp682
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p683
sa(dp684
g1
g24
sg3
I01
sg10
L5L
sa(dp685
g1
g26
sg3
I01
sg10
L5L
sa(dp686
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p687
sa(dp688
g1
g31
sg3
I01
sg10
L5L
sa(dp689
g1
g33
sg3
I01
sg10
L5L
sa(dp690
g1
g35
sg3
I01
sg10
L5L
sa(dp691
g1
g37
sg3
I01
sg10
L5L
sa(dp692
g1
g39
sg3
I01
sg10
L5L
sa(dp693
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p694
sa(dp695
g1
g44
sg3
I01
sg10
L5L
sa(dp696
g1
g46
sg3
I01
sg10
L5L
sa(dp697
g1
g48
sg3
I01
sg10
L5L
sa(dp698
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p699
sa(dp700
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp701
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p702
sa(dp703
g1
g58
sg3
I01
sg10
L5L
sa(dp704
g1
g60
sg3
I01
sg10
L5L
sa(dp705
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp706
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p707
sa(dp708
g1
g67
sg3
I01
sg10
L5L
sa(dp709
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p710
sa(dp711
g1
g72
sg3
I01
sg10
L5L
sa(dp712
g1
g74
sg3
I01
sg10
L5L
sa(dp713
g1
g76
sg3
I01
sg10
L5L
sa(dp714
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p715
sasg4
VRead beyond end of file.
p716
sa(dp717
g1
VEllipsis
p718
sg3
I01
sg10
L5L
sa(dp719
g1
VEnvironmentError
p720
sg3
I01
sg10
L3L
sg6
(lp721
(dp722
g1
g13
sg3
I01
sg10
L5L
sa(dp723
g1
g15
sg3
I01
sg10
L5L
sa(dp724
g1
g17
sg3
I01
sg10
L5L
sa(dp725
g1
g19
sg3
I01
sg10
L5L
sa(dp726
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p727
sa(dp728
g1
g24
sg3
I01
sg10
L5L
sa(dp729
g1
g26
sg3
I01
sg10
L5L
sa(dp730
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p731
sa(dp732
g1
g31
sg3
I01
sg10
L5L
sa(dp733
g1
g33
sg3
I01
sg10
L5L
sa(dp734
g1
g35
sg3
I01
sg10
L5L
sa(dp735
g1
g37
sg3
I01
sg10
L5L
sa(dp736
g1
g39
sg3
I01
sg10
L5L
sa(dp737
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p738
sa(dp739
g1
g44
sg3
I01
sg10
L5L
sa(dp740
g1
g46
sg3
I01
sg10
L5L
sa(dp741
g1
g48
sg3
I01
sg10
L5L
sa(dp742
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p743
sa(dp744
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp745
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p746
sa(dp747
g1
g58
sg3
I01
sg10
L5L
sa(dp748
g1
g60
sg3
I01
sg10
L5L
sa(dp749
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp750
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p751
sa(dp752
g1
g67
sg3
I01
sg10
L5L
sa(dp753
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p754
sa(dp755
g1
g72
sg3
I01
sg10
L5L
sa(dp756
g1
g74
sg3
I01
sg10
L5L
sa(dp757
g1
g76
sg3
I01
sg10
L5L
sa(dp758
g1
g247
sg3
I01
sg10
L5L
sa(dp759
g1
g249
sg3
I01
sg10
L5L
sa(dp760
g1
g251
sg3
I01
sg10
L5L
sa(dp761
g1
g253
sg3
I01
sg10
L5L
sa(dp762
g1
g255
sg3
I01
sg10
L5L
sa(dp763
g1
g257
sg3
I01
sg10
L5L
sa(dp764
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p765
sasg4
VBase class for I/O related errors.
p766
sa(dp767
g1
VException
p768
sg3
I01
sg10
L3L
sg6
(lp769
(dp770
g1
g13
sg3
I01
sg10
L5L
sa(dp771
g1
g15
sg3
I01
sg10
L5L
sa(dp772
g1
g17
sg3
I01
sg10
L5L
sa(dp773
g1
g19
sg3
I01
sg10
L5L
sa(dp774
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p775
sa(dp776
g1
g24
sg3
I01
sg10
L5L
sa(dp777
g1
g26
sg3
I01
sg10
L5L
sa(dp778
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p779
sa(dp780
g1
g31
sg3
I01
sg10
L5L
sa(dp781
g1
g33
sg3
I01
sg10
L5L
sa(dp782
g1
g35
sg3
I01
sg10
L5L
sa(dp783
g1
g37
sg3
I01
sg10
L5L
sa(dp784
g1
g39
sg3
I01
sg10
L5L
sa(dp785
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p786
sa(dp787
g1
g44
sg3
I01
sg10
L5L
sa(dp788
g1
g46
sg3
I01
sg10
L5L
sa(dp789
g1
g48
sg3
I01
sg10
L5L
sa(dp790
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p791
sa(dp792
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp793
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p794
sa(dp795
g1
g58
sg3
I01
sg10
L5L
sa(dp796
g1
g60
sg3
I01
sg10
L5L
sa(dp797
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp798
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p799
sa(dp800
g1
g67
sg3
I01
sg10
L5L
sa(dp801
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p802
sa(dp803
g1
g72
sg3
I01
sg10
L5L
sa(dp804
g1
g74
sg3
I01
sg10
L5L
sa(dp805
g1
g76
sg3
I01
sg10
L5L
sa(dp806
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p807
sasg4
VCommon base class for all non-exit exceptions.
p808
sa(dp809
g1
VFalse
p810
sg3
I01
sg10
L5L
sa(dp811
g1
VFileExistsError
p812
sg3
I01
sg10
L3L
sg6
(lp813
(dp814
g1
g13
sg3
I01
sg10
L5L
sa(dp815
g1
g15
sg3
I01
sg10
L5L
sa(dp816
g1
g17
sg3
I01
sg10
L5L
sa(dp817
g1
g19
sg3
I01
sg10
L5L
sa(dp818
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p819
sa(dp820
g1
g24
sg3
I01
sg10
L5L
sa(dp821
g1
g26
sg3
I01
sg10
L5L
sa(dp822
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p823
sa(dp824
g1
g31
sg3
I01
sg10
L5L
sa(dp825
g1
g33
sg3
I01
sg10
L5L
sa(dp826
g1
g35
sg3
I01
sg10
L5L
sa(dp827
g1
g37
sg3
I01
sg10
L5L
sa(dp828
g1
g39
sg3
I01
sg10
L5L
sa(dp829
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p830
sa(dp831
g1
g44
sg3
I01
sg10
L5L
sa(dp832
g1
g46
sg3
I01
sg10
L5L
sa(dp833
g1
g48
sg3
I01
sg10
L5L
sa(dp834
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p835
sa(dp836
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp837
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p838
sa(dp839
g1
g58
sg3
I01
sg10
L5L
sa(dp840
g1
g60
sg3
I01
sg10
L5L
sa(dp841
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp842
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p843
sa(dp844
g1
g67
sg3
I01
sg10
L5L
sa(dp845
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p846
sa(dp847
g1
g72
sg3
I01
sg10
L5L
sa(dp848
g1
g74
sg3
I01
sg10
L5L
sa(dp849
g1
g76
sg3
I01
sg10
L5L
sa(dp850
g1
g247
sg3
I01
sg10
L5L
sa(dp851
g1
g249
sg3
I01
sg10
L5L
sa(dp852
g1
g251
sg3
I01
sg10
L5L
sa(dp853
g1
g253
sg3
I01
sg10
L5L
sa(dp854
g1
g255
sg3
I01
sg10
L5L
sa(dp855
g1
g257
sg3
I01
sg10
L5L
sa(dp856
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p857
sasg4
VFile already exists.
p858
sa(dp859
g1
VFileNotFoundError
p860
sg3
I01
sg10
L3L
sg6
(lp861
(dp862
g1
g13
sg3
I01
sg10
L5L
sa(dp863
g1
g15
sg3
I01
sg10
L5L
sa(dp864
g1
g17
sg3
I01
sg10
L5L
sa(dp865
g1
g19
sg3
I01
sg10
L5L
sa(dp866
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p867
sa(dp868
g1
g24
sg3
I01
sg10
L5L
sa(dp869
g1
g26
sg3
I01
sg10
L5L
sa(dp870
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p871
sa(dp872
g1
g31
sg3
I01
sg10
L5L
sa(dp873
g1
g33
sg3
I01
sg10
L5L
sa(dp874
g1
g35
sg3
I01
sg10
L5L
sa(dp875
g1
g37
sg3
I01
sg10
L5L
sa(dp876
g1
g39
sg3
I01
sg10
L5L
sa(dp877
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p878
sa(dp879
g1
g44
sg3
I01
sg10
L5L
sa(dp880
g1
g46
sg3
I01
sg10
L5L
sa(dp881
g1
g48
sg3
I01
sg10
L5L
sa(dp882
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p883
sa(dp884
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp885
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p886
sa(dp887
g1
g58
sg3
I01
sg10
L5L
sa(dp888
g1
g60
sg3
I01
sg10
L5L
sa(dp889
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp890
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p891
sa(dp892
g1
g67
sg3
I01
sg10
L5L
sa(dp893
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p894
sa(dp895
g1
g72
sg3
I01
sg10
L5L
sa(dp896
g1
g74
sg3
I01
sg10
L5L
sa(dp897
g1
g76
sg3
I01
sg10
L5L
sa(dp898
g1
g247
sg3
I01
sg10
L5L
sa(dp899
g1
g249
sg3
I01
sg10
L5L
sa(dp900
g1
g251
sg3
I01
sg10
L5L
sa(dp901
g1
g253
sg3
I01
sg10
L5L
sa(dp902
g1
g255
sg3
I01
sg10
L5L
sa(dp903
g1
g257
sg3
I01
sg10
L5L
sa(dp904
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p905
sasg4
VFile not found.
p906
sa(dp907
g1
VFloatingPointError
p908
sg3
I01
sg10
L3L
sg6
(lp909
(dp910
g1
g13
sg3
I01
sg10
L5L
sa(dp911
g1
g15
sg3
I01
sg10
L5L
sa(dp912
g1
g17
sg3
I01
sg10
L5L
sa(dp913
g1
g19
sg3
I01
sg10
L5L
sa(dp914
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p915
sa(dp916
g1
g24
sg3
I01
sg10
L5L
sa(dp917
g1
g26
sg3
I01
sg10
L5L
sa(dp918
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p919
sa(dp920
g1
g31
sg3
I01
sg10
L5L
sa(dp921
g1
g33
sg3
I01
sg10
L5L
sa(dp922
g1
g35
sg3
I01
sg10
L5L
sa(dp923
g1
g37
sg3
I01
sg10
L5L
sa(dp924
g1
g39
sg3
I01
sg10
L5L
sa(dp925
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p926
sa(dp927
g1
g44
sg3
I01
sg10
L5L
sa(dp928
g1
g46
sg3
I01
sg10
L5L
sa(dp929
g1
g48
sg3
I01
sg10
L5L
sa(dp930
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p931
sa(dp932
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp933
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p934
sa(dp935
g1
g58
sg3
I01
sg10
L5L
sa(dp936
g1
g60
sg3
I01
sg10
L5L
sa(dp937
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp938
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p939
sa(dp940
g1
g67
sg3
I01
sg10
L5L
sa(dp941
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p942
sa(dp943
g1
g72
sg3
I01
sg10
L5L
sa(dp944
g1
g74
sg3
I01
sg10
L5L
sa(dp945
g1
g76
sg3
I01
sg10
L5L
sa(dp946
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p947
sasg4
VFloating point operation failed.
p948
sa(dp949
g1
VFutureWarning
p950
sg3
I01
sg10
L3L
sg6
(lp951
(dp952
g1
g13
sg3
I01
sg10
L5L
sa(dp953
g1
g15
sg3
I01
sg10
L5L
sa(dp954
g1
g17
sg3
I01
sg10
L5L
sa(dp955
g1
g19
sg3
I01
sg10
L5L
sa(dp956
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p957
sa(dp958
g1
g24
sg3
I01
sg10
L5L
sa(dp959
g1
g26
sg3
I01
sg10
L5L
sa(dp960
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p961
sa(dp962
g1
g31
sg3
I01
sg10
L5L
sa(dp963
g1
g33
sg3
I01
sg10
L5L
sa(dp964
g1
g35
sg3
I01
sg10
L5L
sa(dp965
g1
g37
sg3
I01
sg10
L5L
sa(dp966
g1
g39
sg3
I01
sg10
L5L
sa(dp967
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p968
sa(dp969
g1
g44
sg3
I01
sg10
L5L
sa(dp970
g1
g46
sg3
I01
sg10
L5L
sa(dp971
g1
g48
sg3
I01
sg10
L5L
sa(dp972
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p973
sa(dp974
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp975
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p976
sa(dp977
g1
g58
sg3
I01
sg10
L5L
sa(dp978
g1
g60
sg3
I01
sg10
L5L
sa(dp979
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp980
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p981
sa(dp982
g1
g67
sg3
I01
sg10
L5L
sa(dp983
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p984
sa(dp985
g1
g72
sg3
I01
sg10
L5L
sa(dp986
g1
g74
sg3
I01
sg10
L5L
sa(dp987
g1
g76
sg3
I01
sg10
L5L
sa(dp988
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p989
sasg4
VBase class for warnings about constructs that will change semantically\u000ain the future.
p990
sa(dp991
g1
VGeneratorExit
p992
sg3
I01
sg10
L3L
sg6
(lp993
(dp994
g1
g13
sg3
I01
sg10
L5L
sa(dp995
g1
g15
sg3
I01
sg10
L5L
sa(dp996
g1
g17
sg3
I01
sg10
L5L
sa(dp997
g1
g19
sg3
I01
sg10
L5L
sa(dp998
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p999
sa(dp1000
g1
g24
sg3
I01
sg10
L5L
sa(dp1001
g1
g26
sg3
I01
sg10
L5L
sa(dp1002
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1003
sa(dp1004
g1
g31
sg3
I01
sg10
L5L
sa(dp1005
g1
g33
sg3
I01
sg10
L5L
sa(dp1006
g1
g35
sg3
I01
sg10
L5L
sa(dp1007
g1
g37
sg3
I01
sg10
L5L
sa(dp1008
g1
g39
sg3
I01
sg10
L5L
sa(dp1009
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1010
sa(dp1011
g1
g44
sg3
I01
sg10
L5L
sa(dp1012
g1
g46
sg3
I01
sg10
L5L
sa(dp1013
g1
g48
sg3
I01
sg10
L5L
sa(dp1014
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1015
sa(dp1016
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1017
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1018
sa(dp1019
g1
g58
sg3
I01
sg10
L5L
sa(dp1020
g1
g60
sg3
I01
sg10
L5L
sa(dp1021
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1022
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1023
sa(dp1024
g1
g67
sg3
I01
sg10
L5L
sa(dp1025
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1026
sa(dp1027
g1
g72
sg3
I01
sg10
L5L
sa(dp1028
g1
g74
sg3
I01
sg10
L5L
sa(dp1029
g1
g76
sg3
I01
sg10
L5L
sa(dp1030
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1031
sasg4
VRequest that a generator exit.
p1032
sa(dp1033
g1
VIOError
p1034
sg3
I01
sg10
L3L
sg6
(lp1035
(dp1036
g1
g13
sg3
I01
sg10
L5L
sa(dp1037
g1
g15
sg3
I01
sg10
L5L
sa(dp1038
g1
g17
sg3
I01
sg10
L5L
sa(dp1039
g1
g19
sg3
I01
sg10
L5L
sa(dp1040
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1041
sa(dp1042
g1
g24
sg3
I01
sg10
L5L
sa(dp1043
g1
g26
sg3
I01
sg10
L5L
sa(dp1044
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1045
sa(dp1046
g1
g31
sg3
I01
sg10
L5L
sa(dp1047
g1
g33
sg3
I01
sg10
L5L
sa(dp1048
g1
g35
sg3
I01
sg10
L5L
sa(dp1049
g1
g37
sg3
I01
sg10
L5L
sa(dp1050
g1
g39
sg3
I01
sg10
L5L
sa(dp1051
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1052
sa(dp1053
g1
g44
sg3
I01
sg10
L5L
sa(dp1054
g1
g46
sg3
I01
sg10
L5L
sa(dp1055
g1
g48
sg3
I01
sg10
L5L
sa(dp1056
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1057
sa(dp1058
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1059
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1060
sa(dp1061
g1
g58
sg3
I01
sg10
L5L
sa(dp1062
g1
g60
sg3
I01
sg10
L5L
sa(dp1063
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1064
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1065
sa(dp1066
g1
g67
sg3
I01
sg10
L5L
sa(dp1067
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1068
sa(dp1069
g1
g72
sg3
I01
sg10
L5L
sa(dp1070
g1
g74
sg3
I01
sg10
L5L
sa(dp1071
g1
g76
sg3
I01
sg10
L5L
sa(dp1072
g1
g247
sg3
I01
sg10
L5L
sa(dp1073
g1
g249
sg3
I01
sg10
L5L
sa(dp1074
g1
g251
sg3
I01
sg10
L5L
sa(dp1075
g1
g253
sg3
I01
sg10
L5L
sa(dp1076
g1
g255
sg3
I01
sg10
L5L
sa(dp1077
g1
g257
sg3
I01
sg10
L5L
sa(dp1078
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1079
sasg4
VBase class for I/O related errors.
p1080
sa(dp1081
g1
VImportError
p1082
sg3
I01
sg10
L3L
sg6
(lp1083
(dp1084
g1
g13
sg3
I01
sg10
L5L
sa(dp1085
g1
g15
sg3
I01
sg10
L5L
sa(dp1086
g1
g17
sg3
I01
sg10
L5L
sa(dp1087
g1
g19
sg3
I01
sg10
L5L
sa(dp1088
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1089
sa(dp1090
g1
g24
sg3
I01
sg10
L5L
sa(dp1091
g1
g26
sg3
I01
sg10
L5L
sa(dp1092
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1093
sa(dp1094
g1
g31
sg3
I01
sg10
L5L
sa(dp1095
g1
g33
sg3
I01
sg10
L5L
sa(dp1096
g1
g35
sg3
I01
sg10
L5L
sa(dp1097
g1
g37
sg3
I01
sg10
L5L
sa(dp1098
g1
g39
sg3
I01
sg10
L5L
sa(dp1099
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1100
sa(dp1101
g1
g44
sg3
I01
sg10
L5L
sa(dp1102
g1
g46
sg3
I01
sg10
L5L
sa(dp1103
g1
g48
sg3
I01
sg10
L5L
sa(dp1104
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1105
sa(dp1106
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1107
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1108
sa(dp1109
g1
g58
sg3
I01
sg10
L5L
sa(dp1110
g1
g60
sg3
I01
sg10
L5L
sa(dp1111
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1112
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1113
sa(dp1114
g1
g67
sg3
I01
sg10
L5L
sa(dp1115
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1116
sa(dp1117
g1
g72
sg3
I01
sg10
L5L
sa(dp1118
g1
g74
sg3
I01
sg10
L5L
sa(dp1119
g1
g76
sg3
I01
sg10
L5L
sa(dp1120
g1
Vmsg
p1121
sg3
I01
sg10
L5L
sa(dp1122
g1
g1
sg3
I01
sg10
L5L
sa(dp1123
g1
Vpath
p1124
sg3
I01
sg10
L5L
sa(dp1125
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1126
sasg4
VImport can't find module, or can't find name in module.
p1127
sa(dp1128
g1
VImportWarning
p1129
sg3
I01
sg10
L3L
sg6
(lp1130
(dp1131
g1
g13
sg3
I01
sg10
L5L
sa(dp1132
g1
g15
sg3
I01
sg10
L5L
sa(dp1133
g1
g17
sg3
I01
sg10
L5L
sa(dp1134
g1
g19
sg3
I01
sg10
L5L
sa(dp1135
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1136
sa(dp1137
g1
g24
sg3
I01
sg10
L5L
sa(dp1138
g1
g26
sg3
I01
sg10
L5L
sa(dp1139
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1140
sa(dp1141
g1
g31
sg3
I01
sg10
L5L
sa(dp1142
g1
g33
sg3
I01
sg10
L5L
sa(dp1143
g1
g35
sg3
I01
sg10
L5L
sa(dp1144
g1
g37
sg3
I01
sg10
L5L
sa(dp1145
g1
g39
sg3
I01
sg10
L5L
sa(dp1146
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1147
sa(dp1148
g1
g44
sg3
I01
sg10
L5L
sa(dp1149
g1
g46
sg3
I01
sg10
L5L
sa(dp1150
g1
g48
sg3
I01
sg10
L5L
sa(dp1151
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1152
sa(dp1153
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1154
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1155
sa(dp1156
g1
g58
sg3
I01
sg10
L5L
sa(dp1157
g1
g60
sg3
I01
sg10
L5L
sa(dp1158
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1159
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1160
sa(dp1161
g1
g67
sg3
I01
sg10
L5L
sa(dp1162
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1163
sa(dp1164
g1
g72
sg3
I01
sg10
L5L
sa(dp1165
g1
g74
sg3
I01
sg10
L5L
sa(dp1166
g1
g76
sg3
I01
sg10
L5L
sa(dp1167
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1168
sasg4
VBase class for warnings about probable mistakes in module imports
p1169
sa(dp1170
g1
VIndentationError
p1171
sg3
I01
sg10
L3L
sg6
(lp1172
(dp1173
g1
g13
sg3
I01
sg10
L5L
sa(dp1174
g1
g15
sg3
I01
sg10
L5L
sa(dp1175
g1
g17
sg3
I01
sg10
L5L
sa(dp1176
g1
g19
sg3
I01
sg10
L5L
sa(dp1177
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1178
sa(dp1179
g1
g24
sg3
I01
sg10
L5L
sa(dp1180
g1
g26
sg3
I01
sg10
L5L
sa(dp1181
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1182
sa(dp1183
g1
g31
sg3
I01
sg10
L5L
sa(dp1184
g1
g33
sg3
I01
sg10
L5L
sa(dp1185
g1
g35
sg3
I01
sg10
L5L
sa(dp1186
g1
g37
sg3
I01
sg10
L5L
sa(dp1187
g1
g39
sg3
I01
sg10
L5L
sa(dp1188
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1189
sa(dp1190
g1
g44
sg3
I01
sg10
L5L
sa(dp1191
g1
g46
sg3
I01
sg10
L5L
sa(dp1192
g1
g48
sg3
I01
sg10
L5L
sa(dp1193
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1194
sa(dp1195
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1196
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1197
sa(dp1198
g1
g58
sg3
I01
sg10
L5L
sa(dp1199
g1
g60
sg3
I01
sg10
L5L
sa(dp1200
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1201
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1202
sa(dp1203
g1
g67
sg3
I01
sg10
L5L
sa(dp1204
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1205
sa(dp1206
g1
g72
sg3
I01
sg10
L5L
sa(dp1207
g1
g74
sg3
I01
sg10
L5L
sa(dp1208
g1
g76
sg3
I01
sg10
L5L
sa(dp1209
g1
g251
sg3
I01
sg10
L5L
sa(dp1210
g1
Vlineno
p1211
sg3
I01
sg10
L5L
sa(dp1212
g1
g1121
sg3
I01
sg10
L5L
sa(dp1213
g1
Voffset
p1214
sg3
I01
sg10
L5L
sa(dp1215
g1
Vprint_file_and_line
p1216
sg3
I01
sg10
L5L
sa(dp1217
g1
Vtext
p1218
sg3
I01
sg10
L5L
sa(dp1219
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1220
sasg4
VImproper indentation.
p1221
sa(dp1222
g1
VIndexError
p1223
sg3
I01
sg10
L3L
sg6
(lp1224
(dp1225
g1
g13
sg3
I01
sg10
L5L
sa(dp1226
g1
g15
sg3
I01
sg10
L5L
sa(dp1227
g1
g17
sg3
I01
sg10
L5L
sa(dp1228
g1
g19
sg3
I01
sg10
L5L
sa(dp1229
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1230
sa(dp1231
g1
g24
sg3
I01
sg10
L5L
sa(dp1232
g1
g26
sg3
I01
sg10
L5L
sa(dp1233
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1234
sa(dp1235
g1
g31
sg3
I01
sg10
L5L
sa(dp1236
g1
g33
sg3
I01
sg10
L5L
sa(dp1237
g1
g35
sg3
I01
sg10
L5L
sa(dp1238
g1
g37
sg3
I01
sg10
L5L
sa(dp1239
g1
g39
sg3
I01
sg10
L5L
sa(dp1240
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1241
sa(dp1242
g1
g44
sg3
I01
sg10
L5L
sa(dp1243
g1
g46
sg3
I01
sg10
L5L
sa(dp1244
g1
g48
sg3
I01
sg10
L5L
sa(dp1245
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1246
sa(dp1247
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1248
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1249
sa(dp1250
g1
g58
sg3
I01
sg10
L5L
sa(dp1251
g1
g60
sg3
I01
sg10
L5L
sa(dp1252
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1253
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1254
sa(dp1255
g1
g67
sg3
I01
sg10
L5L
sa(dp1256
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1257
sa(dp1258
g1
g72
sg3
I01
sg10
L5L
sa(dp1259
g1
g74
sg3
I01
sg10
L5L
sa(dp1260
g1
g76
sg3
I01
sg10
L5L
sa(dp1261
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1262
sasg4
VSequence index out of range.
p1263
sa(dp1264
g1
VInterruptedError
p1265
sg3
I01
sg10
L3L
sg6
(lp1266
(dp1267
g1
g13
sg3
I01
sg10
L5L
sa(dp1268
g1
g15
sg3
I01
sg10
L5L
sa(dp1269
g1
g17
sg3
I01
sg10
L5L
sa(dp1270
g1
g19
sg3
I01
sg10
L5L
sa(dp1271
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1272
sa(dp1273
g1
g24
sg3
I01
sg10
L5L
sa(dp1274
g1
g26
sg3
I01
sg10
L5L
sa(dp1275
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1276
sa(dp1277
g1
g31
sg3
I01
sg10
L5L
sa(dp1278
g1
g33
sg3
I01
sg10
L5L
sa(dp1279
g1
g35
sg3
I01
sg10
L5L
sa(dp1280
g1
g37
sg3
I01
sg10
L5L
sa(dp1281
g1
g39
sg3
I01
sg10
L5L
sa(dp1282
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1283
sa(dp1284
g1
g44
sg3
I01
sg10
L5L
sa(dp1285
g1
g46
sg3
I01
sg10
L5L
sa(dp1286
g1
g48
sg3
I01
sg10
L5L
sa(dp1287
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1288
sa(dp1289
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1290
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1291
sa(dp1292
g1
g58
sg3
I01
sg10
L5L
sa(dp1293
g1
g60
sg3
I01
sg10
L5L
sa(dp1294
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1295
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1296
sa(dp1297
g1
g67
sg3
I01
sg10
L5L
sa(dp1298
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1299
sa(dp1300
g1
g72
sg3
I01
sg10
L5L
sa(dp1301
g1
g74
sg3
I01
sg10
L5L
sa(dp1302
g1
g76
sg3
I01
sg10
L5L
sa(dp1303
g1
g247
sg3
I01
sg10
L5L
sa(dp1304
g1
g249
sg3
I01
sg10
L5L
sa(dp1305
g1
g251
sg3
I01
sg10
L5L
sa(dp1306
g1
g253
sg3
I01
sg10
L5L
sa(dp1307
g1
g255
sg3
I01
sg10
L5L
sa(dp1308
g1
g257
sg3
I01
sg10
L5L
sa(dp1309
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1310
sasg4
VInterrupted by signal.
p1311
sa(dp1312
g1
VIsADirectoryError
p1313
sg3
I01
sg10
L3L
sg6
(lp1314
(dp1315
g1
g13
sg3
I01
sg10
L5L
sa(dp1316
g1
g15
sg3
I01
sg10
L5L
sa(dp1317
g1
g17
sg3
I01
sg10
L5L
sa(dp1318
g1
g19
sg3
I01
sg10
L5L
sa(dp1319
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1320
sa(dp1321
g1
g24
sg3
I01
sg10
L5L
sa(dp1322
g1
g26
sg3
I01
sg10
L5L
sa(dp1323
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1324
sa(dp1325
g1
g31
sg3
I01
sg10
L5L
sa(dp1326
g1
g33
sg3
I01
sg10
L5L
sa(dp1327
g1
g35
sg3
I01
sg10
L5L
sa(dp1328
g1
g37
sg3
I01
sg10
L5L
sa(dp1329
g1
g39
sg3
I01
sg10
L5L
sa(dp1330
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1331
sa(dp1332
g1
g44
sg3
I01
sg10
L5L
sa(dp1333
g1
g46
sg3
I01
sg10
L5L
sa(dp1334
g1
g48
sg3
I01
sg10
L5L
sa(dp1335
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1336
sa(dp1337
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1338
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1339
sa(dp1340
g1
g58
sg3
I01
sg10
L5L
sa(dp1341
g1
g60
sg3
I01
sg10
L5L
sa(dp1342
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1343
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1344
sa(dp1345
g1
g67
sg3
I01
sg10
L5L
sa(dp1346
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1347
sa(dp1348
g1
g72
sg3
I01
sg10
L5L
sa(dp1349
g1
g74
sg3
I01
sg10
L5L
sa(dp1350
g1
g76
sg3
I01
sg10
L5L
sa(dp1351
g1
g247
sg3
I01
sg10
L5L
sa(dp1352
g1
g249
sg3
I01
sg10
L5L
sa(dp1353
g1
g251
sg3
I01
sg10
L5L
sa(dp1354
g1
g253
sg3
I01
sg10
L5L
sa(dp1355
g1
g255
sg3
I01
sg10
L5L
sa(dp1356
g1
g257
sg3
I01
sg10
L5L
sa(dp1357
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1358
sasg4
VOperation doesn't work on directories.
p1359
sa(dp1360
g1
VKeyError
p1361
sg3
I01
sg10
L3L
sg6
(lp1362
(dp1363
g1
g13
sg3
I01
sg10
L5L
sa(dp1364
g1
g15
sg3
I01
sg10
L5L
sa(dp1365
g1
g17
sg3
I01
sg10
L5L
sa(dp1366
g1
g19
sg3
I01
sg10
L5L
sa(dp1367
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1368
sa(dp1369
g1
g24
sg3
I01
sg10
L5L
sa(dp1370
g1
g26
sg3
I01
sg10
L5L
sa(dp1371
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1372
sa(dp1373
g1
g31
sg3
I01
sg10
L5L
sa(dp1374
g1
g33
sg3
I01
sg10
L5L
sa(dp1375
g1
g35
sg3
I01
sg10
L5L
sa(dp1376
g1
g37
sg3
I01
sg10
L5L
sa(dp1377
g1
g39
sg3
I01
sg10
L5L
sa(dp1378
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1379
sa(dp1380
g1
g44
sg3
I01
sg10
L5L
sa(dp1381
g1
g46
sg3
I01
sg10
L5L
sa(dp1382
g1
g48
sg3
I01
sg10
L5L
sa(dp1383
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1384
sa(dp1385
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1386
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1387
sa(dp1388
g1
g58
sg3
I01
sg10
L5L
sa(dp1389
g1
g60
sg3
I01
sg10
L5L
sa(dp1390
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1391
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1392
sa(dp1393
g1
g67
sg3
I01
sg10
L5L
sa(dp1394
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1395
sa(dp1396
g1
g72
sg3
I01
sg10
L5L
sa(dp1397
g1
g74
sg3
I01
sg10
L5L
sa(dp1398
g1
g76
sg3
I01
sg10
L5L
sa(dp1399
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1400
sasg4
VMapping key not found.
p1401
sa(dp1402
g1
VKeyboardInterrupt
p1403
sg3
I01
sg10
L3L
sg6
(lp1404
(dp1405
g1
g13
sg3
I01
sg10
L5L
sa(dp1406
g1
g15
sg3
I01
sg10
L5L
sa(dp1407
g1
g17
sg3
I01
sg10
L5L
sa(dp1408
g1
g19
sg3
I01
sg10
L5L
sa(dp1409
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1410
sa(dp1411
g1
g24
sg3
I01
sg10
L5L
sa(dp1412
g1
g26
sg3
I01
sg10
L5L
sa(dp1413
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1414
sa(dp1415
g1
g31
sg3
I01
sg10
L5L
sa(dp1416
g1
g33
sg3
I01
sg10
L5L
sa(dp1417
g1
g35
sg3
I01
sg10
L5L
sa(dp1418
g1
g37
sg3
I01
sg10
L5L
sa(dp1419
g1
g39
sg3
I01
sg10
L5L
sa(dp1420
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1421
sa(dp1422
g1
g44
sg3
I01
sg10
L5L
sa(dp1423
g1
g46
sg3
I01
sg10
L5L
sa(dp1424
g1
g48
sg3
I01
sg10
L5L
sa(dp1425
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1426
sa(dp1427
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1428
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1429
sa(dp1430
g1
g58
sg3
I01
sg10
L5L
sa(dp1431
g1
g60
sg3
I01
sg10
L5L
sa(dp1432
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1433
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1434
sa(dp1435
g1
g67
sg3
I01
sg10
L5L
sa(dp1436
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1437
sa(dp1438
g1
g72
sg3
I01
sg10
L5L
sa(dp1439
g1
g74
sg3
I01
sg10
L5L
sa(dp1440
g1
g76
sg3
I01
sg10
L5L
sa(dp1441
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1442
sasg4
VProgram interrupted by user.
p1443
sa(dp1444
g1
VLookupError
p1445
sg3
I01
sg10
L3L
sg6
(lp1446
(dp1447
g1
g13
sg3
I01
sg10
L5L
sa(dp1448
g1
g15
sg3
I01
sg10
L5L
sa(dp1449
g1
g17
sg3
I01
sg10
L5L
sa(dp1450
g1
g19
sg3
I01
sg10
L5L
sa(dp1451
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1452
sa(dp1453
g1
g24
sg3
I01
sg10
L5L
sa(dp1454
g1
g26
sg3
I01
sg10
L5L
sa(dp1455
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1456
sa(dp1457
g1
g31
sg3
I01
sg10
L5L
sa(dp1458
g1
g33
sg3
I01
sg10
L5L
sa(dp1459
g1
g35
sg3
I01
sg10
L5L
sa(dp1460
g1
g37
sg3
I01
sg10
L5L
sa(dp1461
g1
g39
sg3
I01
sg10
L5L
sa(dp1462
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1463
sa(dp1464
g1
g44
sg3
I01
sg10
L5L
sa(dp1465
g1
g46
sg3
I01
sg10
L5L
sa(dp1466
g1
g48
sg3
I01
sg10
L5L
sa(dp1467
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1468
sa(dp1469
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1470
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1471
sa(dp1472
g1
g58
sg3
I01
sg10
L5L
sa(dp1473
g1
g60
sg3
I01
sg10
L5L
sa(dp1474
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1475
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1476
sa(dp1477
g1
g67
sg3
I01
sg10
L5L
sa(dp1478
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1479
sa(dp1480
g1
g72
sg3
I01
sg10
L5L
sa(dp1481
g1
g74
sg3
I01
sg10
L5L
sa(dp1482
g1
g76
sg3
I01
sg10
L5L
sa(dp1483
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1484
sasg4
VBase class for lookup errors.
p1485
sa(dp1486
g1
VMemoryError
p1487
sg3
I01
sg10
L3L
sg6
(lp1488
(dp1489
g1
g13
sg3
I01
sg10
L5L
sa(dp1490
g1
g15
sg3
I01
sg10
L5L
sa(dp1491
g1
g17
sg3
I01
sg10
L5L
sa(dp1492
g1
g19
sg3
I01
sg10
L5L
sa(dp1493
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1494
sa(dp1495
g1
g24
sg3
I01
sg10
L5L
sa(dp1496
g1
g26
sg3
I01
sg10
L5L
sa(dp1497
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1498
sa(dp1499
g1
g31
sg3
I01
sg10
L5L
sa(dp1500
g1
g33
sg3
I01
sg10
L5L
sa(dp1501
g1
g35
sg3
I01
sg10
L5L
sa(dp1502
g1
g37
sg3
I01
sg10
L5L
sa(dp1503
g1
g39
sg3
I01
sg10
L5L
sa(dp1504
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1505
sa(dp1506
g1
g44
sg3
I01
sg10
L5L
sa(dp1507
g1
g46
sg3
I01
sg10
L5L
sa(dp1508
g1
g48
sg3
I01
sg10
L5L
sa(dp1509
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1510
sa(dp1511
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1512
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1513
sa(dp1514
g1
g58
sg3
I01
sg10
L5L
sa(dp1515
g1
g60
sg3
I01
sg10
L5L
sa(dp1516
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1517
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1518
sa(dp1519
g1
g67
sg3
I01
sg10
L5L
sa(dp1520
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1521
sa(dp1522
g1
g72
sg3
I01
sg10
L5L
sa(dp1523
g1
g74
sg3
I01
sg10
L5L
sa(dp1524
g1
g76
sg3
I01
sg10
L5L
sa(dp1525
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1526
sasg4
VOut of memory.
p1527
sa(dp1528
g1
VModuleNotFoundError
p1529
sg3
I01
sg10
L3L
sg6
(lp1530
(dp1531
g1
g13
sg3
I01
sg10
L5L
sa(dp1532
g1
g15
sg3
I01
sg10
L5L
sa(dp1533
g1
g17
sg3
I01
sg10
L5L
sa(dp1534
g1
g19
sg3
I01
sg10
L5L
sa(dp1535
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1536
sa(dp1537
g1
g24
sg3
I01
sg10
L5L
sa(dp1538
g1
g26
sg3
I01
sg10
L5L
sa(dp1539
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1540
sa(dp1541
g1
g31
sg3
I01
sg10
L5L
sa(dp1542
g1
g33
sg3
I01
sg10
L5L
sa(dp1543
g1
g35
sg3
I01
sg10
L5L
sa(dp1544
g1
g37
sg3
I01
sg10
L5L
sa(dp1545
g1
g39
sg3
I01
sg10
L5L
sa(dp1546
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1547
sa(dp1548
g1
g44
sg3
I01
sg10
L5L
sa(dp1549
g1
g46
sg3
I01
sg10
L5L
sa(dp1550
g1
g48
sg3
I01
sg10
L5L
sa(dp1551
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1552
sa(dp1553
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1554
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1555
sa(dp1556
g1
g58
sg3
I01
sg10
L5L
sa(dp1557
g1
g60
sg3
I01
sg10
L5L
sa(dp1558
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1559
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1560
sa(dp1561
g1
g67
sg3
I01
sg10
L5L
sa(dp1562
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1563
sa(dp1564
g1
g72
sg3
I01
sg10
L5L
sa(dp1565
g1
g74
sg3
I01
sg10
L5L
sa(dp1566
g1
g76
sg3
I01
sg10
L5L
sa(dp1567
g1
g1121
sg3
I01
sg10
L5L
sa(dp1568
g1
g1
sg3
I01
sg10
L5L
sa(dp1569
g1
g1124
sg3
I01
sg10
L5L
sa(dp1570
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1571
sasg4
VModule not found.
p1572
sa(dp1573
g1
VNameError
p1574
sg3
I01
sg10
L3L
sg6
(lp1575
(dp1576
g1
g13
sg3
I01
sg10
L5L
sa(dp1577
g1
g15
sg3
I01
sg10
L5L
sa(dp1578
g1
g17
sg3
I01
sg10
L5L
sa(dp1579
g1
g19
sg3
I01
sg10
L5L
sa(dp1580
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1581
sa(dp1582
g1
g24
sg3
I01
sg10
L5L
sa(dp1583
g1
g26
sg3
I01
sg10
L5L
sa(dp1584
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1585
sa(dp1586
g1
g31
sg3
I01
sg10
L5L
sa(dp1587
g1
g33
sg3
I01
sg10
L5L
sa(dp1588
g1
g35
sg3
I01
sg10
L5L
sa(dp1589
g1
g37
sg3
I01
sg10
L5L
sa(dp1590
g1
g39
sg3
I01
sg10
L5L
sa(dp1591
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1592
sa(dp1593
g1
g44
sg3
I01
sg10
L5L
sa(dp1594
g1
g46
sg3
I01
sg10
L5L
sa(dp1595
g1
g48
sg3
I01
sg10
L5L
sa(dp1596
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1597
sa(dp1598
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1599
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1600
sa(dp1601
g1
g58
sg3
I01
sg10
L5L
sa(dp1602
g1
g60
sg3
I01
sg10
L5L
sa(dp1603
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1604
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1605
sa(dp1606
g1
g67
sg3
I01
sg10
L5L
sa(dp1607
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1608
sa(dp1609
g1
g72
sg3
I01
sg10
L5L
sa(dp1610
g1
g74
sg3
I01
sg10
L5L
sa(dp1611
g1
g76
sg3
I01
sg10
L5L
sa(dp1612
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1613
sasg4
VName not found globally.
p1614
sa(dp1615
g1
VNone
p1616
sg3
I01
sg10
L5L
sa(dp1617
g1
VNotADirectoryError
p1618
sg3
I01
sg10
L3L
sg6
(lp1619
(dp1620
g1
g13
sg3
I01
sg10
L5L
sa(dp1621
g1
g15
sg3
I01
sg10
L5L
sa(dp1622
g1
g17
sg3
I01
sg10
L5L
sa(dp1623
g1
g19
sg3
I01
sg10
L5L
sa(dp1624
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1625
sa(dp1626
g1
g24
sg3
I01
sg10
L5L
sa(dp1627
g1
g26
sg3
I01
sg10
L5L
sa(dp1628
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1629
sa(dp1630
g1
g31
sg3
I01
sg10
L5L
sa(dp1631
g1
g33
sg3
I01
sg10
L5L
sa(dp1632
g1
g35
sg3
I01
sg10
L5L
sa(dp1633
g1
g37
sg3
I01
sg10
L5L
sa(dp1634
g1
g39
sg3
I01
sg10
L5L
sa(dp1635
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1636
sa(dp1637
g1
g44
sg3
I01
sg10
L5L
sa(dp1638
g1
g46
sg3
I01
sg10
L5L
sa(dp1639
g1
g48
sg3
I01
sg10
L5L
sa(dp1640
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1641
sa(dp1642
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1643
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1644
sa(dp1645
g1
g58
sg3
I01
sg10
L5L
sa(dp1646
g1
g60
sg3
I01
sg10
L5L
sa(dp1647
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1648
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1649
sa(dp1650
g1
g67
sg3
I01
sg10
L5L
sa(dp1651
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1652
sa(dp1653
g1
g72
sg3
I01
sg10
L5L
sa(dp1654
g1
g74
sg3
I01
sg10
L5L
sa(dp1655
g1
g76
sg3
I01
sg10
L5L
sa(dp1656
g1
g247
sg3
I01
sg10
L5L
sa(dp1657
g1
g249
sg3
I01
sg10
L5L
sa(dp1658
g1
g251
sg3
I01
sg10
L5L
sa(dp1659
g1
g253
sg3
I01
sg10
L5L
sa(dp1660
g1
g255
sg3
I01
sg10
L5L
sa(dp1661
g1
g257
sg3
I01
sg10
L5L
sa(dp1662
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1663
sasg4
VOperation only works on directories.
p1664
sa(dp1665
g1
VNotImplemented
p1666
sg3
I01
sg10
L5L
sa(dp1667
g1
VNotImplementedError
p1668
sg3
I01
sg10
L3L
sg6
(lp1669
(dp1670
g1
g13
sg3
I01
sg10
L5L
sa(dp1671
g1
g15
sg3
I01
sg10
L5L
sa(dp1672
g1
g17
sg3
I01
sg10
L5L
sa(dp1673
g1
g19
sg3
I01
sg10
L5L
sa(dp1674
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1675
sa(dp1676
g1
g24
sg3
I01
sg10
L5L
sa(dp1677
g1
g26
sg3
I01
sg10
L5L
sa(dp1678
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1679
sa(dp1680
g1
g31
sg3
I01
sg10
L5L
sa(dp1681
g1
g33
sg3
I01
sg10
L5L
sa(dp1682
g1
g35
sg3
I01
sg10
L5L
sa(dp1683
g1
g37
sg3
I01
sg10
L5L
sa(dp1684
g1
g39
sg3
I01
sg10
L5L
sa(dp1685
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1686
sa(dp1687
g1
g44
sg3
I01
sg10
L5L
sa(dp1688
g1
g46
sg3
I01
sg10
L5L
sa(dp1689
g1
g48
sg3
I01
sg10
L5L
sa(dp1690
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1691
sa(dp1692
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1693
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1694
sa(dp1695
g1
g58
sg3
I01
sg10
L5L
sa(dp1696
g1
g60
sg3
I01
sg10
L5L
sa(dp1697
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1698
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1699
sa(dp1700
g1
g67
sg3
I01
sg10
L5L
sa(dp1701
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1702
sa(dp1703
g1
g72
sg3
I01
sg10
L5L
sa(dp1704
g1
g74
sg3
I01
sg10
L5L
sa(dp1705
g1
g76
sg3
I01
sg10
L5L
sa(dp1706
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1707
sasg4
VMethod or function hasn't been implemented yet.
p1708
sa(dp1709
g1
VOSError
p1710
sg3
I01
sg10
L3L
sg6
(lp1711
(dp1712
g1
g13
sg3
I01
sg10
L5L
sa(dp1713
g1
g15
sg3
I01
sg10
L5L
sa(dp1714
g1
g17
sg3
I01
sg10
L5L
sa(dp1715
g1
g19
sg3
I01
sg10
L5L
sa(dp1716
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1717
sa(dp1718
g1
g24
sg3
I01
sg10
L5L
sa(dp1719
g1
g26
sg3
I01
sg10
L5L
sa(dp1720
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1721
sa(dp1722
g1
g31
sg3
I01
sg10
L5L
sa(dp1723
g1
g33
sg3
I01
sg10
L5L
sa(dp1724
g1
g35
sg3
I01
sg10
L5L
sa(dp1725
g1
g37
sg3
I01
sg10
L5L
sa(dp1726
g1
g39
sg3
I01
sg10
L5L
sa(dp1727
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1728
sa(dp1729
g1
g44
sg3
I01
sg10
L5L
sa(dp1730
g1
g46
sg3
I01
sg10
L5L
sa(dp1731
g1
g48
sg3
I01
sg10
L5L
sa(dp1732
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1733
sa(dp1734
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1735
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1736
sa(dp1737
g1
g58
sg3
I01
sg10
L5L
sa(dp1738
g1
g60
sg3
I01
sg10
L5L
sa(dp1739
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1740
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1741
sa(dp1742
g1
g67
sg3
I01
sg10
L5L
sa(dp1743
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1744
sa(dp1745
g1
g72
sg3
I01
sg10
L5L
sa(dp1746
g1
g74
sg3
I01
sg10
L5L
sa(dp1747
g1
g76
sg3
I01
sg10
L5L
sa(dp1748
g1
g247
sg3
I01
sg10
L5L
sa(dp1749
g1
g249
sg3
I01
sg10
L5L
sa(dp1750
g1
g251
sg3
I01
sg10
L5L
sa(dp1751
g1
g253
sg3
I01
sg10
L5L
sa(dp1752
g1
g255
sg3
I01
sg10
L5L
sa(dp1753
g1
g257
sg3
I01
sg10
L5L
sa(dp1754
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1755
sasg4
VBase class for I/O related errors.
p1756
sa(dp1757
g1
VOverflowError
p1758
sg3
I01
sg10
L3L
sg6
(lp1759
(dp1760
g1
g13
sg3
I01
sg10
L5L
sa(dp1761
g1
g15
sg3
I01
sg10
L5L
sa(dp1762
g1
g17
sg3
I01
sg10
L5L
sa(dp1763
g1
g19
sg3
I01
sg10
L5L
sa(dp1764
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1765
sa(dp1766
g1
g24
sg3
I01
sg10
L5L
sa(dp1767
g1
g26
sg3
I01
sg10
L5L
sa(dp1768
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1769
sa(dp1770
g1
g31
sg3
I01
sg10
L5L
sa(dp1771
g1
g33
sg3
I01
sg10
L5L
sa(dp1772
g1
g35
sg3
I01
sg10
L5L
sa(dp1773
g1
g37
sg3
I01
sg10
L5L
sa(dp1774
g1
g39
sg3
I01
sg10
L5L
sa(dp1775
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1776
sa(dp1777
g1
g44
sg3
I01
sg10
L5L
sa(dp1778
g1
g46
sg3
I01
sg10
L5L
sa(dp1779
g1
g48
sg3
I01
sg10
L5L
sa(dp1780
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1781
sa(dp1782
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1783
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1784
sa(dp1785
g1
g58
sg3
I01
sg10
L5L
sa(dp1786
g1
g60
sg3
I01
sg10
L5L
sa(dp1787
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1788
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1789
sa(dp1790
g1
g67
sg3
I01
sg10
L5L
sa(dp1791
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1792
sa(dp1793
g1
g72
sg3
I01
sg10
L5L
sa(dp1794
g1
g74
sg3
I01
sg10
L5L
sa(dp1795
g1
g76
sg3
I01
sg10
L5L
sa(dp1796
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1797
sasg4
VResult too large to be represented.
p1798
sa(dp1799
g1
VPendingDeprecationWarning
p1800
sg3
I01
sg10
L3L
sg6
(lp1801
(dp1802
g1
g13
sg3
I01
sg10
L5L
sa(dp1803
g1
g15
sg3
I01
sg10
L5L
sa(dp1804
g1
g17
sg3
I01
sg10
L5L
sa(dp1805
g1
g19
sg3
I01
sg10
L5L
sa(dp1806
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1807
sa(dp1808
g1
g24
sg3
I01
sg10
L5L
sa(dp1809
g1
g26
sg3
I01
sg10
L5L
sa(dp1810
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1811
sa(dp1812
g1
g31
sg3
I01
sg10
L5L
sa(dp1813
g1
g33
sg3
I01
sg10
L5L
sa(dp1814
g1
g35
sg3
I01
sg10
L5L
sa(dp1815
g1
g37
sg3
I01
sg10
L5L
sa(dp1816
g1
g39
sg3
I01
sg10
L5L
sa(dp1817
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1818
sa(dp1819
g1
g44
sg3
I01
sg10
L5L
sa(dp1820
g1
g46
sg3
I01
sg10
L5L
sa(dp1821
g1
g48
sg3
I01
sg10
L5L
sa(dp1822
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1823
sa(dp1824
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1825
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1826
sa(dp1827
g1
g58
sg3
I01
sg10
L5L
sa(dp1828
g1
g60
sg3
I01
sg10
L5L
sa(dp1829
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1830
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1831
sa(dp1832
g1
g67
sg3
I01
sg10
L5L
sa(dp1833
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1834
sa(dp1835
g1
g72
sg3
I01
sg10
L5L
sa(dp1836
g1
g74
sg3
I01
sg10
L5L
sa(dp1837
g1
g76
sg3
I01
sg10
L5L
sa(dp1838
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1839
sasg4
VBase class for warnings about features which will be deprecated\u000ain the future.
p1840
sa(dp1841
g1
VPermissionError
p1842
sg3
I01
sg10
L3L
sg6
(lp1843
(dp1844
g1
g13
sg3
I01
sg10
L5L
sa(dp1845
g1
g15
sg3
I01
sg10
L5L
sa(dp1846
g1
g17
sg3
I01
sg10
L5L
sa(dp1847
g1
g19
sg3
I01
sg10
L5L
sa(dp1848
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1849
sa(dp1850
g1
g24
sg3
I01
sg10
L5L
sa(dp1851
g1
g26
sg3
I01
sg10
L5L
sa(dp1852
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1853
sa(dp1854
g1
g31
sg3
I01
sg10
L5L
sa(dp1855
g1
g33
sg3
I01
sg10
L5L
sa(dp1856
g1
g35
sg3
I01
sg10
L5L
sa(dp1857
g1
g37
sg3
I01
sg10
L5L
sa(dp1858
g1
g39
sg3
I01
sg10
L5L
sa(dp1859
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1860
sa(dp1861
g1
g44
sg3
I01
sg10
L5L
sa(dp1862
g1
g46
sg3
I01
sg10
L5L
sa(dp1863
g1
g48
sg3
I01
sg10
L5L
sa(dp1864
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1865
sa(dp1866
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1867
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1868
sa(dp1869
g1
g58
sg3
I01
sg10
L5L
sa(dp1870
g1
g60
sg3
I01
sg10
L5L
sa(dp1871
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1872
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1873
sa(dp1874
g1
g67
sg3
I01
sg10
L5L
sa(dp1875
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1876
sa(dp1877
g1
g72
sg3
I01
sg10
L5L
sa(dp1878
g1
g74
sg3
I01
sg10
L5L
sa(dp1879
g1
g76
sg3
I01
sg10
L5L
sa(dp1880
g1
g247
sg3
I01
sg10
L5L
sa(dp1881
g1
g249
sg3
I01
sg10
L5L
sa(dp1882
g1
g251
sg3
I01
sg10
L5L
sa(dp1883
g1
g253
sg3
I01
sg10
L5L
sa(dp1884
g1
g255
sg3
I01
sg10
L5L
sa(dp1885
g1
g257
sg3
I01
sg10
L5L
sa(dp1886
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1887
sasg4
VNot enough permissions.
p1888
sa(dp1889
g1
VProcessLookupError
p1890
sg3
I01
sg10
L3L
sg6
(lp1891
(dp1892
g1
g13
sg3
I01
sg10
L5L
sa(dp1893
g1
g15
sg3
I01
sg10
L5L
sa(dp1894
g1
g17
sg3
I01
sg10
L5L
sa(dp1895
g1
g19
sg3
I01
sg10
L5L
sa(dp1896
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1897
sa(dp1898
g1
g24
sg3
I01
sg10
L5L
sa(dp1899
g1
g26
sg3
I01
sg10
L5L
sa(dp1900
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1901
sa(dp1902
g1
g31
sg3
I01
sg10
L5L
sa(dp1903
g1
g33
sg3
I01
sg10
L5L
sa(dp1904
g1
g35
sg3
I01
sg10
L5L
sa(dp1905
g1
g37
sg3
I01
sg10
L5L
sa(dp1906
g1
g39
sg3
I01
sg10
L5L
sa(dp1907
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1908
sa(dp1909
g1
g44
sg3
I01
sg10
L5L
sa(dp1910
g1
g46
sg3
I01
sg10
L5L
sa(dp1911
g1
g48
sg3
I01
sg10
L5L
sa(dp1912
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1913
sa(dp1914
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1915
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1916
sa(dp1917
g1
g58
sg3
I01
sg10
L5L
sa(dp1918
g1
g60
sg3
I01
sg10
L5L
sa(dp1919
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1920
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1921
sa(dp1922
g1
g67
sg3
I01
sg10
L5L
sa(dp1923
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1924
sa(dp1925
g1
g72
sg3
I01
sg10
L5L
sa(dp1926
g1
g74
sg3
I01
sg10
L5L
sa(dp1927
g1
g76
sg3
I01
sg10
L5L
sa(dp1928
g1
g247
sg3
I01
sg10
L5L
sa(dp1929
g1
g249
sg3
I01
sg10
L5L
sa(dp1930
g1
g251
sg3
I01
sg10
L5L
sa(dp1931
g1
g253
sg3
I01
sg10
L5L
sa(dp1932
g1
g255
sg3
I01
sg10
L5L
sa(dp1933
g1
g257
sg3
I01
sg10
L5L
sa(dp1934
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1935
sasg4
VProcess not found.
p1936
sa(dp1937
g1
VRecursionError
p1938
sg3
I01
sg10
L3L
sg6
(lp1939
(dp1940
g1
g13
sg3
I01
sg10
L5L
sa(dp1941
g1
g15
sg3
I01
sg10
L5L
sa(dp1942
g1
g17
sg3
I01
sg10
L5L
sa(dp1943
g1
g19
sg3
I01
sg10
L5L
sa(dp1944
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1945
sa(dp1946
g1
g24
sg3
I01
sg10
L5L
sa(dp1947
g1
g26
sg3
I01
sg10
L5L
sa(dp1948
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1949
sa(dp1950
g1
g31
sg3
I01
sg10
L5L
sa(dp1951
g1
g33
sg3
I01
sg10
L5L
sa(dp1952
g1
g35
sg3
I01
sg10
L5L
sa(dp1953
g1
g37
sg3
I01
sg10
L5L
sa(dp1954
g1
g39
sg3
I01
sg10
L5L
sa(dp1955
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1956
sa(dp1957
g1
g44
sg3
I01
sg10
L5L
sa(dp1958
g1
g46
sg3
I01
sg10
L5L
sa(dp1959
g1
g48
sg3
I01
sg10
L5L
sa(dp1960
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p1961
sa(dp1962
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp1963
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p1964
sa(dp1965
g1
g58
sg3
I01
sg10
L5L
sa(dp1966
g1
g60
sg3
I01
sg10
L5L
sa(dp1967
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp1968
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1969
sa(dp1970
g1
g67
sg3
I01
sg10
L5L
sa(dp1971
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1972
sa(dp1973
g1
g72
sg3
I01
sg10
L5L
sa(dp1974
g1
g74
sg3
I01
sg10
L5L
sa(dp1975
g1
g76
sg3
I01
sg10
L5L
sa(dp1976
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1977
sasg4
VRecursion limit exceeded.
p1978
sa(dp1979
g1
VReferenceError
p1980
sg3
I01
sg10
L3L
sg6
(lp1981
(dp1982
g1
g13
sg3
I01
sg10
L5L
sa(dp1983
g1
g15
sg3
I01
sg10
L5L
sa(dp1984
g1
g17
sg3
I01
sg10
L5L
sa(dp1985
g1
g19
sg3
I01
sg10
L5L
sa(dp1986
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p1987
sa(dp1988
g1
g24
sg3
I01
sg10
L5L
sa(dp1989
g1
g26
sg3
I01
sg10
L5L
sa(dp1990
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p1991
sa(dp1992
g1
g31
sg3
I01
sg10
L5L
sa(dp1993
g1
g33
sg3
I01
sg10
L5L
sa(dp1994
g1
g35
sg3
I01
sg10
L5L
sa(dp1995
g1
g37
sg3
I01
sg10
L5L
sa(dp1996
g1
g39
sg3
I01
sg10
L5L
sa(dp1997
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p1998
sa(dp1999
g1
g44
sg3
I01
sg10
L5L
sa(dp2000
g1
g46
sg3
I01
sg10
L5L
sa(dp2001
g1
g48
sg3
I01
sg10
L5L
sa(dp2002
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2003
sa(dp2004
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2005
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2006
sa(dp2007
g1
g58
sg3
I01
sg10
L5L
sa(dp2008
g1
g60
sg3
I01
sg10
L5L
sa(dp2009
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2010
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2011
sa(dp2012
g1
g67
sg3
I01
sg10
L5L
sa(dp2013
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2014
sa(dp2015
g1
g72
sg3
I01
sg10
L5L
sa(dp2016
g1
g74
sg3
I01
sg10
L5L
sa(dp2017
g1
g76
sg3
I01
sg10
L5L
sa(dp2018
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2019
sasg4
VWeak ref proxy used after referent went away.
p2020
sa(dp2021
g1
VResourceWarning
p2022
sg3
I01
sg10
L3L
sg6
(lp2023
(dp2024
g1
g13
sg3
I01
sg10
L5L
sa(dp2025
g1
g15
sg3
I01
sg10
L5L
sa(dp2026
g1
g17
sg3
I01
sg10
L5L
sa(dp2027
g1
g19
sg3
I01
sg10
L5L
sa(dp2028
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2029
sa(dp2030
g1
g24
sg3
I01
sg10
L5L
sa(dp2031
g1
g26
sg3
I01
sg10
L5L
sa(dp2032
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2033
sa(dp2034
g1
g31
sg3
I01
sg10
L5L
sa(dp2035
g1
g33
sg3
I01
sg10
L5L
sa(dp2036
g1
g35
sg3
I01
sg10
L5L
sa(dp2037
g1
g37
sg3
I01
sg10
L5L
sa(dp2038
g1
g39
sg3
I01
sg10
L5L
sa(dp2039
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2040
sa(dp2041
g1
g44
sg3
I01
sg10
L5L
sa(dp2042
g1
g46
sg3
I01
sg10
L5L
sa(dp2043
g1
g48
sg3
I01
sg10
L5L
sa(dp2044
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2045
sa(dp2046
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2047
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2048
sa(dp2049
g1
g58
sg3
I01
sg10
L5L
sa(dp2050
g1
g60
sg3
I01
sg10
L5L
sa(dp2051
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2052
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2053
sa(dp2054
g1
g67
sg3
I01
sg10
L5L
sa(dp2055
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2056
sa(dp2057
g1
g72
sg3
I01
sg10
L5L
sa(dp2058
g1
g74
sg3
I01
sg10
L5L
sa(dp2059
g1
g76
sg3
I01
sg10
L5L
sa(dp2060
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2061
sasg4
VBase class for warnings about resource usage.
p2062
sa(dp2063
g1
VRuntimeError
p2064
sg3
I01
sg10
L3L
sg6
(lp2065
(dp2066
g1
g13
sg3
I01
sg10
L5L
sa(dp2067
g1
g15
sg3
I01
sg10
L5L
sa(dp2068
g1
g17
sg3
I01
sg10
L5L
sa(dp2069
g1
g19
sg3
I01
sg10
L5L
sa(dp2070
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2071
sa(dp2072
g1
g24
sg3
I01
sg10
L5L
sa(dp2073
g1
g26
sg3
I01
sg10
L5L
sa(dp2074
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2075
sa(dp2076
g1
g31
sg3
I01
sg10
L5L
sa(dp2077
g1
g33
sg3
I01
sg10
L5L
sa(dp2078
g1
g35
sg3
I01
sg10
L5L
sa(dp2079
g1
g37
sg3
I01
sg10
L5L
sa(dp2080
g1
g39
sg3
I01
sg10
L5L
sa(dp2081
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2082
sa(dp2083
g1
g44
sg3
I01
sg10
L5L
sa(dp2084
g1
g46
sg3
I01
sg10
L5L
sa(dp2085
g1
g48
sg3
I01
sg10
L5L
sa(dp2086
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2087
sa(dp2088
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2089
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2090
sa(dp2091
g1
g58
sg3
I01
sg10
L5L
sa(dp2092
g1
g60
sg3
I01
sg10
L5L
sa(dp2093
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2094
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2095
sa(dp2096
g1
g67
sg3
I01
sg10
L5L
sa(dp2097
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2098
sa(dp2099
g1
g72
sg3
I01
sg10
L5L
sa(dp2100
g1
g74
sg3
I01
sg10
L5L
sa(dp2101
g1
g76
sg3
I01
sg10
L5L
sa(dp2102
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2103
sasg4
VUnspecified run-time error.
p2104
sa(dp2105
g1
VRuntimeWarning
p2106
sg3
I01
sg10
L3L
sg6
(lp2107
(dp2108
g1
g13
sg3
I01
sg10
L5L
sa(dp2109
g1
g15
sg3
I01
sg10
L5L
sa(dp2110
g1
g17
sg3
I01
sg10
L5L
sa(dp2111
g1
g19
sg3
I01
sg10
L5L
sa(dp2112
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2113
sa(dp2114
g1
g24
sg3
I01
sg10
L5L
sa(dp2115
g1
g26
sg3
I01
sg10
L5L
sa(dp2116
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2117
sa(dp2118
g1
g31
sg3
I01
sg10
L5L
sa(dp2119
g1
g33
sg3
I01
sg10
L5L
sa(dp2120
g1
g35
sg3
I01
sg10
L5L
sa(dp2121
g1
g37
sg3
I01
sg10
L5L
sa(dp2122
g1
g39
sg3
I01
sg10
L5L
sa(dp2123
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2124
sa(dp2125
g1
g44
sg3
I01
sg10
L5L
sa(dp2126
g1
g46
sg3
I01
sg10
L5L
sa(dp2127
g1
g48
sg3
I01
sg10
L5L
sa(dp2128
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2129
sa(dp2130
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2131
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2132
sa(dp2133
g1
g58
sg3
I01
sg10
L5L
sa(dp2134
g1
g60
sg3
I01
sg10
L5L
sa(dp2135
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2136
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2137
sa(dp2138
g1
g67
sg3
I01
sg10
L5L
sa(dp2139
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2140
sa(dp2141
g1
g72
sg3
I01
sg10
L5L
sa(dp2142
g1
g74
sg3
I01
sg10
L5L
sa(dp2143
g1
g76
sg3
I01
sg10
L5L
sa(dp2144
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2145
sasg4
VBase class for warnings about dubious runtime behavior.
p2146
sa(dp2147
g1
VStopAsyncIteration
p2148
sg3
I01
sg10
L3L
sg6
(lp2149
(dp2150
g1
g13
sg3
I01
sg10
L5L
sa(dp2151
g1
g15
sg3
I01
sg10
L5L
sa(dp2152
g1
g17
sg3
I01
sg10
L5L
sa(dp2153
g1
g19
sg3
I01
sg10
L5L
sa(dp2154
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2155
sa(dp2156
g1
g24
sg3
I01
sg10
L5L
sa(dp2157
g1
g26
sg3
I01
sg10
L5L
sa(dp2158
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2159
sa(dp2160
g1
g31
sg3
I01
sg10
L5L
sa(dp2161
g1
g33
sg3
I01
sg10
L5L
sa(dp2162
g1
g35
sg3
I01
sg10
L5L
sa(dp2163
g1
g37
sg3
I01
sg10
L5L
sa(dp2164
g1
g39
sg3
I01
sg10
L5L
sa(dp2165
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2166
sa(dp2167
g1
g44
sg3
I01
sg10
L5L
sa(dp2168
g1
g46
sg3
I01
sg10
L5L
sa(dp2169
g1
g48
sg3
I01
sg10
L5L
sa(dp2170
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2171
sa(dp2172
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2173
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2174
sa(dp2175
g1
g58
sg3
I01
sg10
L5L
sa(dp2176
g1
g60
sg3
I01
sg10
L5L
sa(dp2177
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2178
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2179
sa(dp2180
g1
g67
sg3
I01
sg10
L5L
sa(dp2181
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2182
sa(dp2183
g1
g72
sg3
I01
sg10
L5L
sa(dp2184
g1
g74
sg3
I01
sg10
L5L
sa(dp2185
g1
g76
sg3
I01
sg10
L5L
sa(dp2186
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2187
sasg4
VSignal the end from iterator.__anext__().
p2188
sa(dp2189
g1
VStopIteration
p2190
sg3
I01
sg10
L3L
sg6
(lp2191
(dp2192
g1
g13
sg3
I01
sg10
L5L
sa(dp2193
g1
g15
sg3
I01
sg10
L5L
sa(dp2194
g1
g17
sg3
I01
sg10
L5L
sa(dp2195
g1
g19
sg3
I01
sg10
L5L
sa(dp2196
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2197
sa(dp2198
g1
g24
sg3
I01
sg10
L5L
sa(dp2199
g1
g26
sg3
I01
sg10
L5L
sa(dp2200
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2201
sa(dp2202
g1
g31
sg3
I01
sg10
L5L
sa(dp2203
g1
g33
sg3
I01
sg10
L5L
sa(dp2204
g1
g35
sg3
I01
sg10
L5L
sa(dp2205
g1
g37
sg3
I01
sg10
L5L
sa(dp2206
g1
g39
sg3
I01
sg10
L5L
sa(dp2207
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2208
sa(dp2209
g1
g44
sg3
I01
sg10
L5L
sa(dp2210
g1
g46
sg3
I01
sg10
L5L
sa(dp2211
g1
g48
sg3
I01
sg10
L5L
sa(dp2212
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2213
sa(dp2214
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2215
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2216
sa(dp2217
g1
g58
sg3
I01
sg10
L5L
sa(dp2218
g1
g60
sg3
I01
sg10
L5L
sa(dp2219
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2220
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2221
sa(dp2222
g1
g67
sg3
I01
sg10
L5L
sa(dp2223
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2224
sa(dp2225
g1
g72
sg3
I01
sg10
L5L
sa(dp2226
g1
g74
sg3
I01
sg10
L5L
sa(dp2227
g1
g76
sg3
I01
sg10
L5L
sa(dp2228
g1
Vvalue
p2229
sg3
I01
sg10
L5L
sa(dp2230
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2231
sasg4
VSignal the end from iterator.__next__().
p2232
sa(dp2233
g1
VSyntaxError
p2234
sg3
I01
sg10
L3L
sg6
(lp2235
(dp2236
g1
g13
sg3
I01
sg10
L5L
sa(dp2237
g1
g15
sg3
I01
sg10
L5L
sa(dp2238
g1
g17
sg3
I01
sg10
L5L
sa(dp2239
g1
g19
sg3
I01
sg10
L5L
sa(dp2240
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2241
sa(dp2242
g1
g24
sg3
I01
sg10
L5L
sa(dp2243
g1
g26
sg3
I01
sg10
L5L
sa(dp2244
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2245
sa(dp2246
g1
g31
sg3
I01
sg10
L5L
sa(dp2247
g1
g33
sg3
I01
sg10
L5L
sa(dp2248
g1
g35
sg3
I01
sg10
L5L
sa(dp2249
g1
g37
sg3
I01
sg10
L5L
sa(dp2250
g1
g39
sg3
I01
sg10
L5L
sa(dp2251
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2252
sa(dp2253
g1
g44
sg3
I01
sg10
L5L
sa(dp2254
g1
g46
sg3
I01
sg10
L5L
sa(dp2255
g1
g48
sg3
I01
sg10
L5L
sa(dp2256
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2257
sa(dp2258
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2259
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2260
sa(dp2261
g1
g58
sg3
I01
sg10
L5L
sa(dp2262
g1
g60
sg3
I01
sg10
L5L
sa(dp2263
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2264
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2265
sa(dp2266
g1
g67
sg3
I01
sg10
L5L
sa(dp2267
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2268
sa(dp2269
g1
g72
sg3
I01
sg10
L5L
sa(dp2270
g1
g74
sg3
I01
sg10
L5L
sa(dp2271
g1
g76
sg3
I01
sg10
L5L
sa(dp2272
g1
g251
sg3
I01
sg10
L5L
sa(dp2273
g1
g1211
sg3
I01
sg10
L5L
sa(dp2274
g1
g1121
sg3
I01
sg10
L5L
sa(dp2275
g1
g1214
sg3
I01
sg10
L5L
sa(dp2276
g1
g1216
sg3
I01
sg10
L5L
sa(dp2277
g1
g1218
sg3
I01
sg10
L5L
sa(dp2278
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2279
sasg4
VInvalid syntax.
p2280
sa(dp2281
g1
VSyntaxWarning
p2282
sg3
I01
sg10
L3L
sg6
(lp2283
(dp2284
g1
g13
sg3
I01
sg10
L5L
sa(dp2285
g1
g15
sg3
I01
sg10
L5L
sa(dp2286
g1
g17
sg3
I01
sg10
L5L
sa(dp2287
g1
g19
sg3
I01
sg10
L5L
sa(dp2288
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2289
sa(dp2290
g1
g24
sg3
I01
sg10
L5L
sa(dp2291
g1
g26
sg3
I01
sg10
L5L
sa(dp2292
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2293
sa(dp2294
g1
g31
sg3
I01
sg10
L5L
sa(dp2295
g1
g33
sg3
I01
sg10
L5L
sa(dp2296
g1
g35
sg3
I01
sg10
L5L
sa(dp2297
g1
g37
sg3
I01
sg10
L5L
sa(dp2298
g1
g39
sg3
I01
sg10
L5L
sa(dp2299
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2300
sa(dp2301
g1
g44
sg3
I01
sg10
L5L
sa(dp2302
g1
g46
sg3
I01
sg10
L5L
sa(dp2303
g1
g48
sg3
I01
sg10
L5L
sa(dp2304
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2305
sa(dp2306
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2307
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2308
sa(dp2309
g1
g58
sg3
I01
sg10
L5L
sa(dp2310
g1
g60
sg3
I01
sg10
L5L
sa(dp2311
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2312
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2313
sa(dp2314
g1
g67
sg3
I01
sg10
L5L
sa(dp2315
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2316
sa(dp2317
g1
g72
sg3
I01
sg10
L5L
sa(dp2318
g1
g74
sg3
I01
sg10
L5L
sa(dp2319
g1
g76
sg3
I01
sg10
L5L
sa(dp2320
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2321
sasg4
VBase class for warnings about dubious syntax.
p2322
sa(dp2323
g1
VSystemError
p2324
sg3
I01
sg10
L3L
sg6
(lp2325
(dp2326
g1
g13
sg3
I01
sg10
L5L
sa(dp2327
g1
g15
sg3
I01
sg10
L5L
sa(dp2328
g1
g17
sg3
I01
sg10
L5L
sa(dp2329
g1
g19
sg3
I01
sg10
L5L
sa(dp2330
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2331
sa(dp2332
g1
g24
sg3
I01
sg10
L5L
sa(dp2333
g1
g26
sg3
I01
sg10
L5L
sa(dp2334
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2335
sa(dp2336
g1
g31
sg3
I01
sg10
L5L
sa(dp2337
g1
g33
sg3
I01
sg10
L5L
sa(dp2338
g1
g35
sg3
I01
sg10
L5L
sa(dp2339
g1
g37
sg3
I01
sg10
L5L
sa(dp2340
g1
g39
sg3
I01
sg10
L5L
sa(dp2341
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2342
sa(dp2343
g1
g44
sg3
I01
sg10
L5L
sa(dp2344
g1
g46
sg3
I01
sg10
L5L
sa(dp2345
g1
g48
sg3
I01
sg10
L5L
sa(dp2346
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2347
sa(dp2348
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2349
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2350
sa(dp2351
g1
g58
sg3
I01
sg10
L5L
sa(dp2352
g1
g60
sg3
I01
sg10
L5L
sa(dp2353
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2354
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2355
sa(dp2356
g1
g67
sg3
I01
sg10
L5L
sa(dp2357
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2358
sa(dp2359
g1
g72
sg3
I01
sg10
L5L
sa(dp2360
g1
g74
sg3
I01
sg10
L5L
sa(dp2361
g1
g76
sg3
I01
sg10
L5L
sa(dp2362
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2363
sasg4
VInternal error in the Python interpreter.\u000a\u000aPlease report this to the Python maintainer, along with the traceback,\u000athe Python version, and the hardware/OS platform and version.
p2364
sa(dp2365
g1
VSystemExit
p2366
sg3
I01
sg10
L3L
sg6
(lp2367
(dp2368
g1
g13
sg3
I01
sg10
L5L
sa(dp2369
g1
g15
sg3
I01
sg10
L5L
sa(dp2370
g1
g17
sg3
I01
sg10
L5L
sa(dp2371
g1
g19
sg3
I01
sg10
L5L
sa(dp2372
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2373
sa(dp2374
g1
g24
sg3
I01
sg10
L5L
sa(dp2375
g1
g26
sg3
I01
sg10
L5L
sa(dp2376
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2377
sa(dp2378
g1
g31
sg3
I01
sg10
L5L
sa(dp2379
g1
g33
sg3
I01
sg10
L5L
sa(dp2380
g1
g35
sg3
I01
sg10
L5L
sa(dp2381
g1
g37
sg3
I01
sg10
L5L
sa(dp2382
g1
g39
sg3
I01
sg10
L5L
sa(dp2383
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2384
sa(dp2385
g1
g44
sg3
I01
sg10
L5L
sa(dp2386
g1
g46
sg3
I01
sg10
L5L
sa(dp2387
g1
g48
sg3
I01
sg10
L5L
sa(dp2388
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2389
sa(dp2390
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2391
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2392
sa(dp2393
g1
g58
sg3
I01
sg10
L5L
sa(dp2394
g1
g60
sg3
I01
sg10
L5L
sa(dp2395
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2396
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2397
sa(dp2398
g1
g67
sg3
I01
sg10
L5L
sa(dp2399
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2400
sa(dp2401
g1
g72
sg3
I01
sg10
L5L
sa(dp2402
g1
g74
sg3
I01
sg10
L5L
sa(dp2403
g1
g76
sg3
I01
sg10
L5L
sa(dp2404
g1
Vcode
p2405
sg3
I01
sg10
L5L
sa(dp2406
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2407
sasg4
VRequest to exit from the interpreter.
p2408
sa(dp2409
g1
VTabError
p2410
sg3
I01
sg10
L3L
sg6
(lp2411
(dp2412
g1
g13
sg3
I01
sg10
L5L
sa(dp2413
g1
g15
sg3
I01
sg10
L5L
sa(dp2414
g1
g17
sg3
I01
sg10
L5L
sa(dp2415
g1
g19
sg3
I01
sg10
L5L
sa(dp2416
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2417
sa(dp2418
g1
g24
sg3
I01
sg10
L5L
sa(dp2419
g1
g26
sg3
I01
sg10
L5L
sa(dp2420
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2421
sa(dp2422
g1
g31
sg3
I01
sg10
L5L
sa(dp2423
g1
g33
sg3
I01
sg10
L5L
sa(dp2424
g1
g35
sg3
I01
sg10
L5L
sa(dp2425
g1
g37
sg3
I01
sg10
L5L
sa(dp2426
g1
g39
sg3
I01
sg10
L5L
sa(dp2427
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2428
sa(dp2429
g1
g44
sg3
I01
sg10
L5L
sa(dp2430
g1
g46
sg3
I01
sg10
L5L
sa(dp2431
g1
g48
sg3
I01
sg10
L5L
sa(dp2432
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2433
sa(dp2434
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2435
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2436
sa(dp2437
g1
g58
sg3
I01
sg10
L5L
sa(dp2438
g1
g60
sg3
I01
sg10
L5L
sa(dp2439
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2440
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2441
sa(dp2442
g1
g67
sg3
I01
sg10
L5L
sa(dp2443
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2444
sa(dp2445
g1
g72
sg3
I01
sg10
L5L
sa(dp2446
g1
g74
sg3
I01
sg10
L5L
sa(dp2447
g1
g76
sg3
I01
sg10
L5L
sa(dp2448
g1
g251
sg3
I01
sg10
L5L
sa(dp2449
g1
g1211
sg3
I01
sg10
L5L
sa(dp2450
g1
g1121
sg3
I01
sg10
L5L
sa(dp2451
g1
g1214
sg3
I01
sg10
L5L
sa(dp2452
g1
g1216
sg3
I01
sg10
L5L
sa(dp2453
g1
g1218
sg3
I01
sg10
L5L
sa(dp2454
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2455
sasg4
VImproper mixture of spaces and tabs.
p2456
sa(dp2457
g1
VTimeoutError
p2458
sg3
I01
sg10
L3L
sg6
(lp2459
(dp2460
g1
g13
sg3
I01
sg10
L5L
sa(dp2461
g1
g15
sg3
I01
sg10
L5L
sa(dp2462
g1
g17
sg3
I01
sg10
L5L
sa(dp2463
g1
g19
sg3
I01
sg10
L5L
sa(dp2464
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2465
sa(dp2466
g1
g24
sg3
I01
sg10
L5L
sa(dp2467
g1
g26
sg3
I01
sg10
L5L
sa(dp2468
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2469
sa(dp2470
g1
g31
sg3
I01
sg10
L5L
sa(dp2471
g1
g33
sg3
I01
sg10
L5L
sa(dp2472
g1
g35
sg3
I01
sg10
L5L
sa(dp2473
g1
g37
sg3
I01
sg10
L5L
sa(dp2474
g1
g39
sg3
I01
sg10
L5L
sa(dp2475
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2476
sa(dp2477
g1
g44
sg3
I01
sg10
L5L
sa(dp2478
g1
g46
sg3
I01
sg10
L5L
sa(dp2479
g1
g48
sg3
I01
sg10
L5L
sa(dp2480
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2481
sa(dp2482
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2483
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2484
sa(dp2485
g1
g58
sg3
I01
sg10
L5L
sa(dp2486
g1
g60
sg3
I01
sg10
L5L
sa(dp2487
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2488
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2489
sa(dp2490
g1
g67
sg3
I01
sg10
L5L
sa(dp2491
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2492
sa(dp2493
g1
g72
sg3
I01
sg10
L5L
sa(dp2494
g1
g74
sg3
I01
sg10
L5L
sa(dp2495
g1
g76
sg3
I01
sg10
L5L
sa(dp2496
g1
g247
sg3
I01
sg10
L5L
sa(dp2497
g1
g249
sg3
I01
sg10
L5L
sa(dp2498
g1
g251
sg3
I01
sg10
L5L
sa(dp2499
g1
g253
sg3
I01
sg10
L5L
sa(dp2500
g1
g255
sg3
I01
sg10
L5L
sa(dp2501
g1
g257
sg3
I01
sg10
L5L
sa(dp2502
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2503
sasg4
VTimeout expired.
p2504
sa(dp2505
g1
VTrue
p2506
sg3
I01
sg10
L5L
sa(dp2507
g1
VTypeError
p2508
sg3
I01
sg10
L3L
sg6
(lp2509
(dp2510
g1
g13
sg3
I01
sg10
L5L
sa(dp2511
g1
g15
sg3
I01
sg10
L5L
sa(dp2512
g1
g17
sg3
I01
sg10
L5L
sa(dp2513
g1
g19
sg3
I01
sg10
L5L
sa(dp2514
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2515
sa(dp2516
g1
g24
sg3
I01
sg10
L5L
sa(dp2517
g1
g26
sg3
I01
sg10
L5L
sa(dp2518
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2519
sa(dp2520
g1
g31
sg3
I01
sg10
L5L
sa(dp2521
g1
g33
sg3
I01
sg10
L5L
sa(dp2522
g1
g35
sg3
I01
sg10
L5L
sa(dp2523
g1
g37
sg3
I01
sg10
L5L
sa(dp2524
g1
g39
sg3
I01
sg10
L5L
sa(dp2525
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2526
sa(dp2527
g1
g44
sg3
I01
sg10
L5L
sa(dp2528
g1
g46
sg3
I01
sg10
L5L
sa(dp2529
g1
g48
sg3
I01
sg10
L5L
sa(dp2530
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2531
sa(dp2532
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2533
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2534
sa(dp2535
g1
g58
sg3
I01
sg10
L5L
sa(dp2536
g1
g60
sg3
I01
sg10
L5L
sa(dp2537
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2538
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2539
sa(dp2540
g1
g67
sg3
I01
sg10
L5L
sa(dp2541
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2542
sa(dp2543
g1
g72
sg3
I01
sg10
L5L
sa(dp2544
g1
g74
sg3
I01
sg10
L5L
sa(dp2545
g1
g76
sg3
I01
sg10
L5L
sa(dp2546
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2547
sasg4
VInappropriate argument type.
p2548
sa(dp2549
g1
VUnboundLocalError
p2550
sg3
I01
sg10
L3L
sg6
(lp2551
(dp2552
g1
g13
sg3
I01
sg10
L5L
sa(dp2553
g1
g15
sg3
I01
sg10
L5L
sa(dp2554
g1
g17
sg3
I01
sg10
L5L
sa(dp2555
g1
g19
sg3
I01
sg10
L5L
sa(dp2556
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2557
sa(dp2558
g1
g24
sg3
I01
sg10
L5L
sa(dp2559
g1
g26
sg3
I01
sg10
L5L
sa(dp2560
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2561
sa(dp2562
g1
g31
sg3
I01
sg10
L5L
sa(dp2563
g1
g33
sg3
I01
sg10
L5L
sa(dp2564
g1
g35
sg3
I01
sg10
L5L
sa(dp2565
g1
g37
sg3
I01
sg10
L5L
sa(dp2566
g1
g39
sg3
I01
sg10
L5L
sa(dp2567
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2568
sa(dp2569
g1
g44
sg3
I01
sg10
L5L
sa(dp2570
g1
g46
sg3
I01
sg10
L5L
sa(dp2571
g1
g48
sg3
I01
sg10
L5L
sa(dp2572
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2573
sa(dp2574
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2575
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2576
sa(dp2577
g1
g58
sg3
I01
sg10
L5L
sa(dp2578
g1
g60
sg3
I01
sg10
L5L
sa(dp2579
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2580
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2581
sa(dp2582
g1
g67
sg3
I01
sg10
L5L
sa(dp2583
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2584
sa(dp2585
g1
g72
sg3
I01
sg10
L5L
sa(dp2586
g1
g74
sg3
I01
sg10
L5L
sa(dp2587
g1
g76
sg3
I01
sg10
L5L
sa(dp2588
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2589
sasg4
VLocal name referenced but not bound to a value.
p2590
sa(dp2591
g1
VUnicodeDecodeError
p2592
sg3
I01
sg10
L3L
sg6
(lp2593
(dp2594
g1
g13
sg3
I01
sg10
L5L
sa(dp2595
g1
g15
sg3
I01
sg10
L5L
sa(dp2596
g1
g17
sg3
I01
sg10
L5L
sa(dp2597
g1
g19
sg3
I01
sg10
L5L
sa(dp2598
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2599
sa(dp2600
g1
g24
sg3
I01
sg10
L5L
sa(dp2601
g1
g26
sg3
I01
sg10
L5L
sa(dp2602
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2603
sa(dp2604
g1
g31
sg3
I01
sg10
L5L
sa(dp2605
g1
g33
sg3
I01
sg10
L5L
sa(dp2606
g1
g35
sg3
I01
sg10
L5L
sa(dp2607
g1
g37
sg3
I01
sg10
L5L
sa(dp2608
g1
g39
sg3
I01
sg10
L5L
sa(dp2609
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2610
sa(dp2611
g1
g44
sg3
I01
sg10
L5L
sa(dp2612
g1
g46
sg3
I01
sg10
L5L
sa(dp2613
g1
g48
sg3
I01
sg10
L5L
sa(dp2614
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2615
sa(dp2616
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2617
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2618
sa(dp2619
g1
g58
sg3
I01
sg10
L5L
sa(dp2620
g1
g60
sg3
I01
sg10
L5L
sa(dp2621
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2622
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2623
sa(dp2624
g1
g67
sg3
I01
sg10
L5L
sa(dp2625
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2626
sa(dp2627
g1
g72
sg3
I01
sg10
L5L
sa(dp2628
g1
g74
sg3
I01
sg10
L5L
sa(dp2629
g1
g76
sg3
I01
sg10
L5L
sa(dp2630
g1
Vencoding
p2631
sg3
I01
sg10
L5L
sa(dp2632
g1
Vend
p2633
sg3
I01
sg10
L5L
sa(dp2634
g1
Vobject
p2635
sg3
I01
sg10
L5L
sa(dp2636
g1
Vreason
p2637
sg3
I01
sg10
L5L
sa(dp2638
g1
Vstart
p2639
sg3
I01
sg10
L5L
sa(dp2640
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2641
sasg4
VUnicode decoding error.
p2642
sa(dp2643
g1
VUnicodeEncodeError
p2644
sg3
I01
sg10
L3L
sg6
(lp2645
(dp2646
g1
g13
sg3
I01
sg10
L5L
sa(dp2647
g1
g15
sg3
I01
sg10
L5L
sa(dp2648
g1
g17
sg3
I01
sg10
L5L
sa(dp2649
g1
g19
sg3
I01
sg10
L5L
sa(dp2650
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2651
sa(dp2652
g1
g24
sg3
I01
sg10
L5L
sa(dp2653
g1
g26
sg3
I01
sg10
L5L
sa(dp2654
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2655
sa(dp2656
g1
g31
sg3
I01
sg10
L5L
sa(dp2657
g1
g33
sg3
I01
sg10
L5L
sa(dp2658
g1
g35
sg3
I01
sg10
L5L
sa(dp2659
g1
g37
sg3
I01
sg10
L5L
sa(dp2660
g1
g39
sg3
I01
sg10
L5L
sa(dp2661
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2662
sa(dp2663
g1
g44
sg3
I01
sg10
L5L
sa(dp2664
g1
g46
sg3
I01
sg10
L5L
sa(dp2665
g1
g48
sg3
I01
sg10
L5L
sa(dp2666
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2667
sa(dp2668
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2669
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2670
sa(dp2671
g1
g58
sg3
I01
sg10
L5L
sa(dp2672
g1
g60
sg3
I01
sg10
L5L
sa(dp2673
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2674
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2675
sa(dp2676
g1
g67
sg3
I01
sg10
L5L
sa(dp2677
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2678
sa(dp2679
g1
g72
sg3
I01
sg10
L5L
sa(dp2680
g1
g74
sg3
I01
sg10
L5L
sa(dp2681
g1
g76
sg3
I01
sg10
L5L
sa(dp2682
g1
g2631
sg3
I01
sg10
L5L
sa(dp2683
g1
g2633
sg3
I01
sg10
L5L
sa(dp2684
g1
g2635
sg3
I01
sg10
L5L
sa(dp2685
g1
g2637
sg3
I01
sg10
L5L
sa(dp2686
g1
g2639
sg3
I01
sg10
L5L
sa(dp2687
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2688
sasg4
VUnicode encoding error.
p2689
sa(dp2690
g1
VUnicodeError
p2691
sg3
I01
sg10
L3L
sg6
(lp2692
(dp2693
g1
g13
sg3
I01
sg10
L5L
sa(dp2694
g1
g15
sg3
I01
sg10
L5L
sa(dp2695
g1
g17
sg3
I01
sg10
L5L
sa(dp2696
g1
g19
sg3
I01
sg10
L5L
sa(dp2697
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2698
sa(dp2699
g1
g24
sg3
I01
sg10
L5L
sa(dp2700
g1
g26
sg3
I01
sg10
L5L
sa(dp2701
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2702
sa(dp2703
g1
g31
sg3
I01
sg10
L5L
sa(dp2704
g1
g33
sg3
I01
sg10
L5L
sa(dp2705
g1
g35
sg3
I01
sg10
L5L
sa(dp2706
g1
g37
sg3
I01
sg10
L5L
sa(dp2707
g1
g39
sg3
I01
sg10
L5L
sa(dp2708
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2709
sa(dp2710
g1
g44
sg3
I01
sg10
L5L
sa(dp2711
g1
g46
sg3
I01
sg10
L5L
sa(dp2712
g1
g48
sg3
I01
sg10
L5L
sa(dp2713
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2714
sa(dp2715
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2716
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2717
sa(dp2718
g1
g58
sg3
I01
sg10
L5L
sa(dp2719
g1
g60
sg3
I01
sg10
L5L
sa(dp2720
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2721
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2722
sa(dp2723
g1
g67
sg3
I01
sg10
L5L
sa(dp2724
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2725
sa(dp2726
g1
g72
sg3
I01
sg10
L5L
sa(dp2727
g1
g74
sg3
I01
sg10
L5L
sa(dp2728
g1
g76
sg3
I01
sg10
L5L
sa(dp2729
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2730
sasg4
VUnicode related error.
p2731
sa(dp2732
g1
VUnicodeTranslateError
p2733
sg3
I01
sg10
L3L
sg6
(lp2734
(dp2735
g1
g13
sg3
I01
sg10
L5L
sa(dp2736
g1
g15
sg3
I01
sg10
L5L
sa(dp2737
g1
g17
sg3
I01
sg10
L5L
sa(dp2738
g1
g19
sg3
I01
sg10
L5L
sa(dp2739
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2740
sa(dp2741
g1
g24
sg3
I01
sg10
L5L
sa(dp2742
g1
g26
sg3
I01
sg10
L5L
sa(dp2743
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2744
sa(dp2745
g1
g31
sg3
I01
sg10
L5L
sa(dp2746
g1
g33
sg3
I01
sg10
L5L
sa(dp2747
g1
g35
sg3
I01
sg10
L5L
sa(dp2748
g1
g37
sg3
I01
sg10
L5L
sa(dp2749
g1
g39
sg3
I01
sg10
L5L
sa(dp2750
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2751
sa(dp2752
g1
g44
sg3
I01
sg10
L5L
sa(dp2753
g1
g46
sg3
I01
sg10
L5L
sa(dp2754
g1
g48
sg3
I01
sg10
L5L
sa(dp2755
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2756
sa(dp2757
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2758
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2759
sa(dp2760
g1
g58
sg3
I01
sg10
L5L
sa(dp2761
g1
g60
sg3
I01
sg10
L5L
sa(dp2762
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2763
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2764
sa(dp2765
g1
g67
sg3
I01
sg10
L5L
sa(dp2766
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2767
sa(dp2768
g1
g72
sg3
I01
sg10
L5L
sa(dp2769
g1
g74
sg3
I01
sg10
L5L
sa(dp2770
g1
g76
sg3
I01
sg10
L5L
sa(dp2771
g1
g2631
sg3
I01
sg10
L5L
sa(dp2772
g1
g2633
sg3
I01
sg10
L5L
sa(dp2773
g1
g2635
sg3
I01
sg10
L5L
sa(dp2774
g1
g2637
sg3
I01
sg10
L5L
sa(dp2775
g1
g2639
sg3
I01
sg10
L5L
sa(dp2776
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2777
sasg4
VUnicode translation error.
p2778
sa(dp2779
g1
VUnicodeWarning
p2780
sg3
I01
sg10
L3L
sg6
(lp2781
(dp2782
g1
g13
sg3
I01
sg10
L5L
sa(dp2783
g1
g15
sg3
I01
sg10
L5L
sa(dp2784
g1
g17
sg3
I01
sg10
L5L
sa(dp2785
g1
g19
sg3
I01
sg10
L5L
sa(dp2786
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2787
sa(dp2788
g1
g24
sg3
I01
sg10
L5L
sa(dp2789
g1
g26
sg3
I01
sg10
L5L
sa(dp2790
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2791
sa(dp2792
g1
g31
sg3
I01
sg10
L5L
sa(dp2793
g1
g33
sg3
I01
sg10
L5L
sa(dp2794
g1
g35
sg3
I01
sg10
L5L
sa(dp2795
g1
g37
sg3
I01
sg10
L5L
sa(dp2796
g1
g39
sg3
I01
sg10
L5L
sa(dp2797
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2798
sa(dp2799
g1
g44
sg3
I01
sg10
L5L
sa(dp2800
g1
g46
sg3
I01
sg10
L5L
sa(dp2801
g1
g48
sg3
I01
sg10
L5L
sa(dp2802
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2803
sa(dp2804
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2805
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2806
sa(dp2807
g1
g58
sg3
I01
sg10
L5L
sa(dp2808
g1
g60
sg3
I01
sg10
L5L
sa(dp2809
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2810
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2811
sa(dp2812
g1
g67
sg3
I01
sg10
L5L
sa(dp2813
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2814
sa(dp2815
g1
g72
sg3
I01
sg10
L5L
sa(dp2816
g1
g74
sg3
I01
sg10
L5L
sa(dp2817
g1
g76
sg3
I01
sg10
L5L
sa(dp2818
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2819
sasg4
VBase class for warnings about Unicode related problems, mostly\u000arelated to conversion problems.
p2820
sa(dp2821
g1
VUserWarning
p2822
sg3
I01
sg10
L3L
sg6
(lp2823
(dp2824
g1
g13
sg3
I01
sg10
L5L
sa(dp2825
g1
g15
sg3
I01
sg10
L5L
sa(dp2826
g1
g17
sg3
I01
sg10
L5L
sa(dp2827
g1
g19
sg3
I01
sg10
L5L
sa(dp2828
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2829
sa(dp2830
g1
g24
sg3
I01
sg10
L5L
sa(dp2831
g1
g26
sg3
I01
sg10
L5L
sa(dp2832
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2833
sa(dp2834
g1
g31
sg3
I01
sg10
L5L
sa(dp2835
g1
g33
sg3
I01
sg10
L5L
sa(dp2836
g1
g35
sg3
I01
sg10
L5L
sa(dp2837
g1
g37
sg3
I01
sg10
L5L
sa(dp2838
g1
g39
sg3
I01
sg10
L5L
sa(dp2839
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2840
sa(dp2841
g1
g44
sg3
I01
sg10
L5L
sa(dp2842
g1
g46
sg3
I01
sg10
L5L
sa(dp2843
g1
g48
sg3
I01
sg10
L5L
sa(dp2844
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2845
sa(dp2846
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2847
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2848
sa(dp2849
g1
g58
sg3
I01
sg10
L5L
sa(dp2850
g1
g60
sg3
I01
sg10
L5L
sa(dp2851
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2852
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2853
sa(dp2854
g1
g67
sg3
I01
sg10
L5L
sa(dp2855
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2856
sa(dp2857
g1
g72
sg3
I01
sg10
L5L
sa(dp2858
g1
g74
sg3
I01
sg10
L5L
sa(dp2859
g1
g76
sg3
I01
sg10
L5L
sa(dp2860
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2861
sasg4
VBase class for warnings generated by user code.
p2862
sa(dp2863
g1
VValueError
p2864
sg3
I01
sg10
L3L
sg6
(lp2865
(dp2866
g1
g13
sg3
I01
sg10
L5L
sa(dp2867
g1
g15
sg3
I01
sg10
L5L
sa(dp2868
g1
g17
sg3
I01
sg10
L5L
sa(dp2869
g1
g19
sg3
I01
sg10
L5L
sa(dp2870
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2871
sa(dp2872
g1
g24
sg3
I01
sg10
L5L
sa(dp2873
g1
g26
sg3
I01
sg10
L5L
sa(dp2874
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2875
sa(dp2876
g1
g31
sg3
I01
sg10
L5L
sa(dp2877
g1
g33
sg3
I01
sg10
L5L
sa(dp2878
g1
g35
sg3
I01
sg10
L5L
sa(dp2879
g1
g37
sg3
I01
sg10
L5L
sa(dp2880
g1
g39
sg3
I01
sg10
L5L
sa(dp2881
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2882
sa(dp2883
g1
g44
sg3
I01
sg10
L5L
sa(dp2884
g1
g46
sg3
I01
sg10
L5L
sa(dp2885
g1
g48
sg3
I01
sg10
L5L
sa(dp2886
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2887
sa(dp2888
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2889
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2890
sa(dp2891
g1
g58
sg3
I01
sg10
L5L
sa(dp2892
g1
g60
sg3
I01
sg10
L5L
sa(dp2893
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2894
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2895
sa(dp2896
g1
g67
sg3
I01
sg10
L5L
sa(dp2897
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2898
sa(dp2899
g1
g72
sg3
I01
sg10
L5L
sa(dp2900
g1
g74
sg3
I01
sg10
L5L
sa(dp2901
g1
g76
sg3
I01
sg10
L5L
sa(dp2902
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2903
sasg4
VInappropriate argument value (of correct type).
p2904
sa(dp2905
g1
VWarning
p2906
sg3
I01
sg10
L3L
sg6
(lp2907
(dp2908
g1
g13
sg3
I01
sg10
L5L
sa(dp2909
g1
g15
sg3
I01
sg10
L5L
sa(dp2910
g1
g17
sg3
I01
sg10
L5L
sa(dp2911
g1
g19
sg3
I01
sg10
L5L
sa(dp2912
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2913
sa(dp2914
g1
g24
sg3
I01
sg10
L5L
sa(dp2915
g1
g26
sg3
I01
sg10
L5L
sa(dp2916
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2917
sa(dp2918
g1
g31
sg3
I01
sg10
L5L
sa(dp2919
g1
g33
sg3
I01
sg10
L5L
sa(dp2920
g1
g35
sg3
I01
sg10
L5L
sa(dp2921
g1
g37
sg3
I01
sg10
L5L
sa(dp2922
g1
g39
sg3
I01
sg10
L5L
sa(dp2923
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2924
sa(dp2925
g1
g44
sg3
I01
sg10
L5L
sa(dp2926
g1
g46
sg3
I01
sg10
L5L
sa(dp2927
g1
g48
sg3
I01
sg10
L5L
sa(dp2928
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2929
sa(dp2930
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2931
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2932
sa(dp2933
g1
g58
sg3
I01
sg10
L5L
sa(dp2934
g1
g60
sg3
I01
sg10
L5L
sa(dp2935
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2936
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2937
sa(dp2938
g1
g67
sg3
I01
sg10
L5L
sa(dp2939
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2940
sa(dp2941
g1
g72
sg3
I01
sg10
L5L
sa(dp2942
g1
g74
sg3
I01
sg10
L5L
sa(dp2943
g1
g76
sg3
I01
sg10
L5L
sa(dp2944
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2945
sasg4
VBase class for warning categories.
p2946
sa(dp2947
g1
VWindowsError
p2948
sg3
I01
sg10
L3L
sg6
(lp2949
(dp2950
g1
g13
sg3
I01
sg10
L5L
sa(dp2951
g1
g15
sg3
I01
sg10
L5L
sa(dp2952
g1
g17
sg3
I01
sg10
L5L
sa(dp2953
g1
g19
sg3
I01
sg10
L5L
sa(dp2954
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p2955
sa(dp2956
g1
g24
sg3
I01
sg10
L5L
sa(dp2957
g1
g26
sg3
I01
sg10
L5L
sa(dp2958
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p2959
sa(dp2960
g1
g31
sg3
I01
sg10
L5L
sa(dp2961
g1
g33
sg3
I01
sg10
L5L
sa(dp2962
g1
g35
sg3
I01
sg10
L5L
sa(dp2963
g1
g37
sg3
I01
sg10
L5L
sa(dp2964
g1
g39
sg3
I01
sg10
L5L
sa(dp2965
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p2966
sa(dp2967
g1
g44
sg3
I01
sg10
L5L
sa(dp2968
g1
g46
sg3
I01
sg10
L5L
sa(dp2969
g1
g48
sg3
I01
sg10
L5L
sa(dp2970
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p2971
sa(dp2972
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp2973
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p2974
sa(dp2975
g1
g58
sg3
I01
sg10
L5L
sa(dp2976
g1
g60
sg3
I01
sg10
L5L
sa(dp2977
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp2978
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2979
sa(dp2980
g1
g67
sg3
I01
sg10
L5L
sa(dp2981
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2982
sa(dp2983
g1
g72
sg3
I01
sg10
L5L
sa(dp2984
g1
g74
sg3
I01
sg10
L5L
sa(dp2985
g1
g76
sg3
I01
sg10
L5L
sa(dp2986
g1
g247
sg3
I01
sg10
L5L
sa(dp2987
g1
g249
sg3
I01
sg10
L5L
sa(dp2988
g1
g251
sg3
I01
sg10
L5L
sa(dp2989
g1
g253
sg3
I01
sg10
L5L
sa(dp2990
g1
g255
sg3
I01
sg10
L5L
sa(dp2991
g1
g257
sg3
I01
sg10
L5L
sa(dp2992
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2993
sasg4
VBase class for I/O related errors.
p2994
sa(dp2995
g1
VZeroDivisionError
p2996
sg3
I01
sg10
L3L
sg6
(lp2997
(dp2998
g1
g13
sg3
I01
sg10
L5L
sa(dp2999
g1
g15
sg3
I01
sg10
L5L
sa(dp3000
g1
g17
sg3
I01
sg10
L5L
sa(dp3001
g1
g19
sg3
I01
sg10
L5L
sa(dp3002
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3003
sa(dp3004
g1
g24
sg3
I01
sg10
L5L
sa(dp3005
g1
g26
sg3
I01
sg10
L5L
sa(dp3006
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3007
sa(dp3008
g1
g31
sg3
I01
sg10
L5L
sa(dp3009
g1
g33
sg3
I01
sg10
L5L
sa(dp3010
g1
g35
sg3
I01
sg10
L5L
sa(dp3011
g1
g37
sg3
I01
sg10
L5L
sa(dp3012
g1
g39
sg3
I01
sg10
L5L
sa(dp3013
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3014
sa(dp3015
g1
g44
sg3
I01
sg10
L5L
sa(dp3016
g1
g46
sg3
I01
sg10
L5L
sa(dp3017
g1
g48
sg3
I01
sg10
L5L
sa(dp3018
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3019
sa(dp3020
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp3021
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3022
sa(dp3023
g1
g58
sg3
I01
sg10
L5L
sa(dp3024
g1
g60
sg3
I01
sg10
L5L
sa(dp3025
g1
g62
sg3
I01
sg10
L2L
sg4
Nsa(dp3026
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3027
sa(dp3028
g1
g67
sg3
I01
sg10
L5L
sa(dp3029
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3030
sa(dp3031
g1
g72
sg3
I01
sg10
L5L
sa(dp3032
g1
g74
sg3
I01
sg10
L5L
sa(dp3033
g1
g76
sg3
I01
sg10
L5L
sa(dp3034
g1
g78
sg3
I01
sg10
L2L
sg4
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p3035
sasg4
VSecond argument to a division or modulo operation was zero.
p3036
sa(dp3037
g1
V__build_class__
p3038
sg3
I01
sg10
L2L
sg4
V__build_class__(func, name, *bases, metaclass=None, **kwds) -> class\u000a\u000aInternal helper function used by the class statement.
p3039
sa(dp3040
g1
V__debug__
p3041
sg3
I01
sg10
L5L
sa(dp3042
g1
g24
sg3
I01
sg10
L5L
sa(dp3043
g1
V__import__
p3044
sg3
I01
sg10
L2L
sg4
V__import__(name, globals=None, locals=None, fromlist=(), level=0) -> module\u000a\u000aImport a module. Because this function is meant for use by the Python\u000ainterpreter and not for general use it is better to use\u000aimportlib.import_module() to programmatically import a module.\u000a\u000aThe globals argument is only used to determine the context;\u000athey are not modified.  The locals argument is unused.  The fromlist\u000ashould be a list of names to emulate ``from name import ...'', or an\u000aempty list to emulate ``import name''.\u000aWhen importing a module from a package, note that __import__('A.B', ...)\u000areturns package A when fromlist is empty, but its submodule B when\u000afromlist is not empty.  Level is used to determine whether to perform \u000aabsolute or relative imports. 0 is absolute while a positive number\u000ais the number of parent directories to search relative to the current module.
p3045
sa(dp3046
g1
V__loader__
p3047
sg3
I01
sg10
L3L
sg6
(lp3048
(dp3049
g1
g17
sg3
I01
sg10
L5L
sa(dp3050
g1
g19
sg3
I01
sg10
L5L
sa(dp3051
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3052
sa(dp3053
g1
g24
sg3
I01
sg10
L5L
sa(dp3054
g1
g26
sg3
I01
sg10
L5L
sa(dp3055
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3056
sa(dp3057
g1
g31
sg3
I01
sg10
L5L
sa(dp3058
g1
g33
sg3
I01
sg10
L5L
sa(dp3059
g1
g35
sg3
I01
sg10
L5L
sa(dp3060
g1
g37
sg3
I01
sg10
L5L
sa(dp3061
g1
g39
sg3
I01
sg10
L5L
sa(dp3062
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3063
sa(dp3064
g1
g44
sg3
I01
sg10
L5L
sa(dp3065
g1
g46
sg3
I01
sg10
L5L
sa(dp3066
g1
V__module__
p3067
sg3
I01
sg10
L5L
sa(dp3068
g1
g48
sg3
I01
sg10
L5L
sa(dp3069
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3070
sa(dp3071
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3072
sa(dp3073
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3074
sa(dp3075
g1
g58
sg3
I01
sg10
L5L
sa(dp3076
g1
g60
sg3
I01
sg10
L5L
sa(dp3077
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3078
sa(dp3079
g1
g67
sg3
I01
sg10
L5L
sa(dp3080
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3081
sa(dp3082
g1
V__weakref__
p3083
sg3
I01
sg10
L5L
sa(dp3084
g1
Vcreate_module
p3085
sg3
I01
sg10
L5L
sa(dp3086
g1
Vexec_module
p3087
sg3
I01
sg10
L5L
sa(dp3088
g1
Vfind_module
p3089
sg3
I01
sg10
L5L
sa(dp3090
g1
Vfind_spec
p3091
sg3
I01
sg10
L5L
sa(dp3092
g1
Vget_code
p3093
sg3
I01
sg10
L5L
sa(dp3094
g1
Vget_source
p3095
sg3
I01
sg10
L5L
sa(dp3096
g1
Vis_package
p3097
sg3
I01
sg10
L5L
sa(dp3098
g1
Vload_module
p3099
sg3
I01
sg10
L5L
sa(dp3100
g1
Vmodule_repr
p3101
sg3
I01
sg10
L5L
sasg4
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p3102
sa(dp3103
g1
V__name__
p3104
sg3
I01
sg10
L5L
sa(dp3105
g1
V__package__
p3106
sg3
I01
sg10
L5L
sa(dp3107
g1
V__spec__
p3108
sg3
I01
sg10
L5L
sa(dp3109
g1
Vabs
p3110
sg3
I01
sg10
L2L
sg4
VReturn the absolute value of the argument.
p3111
sa(dp3112
g1
Vall
p3113
sg3
I01
sg10
L2L
sg4
VReturn True if bool(x) is True for all values x in the iterable.\u000a\u000aIf the iterable is empty, return True.
p3114
sa(dp3115
g1
Vany
p3116
sg3
I01
sg10
L2L
sg4
VReturn True if bool(x) is True for any x in the iterable.\u000a\u000aIf the iterable is empty, return False.
p3117
sa(dp3118
g1
Vascii
p3119
sg3
I01
sg10
L2L
sg4
VReturn an ASCII-only representation of an object.\u000a\u000aAs repr(), return a string containing a printable representation of an\u000aobject, but escape the non-ASCII characters in the string returned by\u000arepr() using \u005c\u005cx, \u005c\u005cu or \u005c\u005cU escapes. This generates a string similar\u000ato that returned by repr() in Python 2.
p3120
sa(dp3121
g1
Vbin
p3122
sg3
I01
sg10
L2L
sg4
VReturn the binary representation of an integer.\u000a\u000a   >>> bin(2796202)\u000a   '0b1010101010101010101010'
p3123
sa(dp3124
g1
Vbool
p3125
sg3
I01
sg10
L3L
sg6
(lp3126
(dp3127
g1
V__abs__
p3128
sg3
I01
sg10
L5L
sa(dp3129
g1
V__add__
p3130
sg3
I01
sg10
L5L
sa(dp3131
g1
V__and__
p3132
sg3
I01
sg10
L5L
sa(dp3133
g1
V__bool__
p3134
sg3
I01
sg10
L5L
sa(dp3135
g1
V__ceil__
p3136
sg3
I01
sg10
L2L
sg4
VCeiling of an Integral returns itself.
p3137
sa(dp3138
g1
g17
sg3
I01
sg10
L5L
sa(dp3139
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3140
sa(dp3141
g1
V__divmod__
p3142
sg3
I01
sg10
L5L
sa(dp3143
g1
g24
sg3
I01
sg10
L5L
sa(dp3144
g1
g26
sg3
I01
sg10
L5L
sa(dp3145
g1
V__float__
p3146
sg3
I01
sg10
L5L
sa(dp3147
g1
V__floor__
p3148
sg3
I01
sg10
L2L
sg4
VFlooring an Integral returns itself.
p3149
sa(dp3150
g1
V__floordiv__
p3151
sg3
I01
sg10
L5L
sa(dp3152
g1
g28
sg3
I01
sg10
L2L
sg4
Nsa(dp3153
g1
g31
sg3
I01
sg10
L5L
sa(dp3154
g1
g33
sg3
I01
sg10
L5L
sa(dp3155
g1
V__getnewargs__
p3156
sg3
I01
sg10
L2L
sg4
Nsa(dp3157
g1
g35
sg3
I01
sg10
L5L
sa(dp3158
g1
g37
sg3
I01
sg10
L5L
sa(dp3159
g1
V__index__
p3160
sg3
I01
sg10
L5L
sa(dp3161
g1
g39
sg3
I01
sg10
L5L
sa(dp3162
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3163
sa(dp3164
g1
V__int__
p3165
sg3
I01
sg10
L5L
sa(dp3166
g1
V__invert__
p3167
sg3
I01
sg10
L5L
sa(dp3168
g1
g44
sg3
I01
sg10
L5L
sa(dp3169
g1
V__lshift__
p3170
sg3
I01
sg10
L5L
sa(dp3171
g1
g46
sg3
I01
sg10
L5L
sa(dp3172
g1
V__mod__
p3173
sg3
I01
sg10
L5L
sa(dp3174
g1
V__mul__
p3175
sg3
I01
sg10
L5L
sa(dp3176
g1
g48
sg3
I01
sg10
L5L
sa(dp3177
g1
V__neg__
p3178
sg3
I01
sg10
L5L
sa(dp3179
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3180
sa(dp3181
g1
V__or__
p3182
sg3
I01
sg10
L5L
sa(dp3183
g1
V__pos__
p3184
sg3
I01
sg10
L5L
sa(dp3185
g1
V__pow__
p3186
sg3
I01
sg10
L5L
sa(dp3187
g1
V__radd__
p3188
sg3
I01
sg10
L5L
sa(dp3189
g1
V__rand__
p3190
sg3
I01
sg10
L5L
sa(dp3191
g1
V__rdivmod__
p3192
sg3
I01
sg10
L5L
sa(dp3193
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3194
sa(dp3195
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3196
sa(dp3197
g1
g58
sg3
I01
sg10
L5L
sa(dp3198
g1
V__rfloordiv__
p3199
sg3
I01
sg10
L5L
sa(dp3200
g1
V__rlshift__
p3201
sg3
I01
sg10
L5L
sa(dp3202
g1
V__rmod__
p3203
sg3
I01
sg10
L5L
sa(dp3204
g1
V__rmul__
p3205
sg3
I01
sg10
L5L
sa(dp3206
g1
V__ror__
p3207
sg3
I01
sg10
L5L
sa(dp3208
g1
V__round__
p3209
sg3
I01
sg10
L2L
sg4
VRounding an Integral returns itself.\u000aRounding with an ndigits argument also returns an integer.
p3210
sa(dp3211
g1
V__rpow__
p3212
sg3
I01
sg10
L5L
sa(dp3213
g1
V__rrshift__
p3214
sg3
I01
sg10
L5L
sa(dp3215
g1
V__rshift__
p3216
sg3
I01
sg10
L5L
sa(dp3217
g1
V__rsub__
p3218
sg3
I01
sg10
L5L
sa(dp3219
g1
V__rtruediv__
p3220
sg3
I01
sg10
L5L
sa(dp3221
g1
V__rxor__
p3222
sg3
I01
sg10
L5L
sa(dp3223
g1
g60
sg3
I01
sg10
L5L
sa(dp3224
g1
g64
sg3
I01
sg10
L2L
sg4
VReturns size in memory, in bytes
p3225
sa(dp3226
g1
g67
sg3
I01
sg10
L5L
sa(dp3227
g1
V__sub__
p3228
sg3
I01
sg10
L5L
sa(dp3229
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3230
sa(dp3231
g1
V__truediv__
p3232
sg3
I01
sg10
L5L
sa(dp3233
g1
V__trunc__
p3234
sg3
I01
sg10
L2L
sg4
VTruncating an Integral returns itself.
p3235
sa(dp3236
g1
V__xor__
p3237
sg3
I01
sg10
L5L
sa(dp3238
g1
Vbit_length
p3239
sg3
I01
sg10
L2L
sg4
Vint.bit_length() -> int\u000a\u000aNumber of bits necessary to represent self in binary.\u000a>>> bin(37)\u000a'0b100101'\u000a>>> (37).bit_length()\u000a6
p3240
sa(dp3241
g1
Vconjugate
p3242
sg3
I01
sg10
L2L
sg4
VReturns self, the complex conjugate of any int.
p3243
sa(dp3244
g1
Vdenominator
p3245
sg3
I01
sg10
L5L
sa(dp3246
g1
Vfrom_bytes
p3247
sg3
I01
sg10
L2L
sg4
Vint.from_bytes(bytes, byteorder, *, signed=False) -> int\u000a\u000aReturn the integer represented by the given array of bytes.\u000a\u000aThe bytes argument must be a bytes-like object (e.g. bytes or bytearray).\u000a\u000aThe byteorder argument determines the byte order used to represent the\u000ainteger.  If byteorder is 'big', the most significant byte is at the\u000abeginning of the byte array.  If byteorder is 'little', the most\u000asignificant byte is at the end of the byte array.  To request the native\u000abyte order of the host system, use `sys.byteorder' as the byte order value.\u000a\u000aThe signed keyword-only argument indicates whether two's complement is\u000aused to represent the integer.
p3248
sa(dp3249
g1
Vimag
p3250
sg3
I01
sg10
L5L
sa(dp3251
g1
Vnumerator
p3252
sg3
I01
sg10
L5L
sa(dp3253
g1
Vreal
p3254
sg3
I01
sg10
L5L
sa(dp3255
g1
Vto_bytes
p3256
sg3
I01
sg10
L2L
sg4
Vint.to_bytes(length, byteorder, *, signed=False) -> bytes\u000a\u000aReturn an array of bytes representing an integer.\u000a\u000aThe integer is represented using length bytes.  An OverflowError is\u000araised if the integer is not representable with the given number of\u000abytes.\u000a\u000aThe byteorder argument determines the byte order used to represent the\u000ainteger.  If byteorder is 'big', the most significant byte is at the\u000abeginning of the byte array.  If byteorder is 'little', the most\u000asignificant byte is at the end of the byte array.  To request the native\u000abyte order of the host system, use `sys.byteorder' as the byte order value.\u000a\u000aThe signed keyword-only argument determines whether two's complement is\u000aused to represent the integer.  If signed is False and a negative integer\u000ais given, an OverflowError is raised.
p3257
sasg4
Vbool(x) -> bool\u000a\u000aReturns True when the argument x is true, False otherwise.\u000aThe builtins True and False are the only two instances of the class bool.\u000aThe class bool is a subclass of the class int, and cannot be subclassed.
p3258
sa(dp3259
g1
Vbytearray
p3260
sg3
I01
sg10
L3L
sg6
(lp3261
(dp3262
g1
g3130
sg3
I01
sg10
L5L
sa(dp3263
g1
V__alloc__
p3264
sg3
I01
sg10
L2L
sg4
VB.__alloc__() -> int\u000a\u000aReturn the number of bytes actually allocated.
p3265
sa(dp3266
g1
V__contains__
p3267
sg3
I01
sg10
L5L
sa(dp3268
g1
g17
sg3
I01
sg10
L5L
sa(dp3269
g1
V__delitem__
p3270
sg3
I01
sg10
L5L
sa(dp3271
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3272
sa(dp3273
g1
g24
sg3
I01
sg10
L5L
sa(dp3274
g1
g26
sg3
I01
sg10
L5L
sa(dp3275
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3276
sa(dp3277
g1
g31
sg3
I01
sg10
L5L
sa(dp3278
g1
g33
sg3
I01
sg10
L5L
sa(dp3279
g1
V__getitem__
p3280
sg3
I01
sg10
L5L
sa(dp3281
g1
g35
sg3
I01
sg10
L5L
sa(dp3282
g1
g37
sg3
I01
sg10
L5L
sa(dp3283
g1
V__iadd__
p3284
sg3
I01
sg10
L5L
sa(dp3285
g1
V__imul__
p3286
sg3
I01
sg10
L5L
sa(dp3287
g1
g39
sg3
I01
sg10
L5L
sa(dp3288
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3289
sa(dp3290
g1
V__iter__
p3291
sg3
I01
sg10
L5L
sa(dp3292
g1
g44
sg3
I01
sg10
L5L
sa(dp3293
g1
V__len__
p3294
sg3
I01
sg10
L5L
sa(dp3295
g1
g46
sg3
I01
sg10
L5L
sa(dp3296
g1
g3173
sg3
I01
sg10
L5L
sa(dp3297
g1
g3175
sg3
I01
sg10
L5L
sa(dp3298
g1
g48
sg3
I01
sg10
L5L
sa(dp3299
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3300
sa(dp3301
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p3302
sa(dp3303
g1
g55
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p3304
sa(dp3305
g1
g58
sg3
I01
sg10
L5L
sa(dp3306
g1
g3203
sg3
I01
sg10
L5L
sa(dp3307
g1
g3205
sg3
I01
sg10
L5L
sa(dp3308
g1
g60
sg3
I01
sg10
L5L
sa(dp3309
g1
V__setitem__
p3310
sg3
I01
sg10
L5L
sa(dp3311
g1
g64
sg3
I01
sg10
L2L
sg4
VReturns the size of the bytearray object in memory, in bytes.
p3312
sa(dp3313
g1
g67
sg3
I01
sg10
L5L
sa(dp3314
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3315
sa(dp3316
g1
Vappend
p3317
sg3
I01
sg10
L2L
sg4
VAppend a single item to the end of the bytearray.\u000a\u000a  item\u000a    The item to be appended.
p3318
sa(dp3319
g1
Vcapitalize
p3320
sg3
I01
sg10
L2L
sg4
VB.capitalize() -> copy of B\u000a\u000aReturn a copy of B with only its first character capitalized (ASCII)\u000aand the rest lower-cased.
p3321
sa(dp3322
g1
Vcenter
p3323
sg3
I01
sg10
L2L
sg4
VB.center(width[, fillchar]) -> copy of B\u000a\u000aReturn B centered in a string of length width.  Padding is\u000adone using the specified fill character (default is a space).
p3324
sa(dp3325
g1
Vclear
p3326
sg3
I01
sg10
L2L
sg4
VRemove all items from the bytearray.
p3327
sa(dp3328
g1
Vcopy
p3329
sg3
I01
sg10
L2L
sg4
VReturn a copy of B.
p3330
sa(dp3331
g1
Vcount
p3332
sg3
I01
sg10
L2L
sg4
VB.count(sub[, start[, end]]) -> int\u000a\u000aReturn the number of non-overlapping occurrences of subsection sub in\u000abytes B[start:end].  Optional arguments start and end are interpreted\u000aas in slice notation.
p3333
sa(dp3334
g1
Vdecode
p3335
sg3
I01
sg10
L2L
sg4
VDecode the bytearray using the codec registered for encoding.\u000a\u000a  encoding\u000a    The encoding with which to decode the bytearray.\u000a  errors\u000a    The error handling scheme to use for the handling of decoding errors.\u000a    The default is 'strict' meaning that decoding errors raise a\u000a    UnicodeDecodeError. Other possible values are 'ignore' and 'replace'\u000a    as well as any other name registered with codecs.register_error that\u000a    can handle UnicodeDecodeErrors.
p3336
sa(dp3337
g1
Vendswith
p3338
sg3
I01
sg10
L2L
sg4
VB.endswith(suffix[, start[, end]]) -> bool\u000a\u000aReturn True if B ends with the specified suffix, False otherwise.\u000aWith optional start, test B beginning at that position.\u000aWith optional end, stop comparing B at that position.\u000asuffix can also be a tuple of bytes to try.
p3339
sa(dp3340
g1
Vexpandtabs
p3341
sg3
I01
sg10
L2L
sg4
VB.expandtabs(tabsize=8) -> copy of B\u000a\u000aReturn a copy of B where all tab characters are expanded using spaces.\u000aIf tabsize is not given, a tab size of 8 characters is assumed.
p3342
sa(dp3343
g1
Vextend
p3344
sg3
I01
sg10
L2L
sg4
VAppend all the items from the iterator or sequence to the end of the bytearray.\u000a\u000a  iterable_of_ints\u000a    The iterable of items to append.
p3345
sa(dp3346
g1
Vfind
p3347
sg3
I01
sg10
L2L
sg4
VB.find(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p3348
sa(dp3349
g1
Vfromhex
p3350
sg3
I01
sg10
L2L
sg4
VCreate a bytearray object from a string of hexadecimal numbers.\u000a\u000aSpaces between two numbers are accepted.\u000aExample: bytearray.fromhex('B9 01EF') -> bytearray(b'\u005c\u005cxb9\u005c\u005cx01\u005c\u005cxef')
p3351
sa(dp3352
g1
Vhex
p3353
sg3
I01
sg10
L2L
sg4
VB.hex() -> string\u000a\u000aCreate a string of hexadecimal numbers from a bytearray object.\u000aExample: bytearray([0xb9, 0x01, 0xef]).hex() -> 'b901ef'.
p3354
sa(dp3355
g1
Vindex
p3356
sg3
I01
sg10
L2L
sg4
VB.index(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aRaises ValueError when the subsection is not found.
p3357
sa(dp3358
g1
Vinsert
p3359
sg3
I01
sg10
L2L
sg4
VInsert a single item into the bytearray before the given index.\u000a\u000a  index\u000a    The index where the value is to be inserted.\u000a  item\u000a    The item to be inserted.
p3360
sa(dp3361
g1
Visalnum
p3362
sg3
I01
sg10
L2L
sg4
VB.isalnum() -> bool\u000a\u000aReturn True if all characters in B are alphanumeric\u000aand there is at least one character in B, False otherwise.
p3363
sa(dp3364
g1
Visalpha
p3365
sg3
I01
sg10
L2L
sg4
VB.isalpha() -> bool\u000a\u000aReturn True if all characters in B are alphabetic\u000aand there is at least one character in B, False otherwise.
p3366
sa(dp3367
g1
Visdigit
p3368
sg3
I01
sg10
L2L
sg4
VB.isdigit() -> bool\u000a\u000aReturn True if all characters in B are digits\u000aand there is at least one character in B, False otherwise.
p3369
sa(dp3370
g1
Vislower
p3371
sg3
I01
sg10
L2L
sg4
VB.islower() -> bool\u000a\u000aReturn True if all cased characters in B are lowercase and there is\u000aat least one cased character in B, False otherwise.
p3372
sa(dp3373
g1
Visspace
p3374
sg3
I01
sg10
L2L
sg4
VB.isspace() -> bool\u000a\u000aReturn True if all characters in B are whitespace\u000aand there is at least one character in B, False otherwise.
p3375
sa(dp3376
g1
Vistitle
p3377
sg3
I01
sg10
L2L
sg4
VB.istitle() -> bool\u000a\u000aReturn True if B is a titlecased string and there is at least one\u000acharacter in B, i.e. uppercase characters may only follow uncased\u000acharacters and lowercase characters only cased ones. Return False\u000aotherwise.
p3378
sa(dp3379
g1
Visupper
p3380
sg3
I01
sg10
L2L
sg4
VB.isupper() -> bool\u000a\u000aReturn True if all cased characters in B are uppercase and there is\u000aat least one cased character in B, False otherwise.
p3381
sa(dp3382
g1
Vjoin
p3383
sg3
I01
sg10
L2L
sg4
VConcatenate any number of bytes/bytearray objects.\u000a\u000aThe bytearray whose method is called is inserted in between each pair.\u000a\u000aThe result is returned as a new bytearray object.
p3384
sa(dp3385
g1
Vljust
p3386
sg3
I01
sg10
L2L
sg4
VB.ljust(width[, fillchar]) -> copy of B\u000a\u000aReturn B left justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space).
p3387
sa(dp3388
g1
Vlower
p3389
sg3
I01
sg10
L2L
sg4
VB.lower() -> copy of B\u000a\u000aReturn a copy of B with all ASCII characters converted to lowercase.
p3390
sa(dp3391
g1
Vlstrip
p3392
sg3
I01
sg10
L2L
sg4
VStrip leading bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip leading ASCII whitespace.
p3393
sa(dp3394
g1
Vmaketrans
p3395
sg3
I01
sg10
L2L
sg4
VReturn a translation table useable for the bytes or bytearray translate method.\u000a\u000aThe returned table will be one where each byte in frm is mapped to the byte at\u000athe same position in to.\u000a\u000aThe bytes objects frm and to must be of the same length.
p3396
sa(dp3397
g1
Vpartition
p3398
sg3
I01
sg10
L2L
sg4
VPartition the bytearray into three parts using the given separator.\u000a\u000aThis will search for the separator sep in the bytearray. If the separator is\u000afound, returns a 3-tuple containing the part before the separator, the\u000aseparator itself, and the part after it as new bytearray objects.\u000a\u000aIf the separator is not found, returns a 3-tuple containing the copy of the\u000aoriginal bytearray object and two empty bytearray objects.
p3399
sa(dp3400
g1
Vpop
p3401
sg3
I01
sg10
L2L
sg4
VRemove and return a single item from B.\u000a\u000a  index\u000a    The index from where to remove the item.\u000a    -1 (the default value) means remove the last item.\u000a\u000aIf no index argument is given, will pop the last item.
p3402
sa(dp3403
g1
Vremove
p3404
sg3
I01
sg10
L2L
sg4
VRemove the first occurrence of a value in the bytearray.\u000a\u000a  value\u000a    The value to remove.
p3405
sa(dp3406
g1
Vreplace
p3407
sg3
I01
sg10
L2L
sg4
VReturn a copy with all occurrences of substring old replaced by new.\u000a\u000a  count\u000a    Maximum number of occurrences to replace.\u000a    -1 (the default value) means replace all occurrences.\u000a\u000aIf the optional argument count is given, only the first count occurrences are\u000areplaced.
p3408
sa(dp3409
g1
Vreverse
p3410
sg3
I01
sg10
L2L
sg4
VReverse the order of the values in B in place.
p3411
sa(dp3412
g1
Vrfind
p3413
sg3
I01
sg10
L2L
sg4
VB.rfind(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p3414
sa(dp3415
g1
Vrindex
p3416
sg3
I01
sg10
L2L
sg4
VB.rindex(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aRaise ValueError when the subsection is not found.
p3417
sa(dp3418
g1
Vrjust
p3419
sg3
I01
sg10
L2L
sg4
VB.rjust(width[, fillchar]) -> copy of B\u000a\u000aReturn B right justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space)
p3420
sa(dp3421
g1
Vrpartition
p3422
sg3
I01
sg10
L2L
sg4
VPartition the bytearray into three parts using the given separator.\u000a\u000aThis will search for the separator sep in the bytearray, starting at the end.\u000aIf the separator is found, returns a 3-tuple containing the part before the\u000aseparator, the separator itself, and the part after it as new bytearray\u000aobjects.\u000a\u000aIf the separator is not found, returns a 3-tuple containing two empty bytearray\u000aobjects and the copy of the original bytearray object.
p3423
sa(dp3424
g1
Vrsplit
p3425
sg3
I01
sg10
L2L
sg4
VReturn a list of the sections in the bytearray, using sep as the delimiter.\u000a\u000a  sep\u000a    The delimiter according which to split the bytearray.\u000a    None (the default value) means split on ASCII whitespace characters\u000a    (space, tab, return, newline, formfeed, vertical tab).\u000a  maxsplit\u000a    Maximum number of splits to do.\u000a    -1 (the default value) means no limit.\u000a\u000aSplitting is done starting at the end of the bytearray and working to the front.
p3426
sa(dp3427
g1
Vrstrip
p3428
sg3
I01
sg10
L2L
sg4
VStrip trailing bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip trailing ASCII whitespace.
p3429
sa(dp3430
g1
Vsplit
p3431
sg3
I01
sg10
L2L
sg4
VReturn a list of the sections in the bytearray, using sep as the delimiter.\u000a\u000a  sep\u000a    The delimiter according which to split the bytearray.\u000a    None (the default value) means split on ASCII whitespace characters\u000a    (space, tab, return, newline, formfeed, vertical tab).\u000a  maxsplit\u000a    Maximum number of splits to do.\u000a    -1 (the default value) means no limit.
p3432
sa(dp3433
g1
Vsplitlines
p3434
sg3
I01
sg10
L2L
sg4
VReturn a list of the lines in the bytearray, breaking at line boundaries.\u000a\u000aLine breaks are not included in the resulting list unless keepends is given and\u000atrue.
p3435
sa(dp3436
g1
Vstartswith
p3437
sg3
I01
sg10
L2L
sg4
VB.startswith(prefix[, start[, end]]) -> bool\u000a\u000aReturn True if B starts with the specified prefix, False otherwise.\u000aWith optional start, test B beginning at that position.\u000aWith optional end, stop comparing B at that position.\u000aprefix can also be a tuple of bytes to try.
p3438
sa(dp3439
g1
Vstrip
p3440
sg3
I01
sg10
L2L
sg4
VStrip leading and trailing bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip leading and trailing ASCII whitespace.
p3441
sa(dp3442
g1
Vswapcase
p3443
sg3
I01
sg10
L2L
sg4
VB.swapcase() -> copy of B\u000a\u000aReturn a copy of B with uppercase ASCII characters converted\u000ato lowercase ASCII and vice versa.
p3444
sa(dp3445
g1
Vtitle
p3446
sg3
I01
sg10
L2L
sg4
VB.title() -> copy of B\u000a\u000aReturn a titlecased version of B, i.e. ASCII words start with uppercase\u000acharacters, all remaining cased characters have lowercase.
p3447
sa(dp3448
g1
Vtranslate
p3449
sg3
I01
sg10
L2L
sg4
VReturn a copy with each character mapped by the given translation table.\u000a\u000a  table\u000a    Translation table, which must be a bytes object of length 256.\u000a\u000aAll characters occurring in the optional argument delete are removed.\u000aThe remaining characters are mapped through the given translation table.
p3450
sa(dp3451
g1
Vupper
p3452
sg3
I01
sg10
L2L
sg4
VB.upper() -> copy of B\u000a\u000aReturn a copy of B with all ASCII characters converted to uppercase.
p3453
sa(dp3454
g1
Vzfill
p3455
sg3
I01
sg10
L2L
sg4
VB.zfill(width) -> copy of B\u000a\u000aPad a numeric string B with zeros on the left, to fill a field\u000aof the specified width.  B is never truncated.
p3456
sasg4
Vbytearray(iterable_of_ints) -> bytearray\u000abytearray(string, encoding[, errors]) -> bytearray\u000abytearray(bytes_or_buffer) -> mutable copy of bytes_or_buffer\u000abytearray(int) -> bytes array of size given by the parameter initialized with null bytes\u000abytearray() -> empty bytes array\u000a\u000aConstruct a mutable bytearray object from:\u000a  - an iterable yielding integers in range(256)\u000a  - a text string encoded using the specified encoding\u000a  - a bytes or a buffer object\u000a  - any object implementing the buffer API.\u000a  - an integer
p3457
sa(dp3458
g1
Vbytes
p3459
sg3
I01
sg10
L3L
sg6
(lp3460
(dp3461
g1
g3130
sg3
I01
sg10
L5L
sa(dp3462
g1
g3267
sg3
I01
sg10
L5L
sa(dp3463
g1
g17
sg3
I01
sg10
L5L
sa(dp3464
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3465
sa(dp3466
g1
g24
sg3
I01
sg10
L5L
sa(dp3467
g1
g26
sg3
I01
sg10
L5L
sa(dp3468
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3469
sa(dp3470
g1
g31
sg3
I01
sg10
L5L
sa(dp3471
g1
g33
sg3
I01
sg10
L5L
sa(dp3472
g1
g3280
sg3
I01
sg10
L5L
sa(dp3473
g1
g3156
sg3
I01
sg10
L2L
sg4
Nsa(dp3474
g1
g35
sg3
I01
sg10
L5L
sa(dp3475
g1
g37
sg3
I01
sg10
L5L
sa(dp3476
g1
g39
sg3
I01
sg10
L5L
sa(dp3477
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3478
sa(dp3479
g1
g3291
sg3
I01
sg10
L5L
sa(dp3480
g1
g44
sg3
I01
sg10
L5L
sa(dp3481
g1
g3294
sg3
I01
sg10
L5L
sa(dp3482
g1
g46
sg3
I01
sg10
L5L
sa(dp3483
g1
g3173
sg3
I01
sg10
L5L
sa(dp3484
g1
g3175
sg3
I01
sg10
L5L
sa(dp3485
g1
g48
sg3
I01
sg10
L5L
sa(dp3486
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3487
sa(dp3488
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3489
sa(dp3490
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3491
sa(dp3492
g1
g58
sg3
I01
sg10
L5L
sa(dp3493
g1
g3203
sg3
I01
sg10
L5L
sa(dp3494
g1
g3205
sg3
I01
sg10
L5L
sa(dp3495
g1
g60
sg3
I01
sg10
L5L
sa(dp3496
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3497
sa(dp3498
g1
g67
sg3
I01
sg10
L5L
sa(dp3499
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3500
sa(dp3501
g1
g3320
sg3
I01
sg10
L2L
sg4
VB.capitalize() -> copy of B\u000a\u000aReturn a copy of B with only its first character capitalized (ASCII)\u000aand the rest lower-cased.
p3502
sa(dp3503
g1
g3323
sg3
I01
sg10
L2L
sg4
VB.center(width[, fillchar]) -> copy of B\u000a\u000aReturn B centered in a string of length width.  Padding is\u000adone using the specified fill character (default is a space).
p3504
sa(dp3505
g1
g3332
sg3
I01
sg10
L2L
sg4
VB.count(sub[, start[, end]]) -> int\u000a\u000aReturn the number of non-overlapping occurrences of subsection sub in\u000abytes B[start:end].  Optional arguments start and end are interpreted\u000aas in slice notation.
p3506
sa(dp3507
g1
g3335
sg3
I01
sg10
L2L
sg4
VDecode the bytes using the codec registered for encoding.\u000a\u000a  encoding\u000a    The encoding with which to decode the bytes.\u000a  errors\u000a    The error handling scheme to use for the handling of decoding errors.\u000a    The default is 'strict' meaning that decoding errors raise a\u000a    UnicodeDecodeError. Other possible values are 'ignore' and 'replace'\u000a    as well as any other name registered with codecs.register_error that\u000a    can handle UnicodeDecodeErrors.
p3508
sa(dp3509
g1
g3338
sg3
I01
sg10
L2L
sg4
VB.endswith(suffix[, start[, end]]) -> bool\u000a\u000aReturn True if B ends with the specified suffix, False otherwise.\u000aWith optional start, test B beginning at that position.\u000aWith optional end, stop comparing B at that position.\u000asuffix can also be a tuple of bytes to try.
p3510
sa(dp3511
g1
g3341
sg3
I01
sg10
L2L
sg4
VB.expandtabs(tabsize=8) -> copy of B\u000a\u000aReturn a copy of B where all tab characters are expanded using spaces.\u000aIf tabsize is not given, a tab size of 8 characters is assumed.
p3512
sa(dp3513
g1
g3347
sg3
I01
sg10
L2L
sg4
VB.find(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p3514
sa(dp3515
g1
g3350
sg3
I01
sg10
L2L
sg4
VCreate a bytes object from a string of hexadecimal numbers.\u000a\u000aSpaces between two numbers are accepted.\u000aExample: bytes.fromhex('B9 01EF') -> b'\u005c\u005cxb9\u005c\u005cx01\u005c\u005cxef'.
p3516
sa(dp3517
g1
g3353
sg3
I01
sg10
L2L
sg4
VB.hex() -> string\u000a\u000aCreate a string of hexadecimal numbers from a bytes object.\u000aExample: b'\u005cxb9\u005cx01\u005cxef'.hex() -> 'b901ef'.
p3518
sa(dp3519
g1
g3356
sg3
I01
sg10
L2L
sg4
VB.index(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aRaises ValueError when the subsection is not found.
p3520
sa(dp3521
g1
g3362
sg3
I01
sg10
L2L
sg4
VB.isalnum() -> bool\u000a\u000aReturn True if all characters in B are alphanumeric\u000aand there is at least one character in B, False otherwise.
p3522
sa(dp3523
g1
g3365
sg3
I01
sg10
L2L
sg4
VB.isalpha() -> bool\u000a\u000aReturn True if all characters in B are alphabetic\u000aand there is at least one character in B, False otherwise.
p3524
sa(dp3525
g1
g3368
sg3
I01
sg10
L2L
sg4
VB.isdigit() -> bool\u000a\u000aReturn True if all characters in B are digits\u000aand there is at least one character in B, False otherwise.
p3526
sa(dp3527
g1
g3371
sg3
I01
sg10
L2L
sg4
VB.islower() -> bool\u000a\u000aReturn True if all cased characters in B are lowercase and there is\u000aat least one cased character in B, False otherwise.
p3528
sa(dp3529
g1
g3374
sg3
I01
sg10
L2L
sg4
VB.isspace() -> bool\u000a\u000aReturn True if all characters in B are whitespace\u000aand there is at least one character in B, False otherwise.
p3530
sa(dp3531
g1
g3377
sg3
I01
sg10
L2L
sg4
VB.istitle() -> bool\u000a\u000aReturn True if B is a titlecased string and there is at least one\u000acharacter in B, i.e. uppercase characters may only follow uncased\u000acharacters and lowercase characters only cased ones. Return False\u000aotherwise.
p3532
sa(dp3533
g1
g3380
sg3
I01
sg10
L2L
sg4
VB.isupper() -> bool\u000a\u000aReturn True if all cased characters in B are uppercase and there is\u000aat least one cased character in B, False otherwise.
p3534
sa(dp3535
g1
g3383
sg3
I01
sg10
L2L
sg4
VConcatenate any number of bytes objects.\u000a\u000aThe bytes whose method is called is inserted in between each pair.\u000a\u000aThe result is returned as a new bytes object.\u000a\u000aExample: b'.'.join([b'ab', b'pq', b'rs']) -> b'ab.pq.rs'.
p3536
sa(dp3537
g1
g3386
sg3
I01
sg10
L2L
sg4
VB.ljust(width[, fillchar]) -> copy of B\u000a\u000aReturn B left justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space).
p3538
sa(dp3539
g1
g3389
sg3
I01
sg10
L2L
sg4
VB.lower() -> copy of B\u000a\u000aReturn a copy of B with all ASCII characters converted to lowercase.
p3540
sa(dp3541
g1
g3392
sg3
I01
sg10
L2L
sg4
VStrip leading bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip leading  ASCII whitespace.
p3542
sa(dp3543
g1
g3395
sg3
I01
sg10
L2L
sg4
VReturn a translation table useable for the bytes or bytearray translate method.\u000a\u000aThe returned table will be one where each byte in frm is mapped to the byte at\u000athe same position in to.\u000a\u000aThe bytes objects frm and to must be of the same length.
p3544
sa(dp3545
g1
g3398
sg3
I01
sg10
L2L
sg4
VPartition the bytes into three parts using the given separator.\u000a\u000aThis will search for the separator sep in the bytes. If the separator is found,\u000areturns a 3-tuple containing the part before the separator, the separator\u000aitself, and the part after it.\u000a\u000aIf the separator is not found, returns a 3-tuple containing the original bytes\u000aobject and two empty bytes objects.
p3546
sa(dp3547
g1
g3407
sg3
I01
sg10
L2L
sg4
VReturn a copy with all occurrences of substring old replaced by new.\u000a\u000a  count\u000a    Maximum number of occurrences to replace.\u000a    -1 (the default value) means replace all occurrences.\u000a\u000aIf the optional argument count is given, only the first count occurrences are\u000areplaced.
p3548
sa(dp3549
g1
g3413
sg3
I01
sg10
L2L
sg4
VB.rfind(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p3550
sa(dp3551
g1
g3416
sg3
I01
sg10
L2L
sg4
VB.rindex(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aRaise ValueError when the subsection is not found.
p3552
sa(dp3553
g1
g3419
sg3
I01
sg10
L2L
sg4
VB.rjust(width[, fillchar]) -> copy of B\u000a\u000aReturn B right justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space)
p3554
sa(dp3555
g1
g3422
sg3
I01
sg10
L2L
sg4
VPartition the bytes into three parts using the given separator.\u000a\u000aThis will search for the separator sep in the bytes, starting at the end. If\u000athe separator is found, returns a 3-tuple containing the part before the\u000aseparator, the separator itself, and the part after it.\u000a\u000aIf the separator is not found, returns a 3-tuple containing two empty bytes\u000aobjects and the original bytes object.
p3556
sa(dp3557
g1
g3425
sg3
I01
sg10
L2L
sg4
VReturn a list of the sections in the bytes, using sep as the delimiter.\u000a\u000a  sep\u000a    The delimiter according which to split the bytes.\u000a    None (the default value) means split on ASCII whitespace characters\u000a    (space, tab, return, newline, formfeed, vertical tab).\u000a  maxsplit\u000a    Maximum number of splits to do.\u000a    -1 (the default value) means no limit.\u000a\u000aSplitting is done starting at the end of the bytes and working to the front.
p3558
sa(dp3559
g1
g3428
sg3
I01
sg10
L2L
sg4
VStrip trailing bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip trailing ASCII whitespace.
p3560
sa(dp3561
g1
g3431
sg3
I01
sg10
L2L
sg4
VReturn a list of the sections in the bytes, using sep as the delimiter.\u000a\u000a  sep\u000a    The delimiter according which to split the bytes.\u000a    None (the default value) means split on ASCII whitespace characters\u000a    (space, tab, return, newline, formfeed, vertical tab).\u000a  maxsplit\u000a    Maximum number of splits to do.\u000a    -1 (the default value) means no limit.
p3562
sa(dp3563
g1
g3434
sg3
I01
sg10
L2L
sg4
VReturn a list of the lines in the bytes, breaking at line boundaries.\u000a\u000aLine breaks are not included in the resulting list unless keepends is given and\u000atrue.
p3564
sa(dp3565
g1
g3437
sg3
I01
sg10
L2L
sg4
VB.startswith(prefix[, start[, end]]) -> bool\u000a\u000aReturn True if B starts with the specified prefix, False otherwise.\u000aWith optional start, test B beginning at that position.\u000aWith optional end, stop comparing B at that position.\u000aprefix can also be a tuple of bytes to try.
p3566
sa(dp3567
g1
g3440
sg3
I01
sg10
L2L
sg4
VStrip leading and trailing bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip leading and trailing ASCII whitespace.
p3568
sa(dp3569
g1
g3443
sg3
I01
sg10
L2L
sg4
VB.swapcase() -> copy of B\u000a\u000aReturn a copy of B with uppercase ASCII characters converted\u000ato lowercase ASCII and vice versa.
p3570
sa(dp3571
g1
g3446
sg3
I01
sg10
L2L
sg4
VB.title() -> copy of B\u000a\u000aReturn a titlecased version of B, i.e. ASCII words start with uppercase\u000acharacters, all remaining cased characters have lowercase.
p3572
sa(dp3573
g1
g3449
sg3
I01
sg10
L2L
sg4
VReturn a copy with each character mapped by the given translation table.\u000a\u000a  table\u000a    Translation table, which must be a bytes object of length 256.\u000a\u000aAll characters occurring in the optional argument delete are removed.\u000aThe remaining characters are mapped through the given translation table.
p3574
sa(dp3575
g1
g3452
sg3
I01
sg10
L2L
sg4
VB.upper() -> copy of B\u000a\u000aReturn a copy of B with all ASCII characters converted to uppercase.
p3576
sa(dp3577
g1
g3455
sg3
I01
sg10
L2L
sg4
VB.zfill(width) -> copy of B\u000a\u000aPad a numeric string B with zeros on the left, to fill a field\u000aof the specified width.  B is never truncated.
p3578
sasg4
Vbytes(iterable_of_ints) -> bytes\u000abytes(string, encoding[, errors]) -> bytes\u000abytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer\u000abytes(int) -> bytes object of size given by the parameter initialized with null bytes\u000abytes() -> empty bytes object\u000a\u000aConstruct an immutable array of bytes from:\u000a  - an iterable yielding integers in range(256)\u000a  - a text string encoded using the specified encoding\u000a  - any object implementing the buffer API.\u000a  - an integer
p3579
sa(dp3580
g1
Vcallable
p3581
sg3
I01
sg10
L2L
sg4
VReturn whether the object is callable (i.e., some kind of function).\u000a\u000aNote that classes are callable, as are instances of classes with a\u000a__call__() method.
p3582
sa(dp3583
g1
Vchr
p3584
sg3
I01
sg10
L2L
sg4
VReturn a Unicode string of one character with ordinal i; 0 <= i <= 0x10ffff.
p3585
sa(dp3586
g1
Vclassmethod
p3587
sg3
I01
sg10
L3L
sg6
(lp3588
(dp3589
g1
g17
sg3
I01
sg10
L5L
sa(dp3590
g1
g19
sg3
I01
sg10
L5L
sa(dp3591
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3592
sa(dp3593
g1
g24
sg3
I01
sg10
L5L
sa(dp3594
g1
g26
sg3
I01
sg10
L5L
sa(dp3595
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3596
sa(dp3597
g1
V__func__
p3598
sg3
I01
sg10
L5L
sa(dp3599
g1
g31
sg3
I01
sg10
L5L
sa(dp3600
g1
V__get__
p3601
sg3
I01
sg10
L5L
sa(dp3602
g1
g33
sg3
I01
sg10
L5L
sa(dp3603
g1
g35
sg3
I01
sg10
L5L
sa(dp3604
g1
g37
sg3
I01
sg10
L5L
sa(dp3605
g1
g39
sg3
I01
sg10
L5L
sa(dp3606
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3607
sa(dp3608
g1
V__isabstractmethod__
p3609
sg3
I01
sg10
L5L
sa(dp3610
g1
g44
sg3
I01
sg10
L5L
sa(dp3611
g1
g46
sg3
I01
sg10
L5L
sa(dp3612
g1
g48
sg3
I01
sg10
L5L
sa(dp3613
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3614
sa(dp3615
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3616
sa(dp3617
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3618
sa(dp3619
g1
g58
sg3
I01
sg10
L5L
sa(dp3620
g1
g60
sg3
I01
sg10
L5L
sa(dp3621
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3622
sa(dp3623
g1
g67
sg3
I01
sg10
L5L
sa(dp3624
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3625
sasg4
Vclassmethod(function) -> method\u000a\u000aConvert a function to be a class method.\u000a\u000aA class method receives the class as implicit first argument,\u000ajust like an instance method receives the instance.\u000aTo declare a class method, use this idiom:\u000a\u000a  class C:\u000a      @classmethod\u000a      def f(cls, arg1, arg2, ...):\u000a          ...\u000a\u000aIt can be called either on the class (e.g. C.f()) or on an instance\u000a(e.g. C().f()).  The instance is ignored except for its class.\u000aIf a class method is called for a derived class, the derived class\u000aobject is passed as the implied first argument.\u000a\u000aClass methods are different than C++ or Java static methods.\u000aIf you want those, see the staticmethod builtin.
p3626
sa(dp3627
g1
Vcompile
p3628
sg3
I01
sg10
L2L
sg4
VCompile source into a code object that can be executed by exec() or eval().\u000a\u000aThe source code may represent a Python module, statement or expression.\u000aThe filename will be used for run-time error messages.\u000aThe mode must be 'exec' to compile a module, 'single' to compile a\u000asingle (interactive) statement, or 'eval' to compile an expression.\u000aThe flags argument, if present, controls which future statements influence\u000athe compilation of the code.\u000aThe dont_inherit argument, if true, stops the compilation inheriting\u000athe effects of any future statements in effect in the code calling\u000acompile; if absent or false these statements do influence the compilation,\u000ain addition to any features explicitly specified.
p3629
sa(dp3630
g1
Vcomplex
p3631
sg3
I01
sg10
L3L
sg6
(lp3632
(dp3633
g1
g3128
sg3
I01
sg10
L5L
sa(dp3634
g1
g3130
sg3
I01
sg10
L5L
sa(dp3635
g1
g3134
sg3
I01
sg10
L5L
sa(dp3636
g1
g17
sg3
I01
sg10
L5L
sa(dp3637
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3638
sa(dp3639
g1
g3142
sg3
I01
sg10
L5L
sa(dp3640
g1
g24
sg3
I01
sg10
L5L
sa(dp3641
g1
g26
sg3
I01
sg10
L5L
sa(dp3642
g1
g3146
sg3
I01
sg10
L5L
sa(dp3643
g1
g3151
sg3
I01
sg10
L5L
sa(dp3644
g1
g28
sg3
I01
sg10
L2L
sg4
Vcomplex.__format__() -> str\u000a\u000aConvert to a string according to format_spec.
p3645
sa(dp3646
g1
g31
sg3
I01
sg10
L5L
sa(dp3647
g1
g33
sg3
I01
sg10
L5L
sa(dp3648
g1
g3156
sg3
I01
sg10
L2L
sg4
Nsa(dp3649
g1
g35
sg3
I01
sg10
L5L
sa(dp3650
g1
g37
sg3
I01
sg10
L5L
sa(dp3651
g1
g39
sg3
I01
sg10
L5L
sa(dp3652
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3653
sa(dp3654
g1
g3165
sg3
I01
sg10
L5L
sa(dp3655
g1
g44
sg3
I01
sg10
L5L
sa(dp3656
g1
g46
sg3
I01
sg10
L5L
sa(dp3657
g1
g3173
sg3
I01
sg10
L5L
sa(dp3658
g1
g3175
sg3
I01
sg10
L5L
sa(dp3659
g1
g48
sg3
I01
sg10
L5L
sa(dp3660
g1
g3178
sg3
I01
sg10
L5L
sa(dp3661
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3662
sa(dp3663
g1
g3184
sg3
I01
sg10
L5L
sa(dp3664
g1
g3186
sg3
I01
sg10
L5L
sa(dp3665
g1
g3188
sg3
I01
sg10
L5L
sa(dp3666
g1
g3192
sg3
I01
sg10
L5L
sa(dp3667
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3668
sa(dp3669
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3670
sa(dp3671
g1
g58
sg3
I01
sg10
L5L
sa(dp3672
g1
g3199
sg3
I01
sg10
L5L
sa(dp3673
g1
g3203
sg3
I01
sg10
L5L
sa(dp3674
g1
g3205
sg3
I01
sg10
L5L
sa(dp3675
g1
g3212
sg3
I01
sg10
L5L
sa(dp3676
g1
g3218
sg3
I01
sg10
L5L
sa(dp3677
g1
g3220
sg3
I01
sg10
L5L
sa(dp3678
g1
g60
sg3
I01
sg10
L5L
sa(dp3679
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3680
sa(dp3681
g1
g67
sg3
I01
sg10
L5L
sa(dp3682
g1
g3228
sg3
I01
sg10
L5L
sa(dp3683
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3684
sa(dp3685
g1
g3232
sg3
I01
sg10
L5L
sa(dp3686
g1
g3242
sg3
I01
sg10
L2L
sg4
Vcomplex.conjugate() -> complex\u000a\u000aReturn the complex conjugate of its argument. (3-4j).conjugate() == 3+4j.
p3687
sa(dp3688
g1
g3250
sg3
I01
sg10
L5L
sa(dp3689
g1
g3254
sg3
I01
sg10
L5L
sasg4
Vcomplex(real[, imag]) -> complex number\u000a\u000aCreate a complex number from a real part and an optional imaginary part.\u000aThis is equivalent to (real + imag*1j) where imag defaults to 0.
p3690
sa(dp3691
g1
Vcopyright
p3692
sg3
I01
sg10
L5L
sa(dp3693
g1
Vcredits
p3694
sg3
I01
sg10
L5L
sa(dp3695
g1
Vdelattr
p3696
sg3
I01
sg10
L2L
sg4
VDeletes the named attribute from the given object.\u000a\u000adelattr(x, 'y') is equivalent to ``del x.y''
p3697
sa(dp3698
g1
Vdict
p3699
sg3
I01
sg10
L3L
sg6
(lp3700
(dp3701
g1
g3267
sg3
I01
sg10
L2L
sg4
VTrue if D has a key k, else False.
p3702
sa(dp3703
g1
g17
sg3
I01
sg10
L5L
sa(dp3704
g1
g3270
sg3
I01
sg10
L5L
sa(dp3705
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3706
sa(dp3707
g1
g24
sg3
I01
sg10
L5L
sa(dp3708
g1
g26
sg3
I01
sg10
L5L
sa(dp3709
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3710
sa(dp3711
g1
g31
sg3
I01
sg10
L5L
sa(dp3712
g1
g33
sg3
I01
sg10
L5L
sa(dp3713
g1
g3280
sg3
I01
sg10
L2L
sg4
Vx.__getitem__(y) <==> x[y]
p3714
sa(dp3715
g1
g35
sg3
I01
sg10
L5L
sa(dp3716
g1
g37
sg3
I01
sg10
L5L
sa(dp3717
g1
g39
sg3
I01
sg10
L5L
sa(dp3718
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3719
sa(dp3720
g1
g3291
sg3
I01
sg10
L5L
sa(dp3721
g1
g44
sg3
I01
sg10
L5L
sa(dp3722
g1
g3294
sg3
I01
sg10
L5L
sa(dp3723
g1
g46
sg3
I01
sg10
L5L
sa(dp3724
g1
g48
sg3
I01
sg10
L5L
sa(dp3725
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3726
sa(dp3727
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3728
sa(dp3729
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3730
sa(dp3731
g1
g58
sg3
I01
sg10
L5L
sa(dp3732
g1
g60
sg3
I01
sg10
L5L
sa(dp3733
g1
g3310
sg3
I01
sg10
L5L
sa(dp3734
g1
g64
sg3
I01
sg10
L2L
sg4
VD.__sizeof__() -> size of D in memory, in bytes
p3735
sa(dp3736
g1
g67
sg3
I01
sg10
L5L
sa(dp3737
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3738
sa(dp3739
g1
g3326
sg3
I01
sg10
L2L
sg4
VD.clear() -> None.  Remove all items from D.
p3740
sa(dp3741
g1
g3329
sg3
I01
sg10
L2L
sg4
VD.copy() -> a shallow copy of D
p3742
sa(dp3743
g1
Vfromkeys
p3744
sg3
I01
sg10
L2L
sg4
VReturns a new dict with keys from iterable and values equal to value.
p3745
sa(dp3746
g1
Vget
p3747
sg3
I01
sg10
L2L
sg4
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p3748
sa(dp3749
g1
Vitems
p3750
sg3
I01
sg10
L2L
sg4
VD.items() -> a set-like object providing a view on D's items
p3751
sa(dp3752
g1
Vkeys
p3753
sg3
I01
sg10
L2L
sg4
VD.keys() -> a set-like object providing a view on D's keys
p3754
sa(dp3755
g1
g3401
sg3
I01
sg10
L2L
sg4
VD.pop(k[,d]) -> v, remove specified key and return the corresponding value.\u000aIf key is not found, d is returned if given, otherwise KeyError is raised
p3756
sa(dp3757
g1
Vpopitem
p3758
sg3
I01
sg10
L2L
sg4
VD.popitem() -> (k, v), remove and return some (key, value) pair as a\u000a2-tuple; but raise KeyError if D is empty.
p3759
sa(dp3760
g1
Vsetdefault
p3761
sg3
I01
sg10
L2L
sg4
VD.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
p3762
sa(dp3763
g1
Vupdate
p3764
sg3
I01
sg10
L2L
sg4
VD.update([E, ]**F) -> None.  Update D from dict/iterable E and F.\u000aIf E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\u000aIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\u000aIn either case, this is followed by: for k in F:  D[k] = F[k]
p3765
sa(dp3766
g1
Vvalues
p3767
sg3
I01
sg10
L2L
sg4
VD.values() -> an object providing a view on D's values
p3768
sasg4
Vdict() -> new empty dictionary\u000adict(mapping) -> new dictionary initialized from a mapping object's\u000a    (key, value) pairs\u000adict(iterable) -> new dictionary initialized as if via:\u000a    d = {}\u000a    for k, v in iterable:\u000a        d[k] = v\u000adict(**kwargs) -> new dictionary initialized with the name=value pairs\u000a    in the keyword argument list.  For example:  dict(one=1, two=2)
p3769
sa(dp3770
g1
Vdir
p3771
sg3
I01
sg10
L2L
sg4
Vdir([object]) -> list of strings\u000a\u000aIf called without an argument, return the names in the current scope.\u000aElse, return an alphabetized list of names comprising (some of) the attributes\u000aof the given object, and of attributes reachable from it.\u000aIf the object supplies a method named __dir__, it will be used; otherwise\u000athe default dir() logic is used and returns:\u000a  for a module object: the module's attributes.\u000a  for a class object:  its attributes, and recursively the attributes\u000a    of its bases.\u000a  for any other object: its attributes, its class's attributes, and\u000a    recursively the attributes of its class's base classes.
p3772
sa(dp3773
g1
Vdivmod
p3774
sg3
I01
sg10
L2L
sg4
VReturn the tuple (x//y, x%y).  Invariant: div*y + mod == x.
p3775
sa(dp3776
g1
Venumerate
p3777
sg3
I01
sg10
L3L
sg6
(lp3778
(dp3779
g1
g17
sg3
I01
sg10
L5L
sa(dp3780
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3781
sa(dp3782
g1
g24
sg3
I01
sg10
L5L
sa(dp3783
g1
g26
sg3
I01
sg10
L5L
sa(dp3784
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3785
sa(dp3786
g1
g31
sg3
I01
sg10
L5L
sa(dp3787
g1
g33
sg3
I01
sg10
L5L
sa(dp3788
g1
g35
sg3
I01
sg10
L5L
sa(dp3789
g1
g37
sg3
I01
sg10
L5L
sa(dp3790
g1
g39
sg3
I01
sg10
L5L
sa(dp3791
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3792
sa(dp3793
g1
g3291
sg3
I01
sg10
L5L
sa(dp3794
g1
g44
sg3
I01
sg10
L5L
sa(dp3795
g1
g46
sg3
I01
sg10
L5L
sa(dp3796
g1
g48
sg3
I01
sg10
L5L
sa(dp3797
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3798
sa(dp3799
g1
V__next__
p3800
sg3
I01
sg10
L5L
sa(dp3801
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p3802
sa(dp3803
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3804
sa(dp3805
g1
g58
sg3
I01
sg10
L5L
sa(dp3806
g1
g60
sg3
I01
sg10
L5L
sa(dp3807
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3808
sa(dp3809
g1
g67
sg3
I01
sg10
L5L
sa(dp3810
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3811
sasg4
Venumerate(iterable[, start]) -> iterator for index, value of iterable\u000a\u000aReturn an enumerate object.  iterable must be another object that supports\u000aiteration.  The enumerate object yields pairs containing a count (from\u000astart, which defaults to zero) and a value yielded by the iterable argument.\u000aenumerate is useful for obtaining an indexed list:\u000a    (0, seq[0]), (1, seq[1]), (2, seq[2]), ...
p3812
sa(dp3813
g1
Veval
p3814
sg3
I01
sg10
L2L
sg4
VEvaluate the given source in the context of globals and locals.\u000a\u000aThe source may be a string representing a Python expression\u000aor a code object as returned by compile().\u000aThe globals must be a dictionary and locals can be any mapping,\u000adefaulting to the current globals and locals.\u000aIf only globals is given, locals defaults to it.
p3815
sa(dp3816
g1
Vexec
p3817
sg3
I01
sg10
L2L
sg4
VExecute the given source in the context of globals and locals.\u000a\u000aThe source may be a string representing one or more Python statements\u000aor a code object as returned by compile().\u000aThe globals must be a dictionary and locals can be any mapping,\u000adefaulting to the current globals and locals.\u000aIf only globals is given, locals defaults to it.
p3818
sa(dp3819
g1
Vexit
p3820
sg3
I01
sg10
L5L
sa(dp3821
g1
Vfilter
p3822
sg3
I01
sg10
L3L
sg6
(lp3823
(dp3824
g1
g17
sg3
I01
sg10
L5L
sa(dp3825
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3826
sa(dp3827
g1
g24
sg3
I01
sg10
L5L
sa(dp3828
g1
g26
sg3
I01
sg10
L5L
sa(dp3829
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3830
sa(dp3831
g1
g31
sg3
I01
sg10
L5L
sa(dp3832
g1
g33
sg3
I01
sg10
L5L
sa(dp3833
g1
g35
sg3
I01
sg10
L5L
sa(dp3834
g1
g37
sg3
I01
sg10
L5L
sa(dp3835
g1
g39
sg3
I01
sg10
L5L
sa(dp3836
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3837
sa(dp3838
g1
g3291
sg3
I01
sg10
L5L
sa(dp3839
g1
g44
sg3
I01
sg10
L5L
sa(dp3840
g1
g46
sg3
I01
sg10
L5L
sa(dp3841
g1
g48
sg3
I01
sg10
L5L
sa(dp3842
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3843
sa(dp3844
g1
g3800
sg3
I01
sg10
L5L
sa(dp3845
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p3846
sa(dp3847
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3848
sa(dp3849
g1
g58
sg3
I01
sg10
L5L
sa(dp3850
g1
g60
sg3
I01
sg10
L5L
sa(dp3851
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3852
sa(dp3853
g1
g67
sg3
I01
sg10
L5L
sa(dp3854
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3855
sasg4
Vfilter(function or None, iterable) --> filter object\u000a\u000aReturn an iterator yielding those items of iterable for which function(item)\u000ais true. If function is None, return the items that are true.
p3856
sa(dp3857
g1
Vfloat
p3858
sg3
I01
sg10
L3L
sg6
(lp3859
(dp3860
g1
g3128
sg3
I01
sg10
L5L
sa(dp3861
g1
g3130
sg3
I01
sg10
L5L
sa(dp3862
g1
g3134
sg3
I01
sg10
L5L
sa(dp3863
g1
g17
sg3
I01
sg10
L5L
sa(dp3864
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3865
sa(dp3866
g1
g3142
sg3
I01
sg10
L5L
sa(dp3867
g1
g24
sg3
I01
sg10
L5L
sa(dp3868
g1
g26
sg3
I01
sg10
L5L
sa(dp3869
g1
g3146
sg3
I01
sg10
L5L
sa(dp3870
g1
g3151
sg3
I01
sg10
L5L
sa(dp3871
g1
g28
sg3
I01
sg10
L2L
sg4
Vfloat.__format__(format_spec) -> string\u000a\u000aFormats the float according to format_spec.
p3872
sa(dp3873
g1
g31
sg3
I01
sg10
L5L
sa(dp3874
g1
g33
sg3
I01
sg10
L5L
sa(dp3875
g1
V__getformat__
p3876
sg3
I01
sg10
L2L
sg4
Vfloat.__getformat__(typestr) -> string\u000a\u000aYou probably don't want to use this function.  It exists mainly to be\u000aused in Python's test suite.\u000a\u000atypestr must be 'double' or 'float'.  This function returns whichever of\u000a'unknown', 'IEEE, big-endian' or 'IEEE, little-endian' best describes the\u000aformat of floating point numbers used by the C type named by typestr.
p3877
sa(dp3878
g1
g3156
sg3
I01
sg10
L2L
sg4
Nsa(dp3879
g1
g35
sg3
I01
sg10
L5L
sa(dp3880
g1
g37
sg3
I01
sg10
L5L
sa(dp3881
g1
g39
sg3
I01
sg10
L5L
sa(dp3882
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3883
sa(dp3884
g1
g3165
sg3
I01
sg10
L5L
sa(dp3885
g1
g44
sg3
I01
sg10
L5L
sa(dp3886
g1
g46
sg3
I01
sg10
L5L
sa(dp3887
g1
g3173
sg3
I01
sg10
L5L
sa(dp3888
g1
g3175
sg3
I01
sg10
L5L
sa(dp3889
g1
g48
sg3
I01
sg10
L5L
sa(dp3890
g1
g3178
sg3
I01
sg10
L5L
sa(dp3891
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3892
sa(dp3893
g1
g3184
sg3
I01
sg10
L5L
sa(dp3894
g1
g3186
sg3
I01
sg10
L5L
sa(dp3895
g1
g3188
sg3
I01
sg10
L5L
sa(dp3896
g1
g3192
sg3
I01
sg10
L5L
sa(dp3897
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3898
sa(dp3899
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3900
sa(dp3901
g1
g58
sg3
I01
sg10
L5L
sa(dp3902
g1
g3199
sg3
I01
sg10
L5L
sa(dp3903
g1
g3203
sg3
I01
sg10
L5L
sa(dp3904
g1
g3205
sg3
I01
sg10
L5L
sa(dp3905
g1
g3209
sg3
I01
sg10
L2L
sg4
VReturn the Integral closest to x, rounding half toward even.\u000aWhen an argument is passed, work like built-in round(x, ndigits).
p3906
sa(dp3907
g1
g3212
sg3
I01
sg10
L5L
sa(dp3908
g1
g3218
sg3
I01
sg10
L5L
sa(dp3909
g1
g3220
sg3
I01
sg10
L5L
sa(dp3910
g1
g60
sg3
I01
sg10
L5L
sa(dp3911
g1
V__setformat__
p3912
sg3
I01
sg10
L2L
sg4
Vfloat.__setformat__(typestr, fmt) -> None\u000a\u000aYou probably don't want to use this function.  It exists mainly to be\u000aused in Python's test suite.\u000a\u000atypestr must be 'double' or 'float'.  fmt must be one of 'unknown',\u000a'IEEE, big-endian' or 'IEEE, little-endian', and in addition can only be\u000aone of the latter two if it appears to match the underlying C reality.\u000a\u000aOverride the automatic determination of C-level floating point type.\u000aThis affects how floats are converted to and from binary strings.
p3913
sa(dp3914
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3915
sa(dp3916
g1
g67
sg3
I01
sg10
L5L
sa(dp3917
g1
g3228
sg3
I01
sg10
L5L
sa(dp3918
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3919
sa(dp3920
g1
g3232
sg3
I01
sg10
L5L
sa(dp3921
g1
g3234
sg3
I01
sg10
L2L
sg4
VReturn the Integral closest to x between 0 and x.
p3922
sa(dp3923
g1
Vas_integer_ratio
p3924
sg3
I01
sg10
L2L
sg4
Vfloat.as_integer_ratio() -> (int, int)\u000a\u000aReturn a pair of integers, whose ratio is exactly equal to the original\u000afloat and with a positive denominator.\u000aRaise OverflowError on infinities and a ValueError on NaNs.\u000a\u000a>>> (10.0).as_integer_ratio()\u000a(10, 1)\u000a>>> (0.0).as_integer_ratio()\u000a(0, 1)\u000a>>> (-.25).as_integer_ratio()\u000a(-1, 4)
p3925
sa(dp3926
g1
g3242
sg3
I01
sg10
L2L
sg4
VReturn self, the complex conjugate of any float.
p3927
sa(dp3928
g1
g3350
sg3
I01
sg10
L2L
sg4
Vfloat.fromhex(string) -> float\u000a\u000aCreate a floating-point number from a hexadecimal string.\u000a>>> float.fromhex('0x1.ffffp10')\u000a2047.984375\u000a>>> float.fromhex('-0x1p-1074')\u000a-5e-324
p3929
sa(dp3930
g1
g3353
sg3
I01
sg10
L2L
sg4
Vfloat.hex() -> string\u000a\u000aReturn a hexadecimal representation of a floating-point number.\u000a>>> (-0.1).hex()\u000a'-0x1.999999999999ap-4'\u000a>>> 3.14159.hex()\u000a'0x1.921f9f01b866ep+1'
p3931
sa(dp3932
g1
g3250
sg3
I01
sg10
L5L
sa(dp3933
g1
Vis_integer
p3934
sg3
I01
sg10
L2L
sg4
VReturn True if the float is an integer.
p3935
sa(dp3936
g1
g3254
sg3
I01
sg10
L5L
sasg4
Vfloat(x) -> floating point number\u000a\u000aConvert a string or number to a floating point number, if possible.
p3937
sa(dp3938
g1
Vformat
p3939
sg3
I01
sg10
L2L
sg4
VReturn value.__format__(format_spec)\u000a\u000aformat_spec defaults to the empty string.\u000aSee the Format Specification Mini-Language section of help('FORMATTING') for\u000adetails.
p3940
sa(dp3941
g1
Vfrozenset
p3942
sg3
I01
sg10
L3L
sg6
(lp3943
(dp3944
g1
g3132
sg3
I01
sg10
L5L
sa(dp3945
g1
g3267
sg3
I01
sg10
L2L
sg4
Vx.__contains__(y) <==> y in x.
p3946
sa(dp3947
g1
g17
sg3
I01
sg10
L5L
sa(dp3948
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p3949
sa(dp3950
g1
g24
sg3
I01
sg10
L5L
sa(dp3951
g1
g26
sg3
I01
sg10
L5L
sa(dp3952
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p3953
sa(dp3954
g1
g31
sg3
I01
sg10
L5L
sa(dp3955
g1
g33
sg3
I01
sg10
L5L
sa(dp3956
g1
g35
sg3
I01
sg10
L5L
sa(dp3957
g1
g37
sg3
I01
sg10
L5L
sa(dp3958
g1
g39
sg3
I01
sg10
L5L
sa(dp3959
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p3960
sa(dp3961
g1
g3291
sg3
I01
sg10
L5L
sa(dp3962
g1
g44
sg3
I01
sg10
L5L
sa(dp3963
g1
g3294
sg3
I01
sg10
L5L
sa(dp3964
g1
g46
sg3
I01
sg10
L5L
sa(dp3965
g1
g48
sg3
I01
sg10
L5L
sa(dp3966
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p3967
sa(dp3968
g1
g3182
sg3
I01
sg10
L5L
sa(dp3969
g1
g3190
sg3
I01
sg10
L5L
sa(dp3970
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p3971
sa(dp3972
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p3973
sa(dp3974
g1
g58
sg3
I01
sg10
L5L
sa(dp3975
g1
g3207
sg3
I01
sg10
L5L
sa(dp3976
g1
g3218
sg3
I01
sg10
L5L
sa(dp3977
g1
g3222
sg3
I01
sg10
L5L
sa(dp3978
g1
g60
sg3
I01
sg10
L5L
sa(dp3979
g1
g64
sg3
I01
sg10
L2L
sg4
VS.__sizeof__() -> size of S in memory, in bytes
p3980
sa(dp3981
g1
g67
sg3
I01
sg10
L5L
sa(dp3982
g1
g3228
sg3
I01
sg10
L5L
sa(dp3983
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3984
sa(dp3985
g1
g3237
sg3
I01
sg10
L5L
sa(dp3986
g1
g3329
sg3
I01
sg10
L2L
sg4
VReturn a shallow copy of a set.
p3987
sa(dp3988
g1
Vdifference
p3989
sg3
I01
sg10
L2L
sg4
VReturn the difference of two or more sets as a new set.\u000a\u000a(i.e. all elements that are in this set but not the others.)
p3990
sa(dp3991
g1
Vintersection
p3992
sg3
I01
sg10
L2L
sg4
VReturn the intersection of two sets as a new set.\u000a\u000a(i.e. all elements that are in both sets.)
p3993
sa(dp3994
g1
Visdisjoint
p3995
sg3
I01
sg10
L2L
sg4
VReturn True if two sets have a null intersection.
p3996
sa(dp3997
g1
Vissubset
p3998
sg3
I01
sg10
L2L
sg4
VReport whether another set contains this set.
p3999
sa(dp4000
g1
Vissuperset
p4001
sg3
I01
sg10
L2L
sg4
VReport whether this set contains another set.
p4002
sa(dp4003
g1
Vsymmetric_difference
p4004
sg3
I01
sg10
L2L
sg4
VReturn the symmetric difference of two sets as a new set.\u000a\u000a(i.e. all elements that are in exactly one of the sets.)
p4005
sa(dp4006
g1
Vunion
p4007
sg3
I01
sg10
L2L
sg4
VReturn the union of sets as a new set.\u000a\u000a(i.e. all elements that are in either set.)
p4008
sasg4
Vfrozenset() -> empty frozenset object\u000afrozenset(iterable) -> frozenset object\u000a\u000aBuild an immutable unordered collection of unique elements.
p4009
sa(dp4010
g1
Vgetattr
p4011
sg3
I01
sg10
L2L
sg4
Vgetattr(object, name[, default]) -> value\u000a\u000aGet a named attribute from an object; getattr(x, 'y') is equivalent to x.y.\u000aWhen a default argument is given, it is returned when the attribute doesn't\u000aexist; without it, an exception is raised in that case.
p4012
sa(dp4013
g1
Vglobals
p4014
sg3
I01
sg10
L2L
sg4
VReturn the dictionary containing the current scope's global variables.\u000a\u000aNOTE: Updates to this dictionary *will* affect name lookups in the current\u000aglobal scope and vice-versa.
p4015
sa(dp4016
g1
Vhasattr
p4017
sg3
I01
sg10
L2L
sg4
VReturn whether the object has an attribute with the given name.\u000a\u000aThis is done by calling getattr(obj, name) and catching AttributeError.
p4018
sa(dp4019
g1
Vhash
p4020
sg3
I01
sg10
L2L
sg4
VReturn the hash value for the given object.\u000a\u000aTwo objects that compare equal must also have the same hash value, but the\u000areverse is not necessarily true.
p4021
sa(dp4022
g1
Vhelp
p4023
sg3
I01
sg10
L5L
sa(dp4024
g1
g3353
sg3
I01
sg10
L2L
sg4
VReturn the hexadecimal representation of an integer.\u000a\u000a   >>> hex(12648430)\u000a   '0xc0ffee'
p4025
sa(dp4026
g1
Vid
p4027
sg3
I01
sg10
L2L
sg4
VReturn the identity of an object.\u000a\u000aThis is guaranteed to be unique among simultaneously existing objects.\u000a(CPython uses the object's memory address.)
p4028
sa(dp4029
g1
Vinput
p4030
sg3
I01
sg10
L2L
sg4
VRead a string from standard input.  The trailing newline is stripped.\u000a\u000aThe prompt string, if given, is printed to standard output without a\u000atrailing newline before reading input.\u000a\u000aIf the user hits EOF (*nix: Ctrl-D, Windows: Ctrl-Z+Return), raise EOFError.\u000aOn *nix systems, readline is used if available.
p4031
sa(dp4032
g1
Vint
p4033
sg3
I01
sg10
L3L
sg6
(lp4034
(dp4035
g1
g3128
sg3
I01
sg10
L5L
sa(dp4036
g1
g3130
sg3
I01
sg10
L5L
sa(dp4037
g1
g3132
sg3
I01
sg10
L5L
sa(dp4038
g1
g3134
sg3
I01
sg10
L5L
sa(dp4039
g1
g3136
sg3
I01
sg10
L2L
sg4
VCeiling of an Integral returns itself.
p4040
sa(dp4041
g1
g17
sg3
I01
sg10
L5L
sa(dp4042
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4043
sa(dp4044
g1
g3142
sg3
I01
sg10
L5L
sa(dp4045
g1
g24
sg3
I01
sg10
L5L
sa(dp4046
g1
g26
sg3
I01
sg10
L5L
sa(dp4047
g1
g3146
sg3
I01
sg10
L5L
sa(dp4048
g1
g3148
sg3
I01
sg10
L2L
sg4
VFlooring an Integral returns itself.
p4049
sa(dp4050
g1
g3151
sg3
I01
sg10
L5L
sa(dp4051
g1
g28
sg3
I01
sg10
L2L
sg4
Nsa(dp4052
g1
g31
sg3
I01
sg10
L5L
sa(dp4053
g1
g33
sg3
I01
sg10
L5L
sa(dp4054
g1
g3156
sg3
I01
sg10
L2L
sg4
Nsa(dp4055
g1
g35
sg3
I01
sg10
L5L
sa(dp4056
g1
g37
sg3
I01
sg10
L5L
sa(dp4057
g1
g3160
sg3
I01
sg10
L5L
sa(dp4058
g1
g39
sg3
I01
sg10
L5L
sa(dp4059
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4060
sa(dp4061
g1
g3165
sg3
I01
sg10
L5L
sa(dp4062
g1
g3167
sg3
I01
sg10
L5L
sa(dp4063
g1
g44
sg3
I01
sg10
L5L
sa(dp4064
g1
g3170
sg3
I01
sg10
L5L
sa(dp4065
g1
g46
sg3
I01
sg10
L5L
sa(dp4066
g1
g3173
sg3
I01
sg10
L5L
sa(dp4067
g1
g3175
sg3
I01
sg10
L5L
sa(dp4068
g1
g48
sg3
I01
sg10
L5L
sa(dp4069
g1
g3178
sg3
I01
sg10
L5L
sa(dp4070
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4071
sa(dp4072
g1
g3182
sg3
I01
sg10
L5L
sa(dp4073
g1
g3184
sg3
I01
sg10
L5L
sa(dp4074
g1
g3186
sg3
I01
sg10
L5L
sa(dp4075
g1
g3188
sg3
I01
sg10
L5L
sa(dp4076
g1
g3190
sg3
I01
sg10
L5L
sa(dp4077
g1
g3192
sg3
I01
sg10
L5L
sa(dp4078
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4079
sa(dp4080
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4081
sa(dp4082
g1
g58
sg3
I01
sg10
L5L
sa(dp4083
g1
g3199
sg3
I01
sg10
L5L
sa(dp4084
g1
g3201
sg3
I01
sg10
L5L
sa(dp4085
g1
g3203
sg3
I01
sg10
L5L
sa(dp4086
g1
g3205
sg3
I01
sg10
L5L
sa(dp4087
g1
g3207
sg3
I01
sg10
L5L
sa(dp4088
g1
g3209
sg3
I01
sg10
L2L
sg4
VRounding an Integral returns itself.\u000aRounding with an ndigits argument also returns an integer.
p4089
sa(dp4090
g1
g3212
sg3
I01
sg10
L5L
sa(dp4091
g1
g3214
sg3
I01
sg10
L5L
sa(dp4092
g1
g3216
sg3
I01
sg10
L5L
sa(dp4093
g1
g3218
sg3
I01
sg10
L5L
sa(dp4094
g1
g3220
sg3
I01
sg10
L5L
sa(dp4095
g1
g3222
sg3
I01
sg10
L5L
sa(dp4096
g1
g60
sg3
I01
sg10
L5L
sa(dp4097
g1
g64
sg3
I01
sg10
L2L
sg4
VReturns size in memory, in bytes
p4098
sa(dp4099
g1
g67
sg3
I01
sg10
L5L
sa(dp4100
g1
g3228
sg3
I01
sg10
L5L
sa(dp4101
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4102
sa(dp4103
g1
g3232
sg3
I01
sg10
L5L
sa(dp4104
g1
g3234
sg3
I01
sg10
L2L
sg4
VTruncating an Integral returns itself.
p4105
sa(dp4106
g1
g3237
sg3
I01
sg10
L5L
sa(dp4107
g1
g3239
sg3
I01
sg10
L2L
sg4
Vint.bit_length() -> int\u000a\u000aNumber of bits necessary to represent self in binary.\u000a>>> bin(37)\u000a'0b100101'\u000a>>> (37).bit_length()\u000a6
p4108
sa(dp4109
g1
g3242
sg3
I01
sg10
L2L
sg4
VReturns self, the complex conjugate of any int.
p4110
sa(dp4111
g1
g3245
sg3
I01
sg10
L5L
sa(dp4112
g1
g3247
sg3
I01
sg10
L2L
sg4
Vint.from_bytes(bytes, byteorder, *, signed=False) -> int\u000a\u000aReturn the integer represented by the given array of bytes.\u000a\u000aThe bytes argument must be a bytes-like object (e.g. bytes or bytearray).\u000a\u000aThe byteorder argument determines the byte order used to represent the\u000ainteger.  If byteorder is 'big', the most significant byte is at the\u000abeginning of the byte array.  If byteorder is 'little', the most\u000asignificant byte is at the end of the byte array.  To request the native\u000abyte order of the host system, use `sys.byteorder' as the byte order value.\u000a\u000aThe signed keyword-only argument indicates whether two's complement is\u000aused to represent the integer.
p4113
sa(dp4114
g1
g3250
sg3
I01
sg10
L5L
sa(dp4115
g1
g3252
sg3
I01
sg10
L5L
sa(dp4116
g1
g3254
sg3
I01
sg10
L5L
sa(dp4117
g1
g3256
sg3
I01
sg10
L2L
sg4
Vint.to_bytes(length, byteorder, *, signed=False) -> bytes\u000a\u000aReturn an array of bytes representing an integer.\u000a\u000aThe integer is represented using length bytes.  An OverflowError is\u000araised if the integer is not representable with the given number of\u000abytes.\u000a\u000aThe byteorder argument determines the byte order used to represent the\u000ainteger.  If byteorder is 'big', the most significant byte is at the\u000abeginning of the byte array.  If byteorder is 'little', the most\u000asignificant byte is at the end of the byte array.  To request the native\u000abyte order of the host system, use `sys.byteorder' as the byte order value.\u000a\u000aThe signed keyword-only argument determines whether two's complement is\u000aused to represent the integer.  If signed is False and a negative integer\u000ais given, an OverflowError is raised.
p4118
sasg4
Vint(x=0) -> integer\u000aint(x, base=10) -> integer\u000a\u000aConvert a number or string to an integer, or return 0 if no arguments\u000aare given.  If x is a number, return x.__int__().  For floating point\u000anumbers, this truncates towards zero.\u000a\u000aIf x is not a number or if base is given, then x must be a string,\u000abytes, or bytearray instance representing an integer literal in the\u000agiven base.  The literal can be preceded by '+' or '-' and be surrounded\u000aby whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.\u000aBase 0 means to interpret the base from the string as an integer literal.\u000a>>> int('0b100', base=0)\u000a4
p4119
sa(dp4120
g1
Visinstance
p4121
sg3
I01
sg10
L2L
sg4
VReturn whether an object is an instance of a class or of a subclass thereof.\u000a\u000aA tuple, as in ``isinstance(x, (A, B, ...))``, may be given as the target to\u000acheck against. This is equivalent to ``isinstance(x, A) or isinstance(x, B)\u000aor ...`` etc.
p4122
sa(dp4123
g1
Vissubclass
p4124
sg3
I01
sg10
L2L
sg4
VReturn whether 'cls' is a derived from another class or is the same class.\u000a\u000aA tuple, as in ``issubclass(x, (A, B, ...))``, may be given as the target to\u000acheck against. This is equivalent to ``issubclass(x, A) or issubclass(x, B)\u000aor ...`` etc.
p4125
sa(dp4126
g1
Viter
p4127
sg3
I01
sg10
L2L
sg4
Viter(iterable) -> iterator\u000aiter(callable, sentinel) -> iterator\u000a\u000aGet an iterator from an object.  In the first form, the argument must\u000asupply its own iterator, or be a sequence.\u000aIn the second form, the callable is called until it returns the sentinel.
p4128
sa(dp4129
g1
Vlen
p4130
sg3
I01
sg10
L2L
sg4
VReturn the number of items in a container.
p4131
sa(dp4132
g1
Vlicense
p4133
sg3
I01
sg10
L5L
sa(dp4134
g1
Vlist
p4135
sg3
I01
sg10
L3L
sg6
(lp4136
(dp4137
g1
g3130
sg3
I01
sg10
L5L
sa(dp4138
g1
g3267
sg3
I01
sg10
L5L
sa(dp4139
g1
g17
sg3
I01
sg10
L5L
sa(dp4140
g1
g3270
sg3
I01
sg10
L5L
sa(dp4141
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4142
sa(dp4143
g1
g24
sg3
I01
sg10
L5L
sa(dp4144
g1
g26
sg3
I01
sg10
L5L
sa(dp4145
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4146
sa(dp4147
g1
g31
sg3
I01
sg10
L5L
sa(dp4148
g1
g33
sg3
I01
sg10
L5L
sa(dp4149
g1
g3280
sg3
I01
sg10
L2L
sg4
Vx.__getitem__(y) <==> x[y]
p4150
sa(dp4151
g1
g35
sg3
I01
sg10
L5L
sa(dp4152
g1
g37
sg3
I01
sg10
L5L
sa(dp4153
g1
g3284
sg3
I01
sg10
L5L
sa(dp4154
g1
g3286
sg3
I01
sg10
L5L
sa(dp4155
g1
g39
sg3
I01
sg10
L5L
sa(dp4156
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4157
sa(dp4158
g1
g3291
sg3
I01
sg10
L5L
sa(dp4159
g1
g44
sg3
I01
sg10
L5L
sa(dp4160
g1
g3294
sg3
I01
sg10
L5L
sa(dp4161
g1
g46
sg3
I01
sg10
L5L
sa(dp4162
g1
g3175
sg3
I01
sg10
L5L
sa(dp4163
g1
g48
sg3
I01
sg10
L5L
sa(dp4164
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4165
sa(dp4166
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4167
sa(dp4168
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4169
sa(dp4170
g1
g58
sg3
I01
sg10
L5L
sa(dp4171
g1
V__reversed__
p4172
sg3
I01
sg10
L2L
sg4
VL.__reversed__() -- return a reverse iterator over the list
p4173
sa(dp4174
g1
g3205
sg3
I01
sg10
L5L
sa(dp4175
g1
g60
sg3
I01
sg10
L5L
sa(dp4176
g1
g3310
sg3
I01
sg10
L5L
sa(dp4177
g1
g64
sg3
I01
sg10
L2L
sg4
VL.__sizeof__() -- size of L in memory, in bytes
p4178
sa(dp4179
g1
g67
sg3
I01
sg10
L5L
sa(dp4180
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4181
sa(dp4182
g1
g3317
sg3
I01
sg10
L2L
sg4
VL.append(object) -> None -- append object to end
p4183
sa(dp4184
g1
g3326
sg3
I01
sg10
L2L
sg4
VL.clear() -> None -- remove all items from L
p4185
sa(dp4186
g1
g3329
sg3
I01
sg10
L2L
sg4
VL.copy() -> list -- a shallow copy of L
p4187
sa(dp4188
g1
g3332
sg3
I01
sg10
L2L
sg4
VL.count(value) -> integer -- return number of occurrences of value
p4189
sa(dp4190
g1
g3344
sg3
I01
sg10
L2L
sg4
VL.extend(iterable) -> None -- extend list by appending elements from the iterable
p4191
sa(dp4192
g1
g3356
sg3
I01
sg10
L2L
sg4
VL.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p4193
sa(dp4194
g1
g3359
sg3
I01
sg10
L2L
sg4
VL.insert(index, object) -- insert object before index
p4195
sa(dp4196
g1
g3401
sg3
I01
sg10
L2L
sg4
VL.pop([index]) -> item -- remove and return item at index (default last).\u000aRaises IndexError if list is empty or index is out of range.
p4197
sa(dp4198
g1
g3404
sg3
I01
sg10
L2L
sg4
VL.remove(value) -> None -- remove first occurrence of value.\u000aRaises ValueError if the value is not present.
p4199
sa(dp4200
g1
g3410
sg3
I01
sg10
L2L
sg4
VL.reverse() -- reverse *IN PLACE*
p4201
sa(dp4202
g1
Vsort
p4203
sg3
I01
sg10
L2L
sg4
VL.sort(key=None, reverse=False) -> None -- stable sort *IN PLACE*
p4204
sasg4
Vlist() -> new empty list\u000alist(iterable) -> new list initialized from iterable's items
p4205
sa(dp4206
g1
Vlocals
p4207
sg3
I01
sg10
L2L
sg4
VReturn a dictionary containing the current scope's local variables.\u000a\u000aNOTE: Whether or not updates to this dictionary will affect name lookups in\u000athe local scope and vice-versa is *implementation dependent* and not\u000acovered by any backwards compatibility guarantees.
p4208
sa(dp4209
g1
Vmap
p4210
sg3
I01
sg10
L3L
sg6
(lp4211
(dp4212
g1
g17
sg3
I01
sg10
L5L
sa(dp4213
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4214
sa(dp4215
g1
g24
sg3
I01
sg10
L5L
sa(dp4216
g1
g26
sg3
I01
sg10
L5L
sa(dp4217
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4218
sa(dp4219
g1
g31
sg3
I01
sg10
L5L
sa(dp4220
g1
g33
sg3
I01
sg10
L5L
sa(dp4221
g1
g35
sg3
I01
sg10
L5L
sa(dp4222
g1
g37
sg3
I01
sg10
L5L
sa(dp4223
g1
g39
sg3
I01
sg10
L5L
sa(dp4224
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4225
sa(dp4226
g1
g3291
sg3
I01
sg10
L5L
sa(dp4227
g1
g44
sg3
I01
sg10
L5L
sa(dp4228
g1
g46
sg3
I01
sg10
L5L
sa(dp4229
g1
g48
sg3
I01
sg10
L5L
sa(dp4230
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4231
sa(dp4232
g1
g3800
sg3
I01
sg10
L5L
sa(dp4233
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p4234
sa(dp4235
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4236
sa(dp4237
g1
g58
sg3
I01
sg10
L5L
sa(dp4238
g1
g60
sg3
I01
sg10
L5L
sa(dp4239
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4240
sa(dp4241
g1
g67
sg3
I01
sg10
L5L
sa(dp4242
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4243
sasg4
Vmap(func, *iterables) --> map object\u000a\u000aMake an iterator that computes the function using arguments from\u000aeach of the iterables.  Stops when the shortest iterable is exhausted.
p4244
sa(dp4245
g1
Vmax
p4246
sg3
I01
sg10
L2L
sg4
Vmax(iterable, *[, default=obj, key=func]) -> value\u000amax(arg1, arg2, *args, *[, key=func]) -> value\u000a\u000aWith a single iterable argument, return its biggest item. The\u000adefault keyword-only argument specifies an object to return if\u000athe provided iterable is empty.\u000aWith two or more arguments, return the largest argument.
p4247
sa(dp4248
g1
Vmemoryview
p4249
sg3
I01
sg10
L3L
sg6
(lp4250
(dp4251
g1
g17
sg3
I01
sg10
L5L
sa(dp4252
g1
g3270
sg3
I01
sg10
L5L
sa(dp4253
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4254
sa(dp4255
g1
g24
sg3
I01
sg10
L5L
sa(dp4256
g1
V__enter__
p4257
sg3
I01
sg10
L2L
sg4
Nsa(dp4258
g1
g26
sg3
I01
sg10
L5L
sa(dp4259
g1
V__exit__
p4260
sg3
I01
sg10
L2L
sg4
Nsa(dp4261
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4262
sa(dp4263
g1
g31
sg3
I01
sg10
L5L
sa(dp4264
g1
g33
sg3
I01
sg10
L5L
sa(dp4265
g1
g3280
sg3
I01
sg10
L5L
sa(dp4266
g1
g35
sg3
I01
sg10
L5L
sa(dp4267
g1
g37
sg3
I01
sg10
L5L
sa(dp4268
g1
g39
sg3
I01
sg10
L5L
sa(dp4269
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4270
sa(dp4271
g1
g44
sg3
I01
sg10
L5L
sa(dp4272
g1
g3294
sg3
I01
sg10
L5L
sa(dp4273
g1
g46
sg3
I01
sg10
L5L
sa(dp4274
g1
g48
sg3
I01
sg10
L5L
sa(dp4275
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4276
sa(dp4277
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4278
sa(dp4279
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4280
sa(dp4281
g1
g58
sg3
I01
sg10
L5L
sa(dp4282
g1
g60
sg3
I01
sg10
L5L
sa(dp4283
g1
g3310
sg3
I01
sg10
L5L
sa(dp4284
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4285
sa(dp4286
g1
g67
sg3
I01
sg10
L5L
sa(dp4287
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4288
sa(dp4289
g1
Vc_contiguous
p4290
sg3
I01
sg10
L5L
sa(dp4291
g1
Vcast
p4292
sg3
I01
sg10
L2L
sg4
VCast a memoryview to a new format or shape.
p4293
sa(dp4294
g1
Vcontiguous
p4295
sg3
I01
sg10
L5L
sa(dp4296
g1
Vf_contiguous
p4297
sg3
I01
sg10
L5L
sa(dp4298
g1
g3939
sg3
I01
sg10
L5L
sa(dp4299
g1
g3353
sg3
I01
sg10
L2L
sg4
VReturn the data in the buffer as a string of hexadecimal numbers.
p4300
sa(dp4301
g1
Vitemsize
p4302
sg3
I01
sg10
L5L
sa(dp4303
g1
Vnbytes
p4304
sg3
I01
sg10
L5L
sa(dp4305
g1
Vndim
p4306
sg3
I01
sg10
L5L
sa(dp4307
g1
Vobj
p4308
sg3
I01
sg10
L5L
sa(dp4309
g1
Vreadonly
p4310
sg3
I01
sg10
L5L
sa(dp4311
g1
Vrelease
p4312
sg3
I01
sg10
L2L
sg4
VRelease the underlying buffer exposed by the memoryview object.
p4313
sa(dp4314
g1
Vshape
p4315
sg3
I01
sg10
L5L
sa(dp4316
g1
Vstrides
p4317
sg3
I01
sg10
L5L
sa(dp4318
g1
Vsuboffsets
p4319
sg3
I01
sg10
L5L
sa(dp4320
g1
Vtobytes
p4321
sg3
I01
sg10
L2L
sg4
VReturn the data in the buffer as a byte string.
p4322
sa(dp4323
g1
Vtolist
p4324
sg3
I01
sg10
L2L
sg4
VReturn the data in the buffer as a list of elements.
p4325
sasg4
VCreate a new memoryview object which references the given object.
p4326
sa(dp4327
g1
Vmin
p4328
sg3
I01
sg10
L2L
sg4
Vmin(iterable, *[, default=obj, key=func]) -> value\u000amin(arg1, arg2, *args, *[, key=func]) -> value\u000a\u000aWith a single iterable argument, return its smallest item. The\u000adefault keyword-only argument specifies an object to return if\u000athe provided iterable is empty.\u000aWith two or more arguments, return the smallest argument.
p4329
sa(dp4330
g1
Vnext
p4331
sg3
I01
sg10
L2L
sg4
Vnext(iterator[, default])\u000a\u000aReturn the next item from the iterator. If default is given and the iterator\u000ais exhausted, it is returned instead of raising StopIteration.
p4332
sa(dp4333
g1
g2635
sg3
I01
sg10
L3L
sg6
(lp4334
(dp4335
g1
g17
sg3
I01
sg10
L5L
sa(dp4336
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4337
sa(dp4338
g1
g24
sg3
I01
sg10
L5L
sa(dp4339
g1
g26
sg3
I01
sg10
L5L
sa(dp4340
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4341
sa(dp4342
g1
g31
sg3
I01
sg10
L5L
sa(dp4343
g1
g33
sg3
I01
sg10
L5L
sa(dp4344
g1
g35
sg3
I01
sg10
L5L
sa(dp4345
g1
g37
sg3
I01
sg10
L5L
sa(dp4346
g1
g39
sg3
I01
sg10
L5L
sa(dp4347
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4348
sa(dp4349
g1
g44
sg3
I01
sg10
L5L
sa(dp4350
g1
g46
sg3
I01
sg10
L5L
sa(dp4351
g1
g48
sg3
I01
sg10
L5L
sa(dp4352
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4353
sa(dp4354
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4355
sa(dp4356
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4357
sa(dp4358
g1
g58
sg3
I01
sg10
L5L
sa(dp4359
g1
g60
sg3
I01
sg10
L5L
sa(dp4360
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4361
sa(dp4362
g1
g67
sg3
I01
sg10
L5L
sa(dp4363
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4364
sasg4
VThe most base type
p4365
sa(dp4366
g1
Voct
p4367
sg3
I01
sg10
L2L
sg4
VReturn the octal representation of an integer.\u000a\u000a   >>> oct(342391)\u000a   '0o1234567'
p4368
sa(dp4369
g1
Vopen
p4370
sg3
I01
sg10
L2L
sg4
VOpen file and return a stream.  Raise IOError upon failure.\u000a\u000afile is either a text or byte string giving the name (and the path\u000aif the file isn't in the current working directory) of the file to\u000abe opened or an integer file descriptor of the file to be\u000awrapped. (If a file descriptor is given, it is closed when the\u000areturned I/O object is closed, unless closefd is set to False.)\u000a\u000amode is an optional string that specifies the mode in which the file\u000ais opened. It defaults to 'r' which means open for reading in text\u000amode.  Other common values are 'w' for writing (truncating the file if\u000ait already exists), 'x' for creating and writing to a new file, and\u000a'a' for appending (which on some Unix systems, means that all writes\u000aappend to the end of the file regardless of the current seek position).\u000aIn text mode, if encoding is not specified the encoding used is platform\u000adependent: locale.getpreferredencoding(False) is called to get the\u000acurrent locale encoding. (For reading and writing raw bytes use binary\u000amode and leave encoding unspecified.) The available modes are:\u000a\u000a========= ===============================================================\u000aCharacter Meaning\u000a--------- ---------------------------------------------------------------\u000a'r'       open for reading (default)\u000a'w'       open for writing, truncating the file first\u000a'x'       create a new file and open it for writing\u000a'a'       open for writing, appending to the end of the file if it exists\u000a'b'       binary mode\u000a't'       text mode (default)\u000a'+'       open a disk file for updating (reading and writing)\u000a'U'       universal newline mode (deprecated)\u000a========= ===============================================================\u000a\u000aThe default mode is 'rt' (open for reading text). For binary random\u000aaccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\u000a'r+b' opens the file without truncation. The 'x' mode implies 'w' and\u000araises an `FileExistsError` if the file already exists.\u000a\u000aPython distinguishes between files opened in binary and text modes,\u000aeven when the underlying operating system doesn't. Files opened in\u000abinary mode (appending 'b' to the mode argument) return contents as\u000abytes objects without any decoding. In text mode (the default, or when\u000a't' is appended to the mode argument), the contents of the file are\u000areturned as strings, the bytes having been first decoded using a\u000aplatform-dependent encoding or using the specified encoding if given.\u000a\u000a'U' mode is deprecated and will raise an exception in future versions\u000aof Python.  It has no effect in Python 3.  Use newline to control\u000auniversal newlines mode.\u000a\u000abuffering is an optional integer used to set the buffering policy.\u000aPass 0 to switch buffering off (only allowed in binary mode), 1 to select\u000aline buffering (only usable in text mode), and an integer > 1 to indicate\u000athe size of a fixed-size chunk buffer.  When no buffering argument is\u000agiven, the default buffering policy works as follows:\u000a\u000a* Binary files are buffered in fixed-size chunks; the size of the buffer\u000a  is chosen using a heuristic trying to determine the underlying device's\u000a  "block size" and falling back on `io.DEFAULT_BUFFER_SIZE`.\u000a  On many systems, the buffer will typically be 4096 or 8192 bytes long.\u000a\u000a* "Interactive" text files (files for which isatty() returns True)\u000a  use line buffering.  Other text files use the policy described above\u000a  for binary files.\u000a\u000aencoding is the name of the encoding used to decode or encode the\u000afile. This should only be used in text mode. The default encoding is\u000aplatform dependent, but any encoding supported by Python can be\u000apassed.  See the codecs module for the list of supported encodings.\u000a\u000aerrors is an optional string that specifies how encoding errors are to\u000abe handled---this argument should not be used in binary mode. Pass\u000a'strict' to raise a ValueError exception if there is an encoding error\u000a(the default of None has the same effect), or pass 'ignore' to ignore\u000aerrors. (Note that ignoring encoding errors can lead to data loss.)\u000aSee the documentation for codecs.register or run 'help(codecs.Codec)'\u000afor a list of the permitted encoding error strings.\u000a\u000anewline controls how universal newlines works (it only applies to text\u000amode). It can be None, '', '\u005cn', '\u005cr', and '\u005cr\u005cn'.  It works as\u000afollows:\u000a\u000a* On input, if newline is None, universal newlines mode is\u000a  enabled. Lines in the input can end in '\u005cn', '\u005cr', or '\u005cr\u005cn', and\u000a  these are translated into '\u005cn' before being returned to the\u000a  caller. If it is '', universal newline mode is enabled, but line\u000a  endings are returned to the caller untranslated. If it has any of\u000a  the other legal values, input lines are only terminated by the given\u000a  string, and the line ending is returned to the caller untranslated.\u000a\u000a* On output, if newline is None, any '\u005cn' characters written are\u000a  translated to the system default line separator, os.linesep. If\u000a  newline is '' or '\u005cn', no translation takes place. If newline is any\u000a  of the other legal values, any '\u005cn' characters written are translated\u000a  to the given string.\u000a\u000aIf closefd is False, the underlying file descriptor will be kept open\u000awhen the file is closed. This does not work when a file name is given\u000aand must be True in that case.\u000a\u000aA custom opener can be used by passing a callable as *opener*. The\u000aunderlying file descriptor for the file object is then obtained by\u000acalling *opener* with (*file*, *flags*). *opener* must return an open\u000afile descriptor (passing os.open as *opener* results in functionality\u000asimilar to passing None).\u000a\u000aopen() returns a file object whose type depends on the mode, and\u000athrough which the standard file operations such as reading and writing\u000aare performed. When open() is used to open a file in a text mode ('w',\u000a'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\u000aa file in a binary mode, the returned class varies: in read binary\u000amode, it returns a BufferedReader; in write binary and append binary\u000amodes, it returns a BufferedWriter, and in read/write mode, it returns\u000aa BufferedRandom.\u000a\u000aIt is also possible to use a string or bytearray as a file for both\u000areading and writing. For strings StringIO can be used like a file\u000aopened in a text mode, and for bytes a BytesIO can be used like a file\u000aopened in a binary mode.
p4371
sa(dp4372
g1
Vord
p4373
sg3
I01
sg10
L2L
sg4
VReturn the Unicode code point for a one-character string.
p4374
sa(dp4375
g1
Vpow
p4376
sg3
I01
sg10
L2L
sg4
VEquivalent to x**y (with two arguments) or x**y % z (with three arguments)\u000a\u000aSome types, such as ints, are able to use a more efficient algorithm when\u000ainvoked using the three argument form.
p4377
sa(dp4378
g1
Vprint
p4379
sg3
I01
sg10
L2L
sg4
Vprint(value, ..., sep=' ', end='\u005cn', file=sys.stdout, flush=False)\u000a\u000aPrints the values to a stream, or to sys.stdout by default.\u000aOptional keyword arguments:\u000afile:  a file-like object (stream); defaults to the current sys.stdout.\u000asep:   string inserted between values, default a space.\u000aend:   string appended after the last value, default a newline.\u000aflush: whether to forcibly flush the stream.
p4380
sa(dp4381
g1
Vproperty
p4382
sg3
I01
sg10
L3L
sg6
(lp4383
(dp4384
g1
g17
sg3
I01
sg10
L5L
sa(dp4385
g1
V__delete__
p4386
sg3
I01
sg10
L5L
sa(dp4387
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4388
sa(dp4389
g1
g24
sg3
I01
sg10
L5L
sa(dp4390
g1
g26
sg3
I01
sg10
L5L
sa(dp4391
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4392
sa(dp4393
g1
g31
sg3
I01
sg10
L5L
sa(dp4394
g1
g3601
sg3
I01
sg10
L5L
sa(dp4395
g1
g33
sg3
I01
sg10
L5L
sa(dp4396
g1
g35
sg3
I01
sg10
L5L
sa(dp4397
g1
g37
sg3
I01
sg10
L5L
sa(dp4398
g1
g39
sg3
I01
sg10
L5L
sa(dp4399
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4400
sa(dp4401
g1
g3609
sg3
I01
sg10
L5L
sa(dp4402
g1
g44
sg3
I01
sg10
L5L
sa(dp4403
g1
g46
sg3
I01
sg10
L5L
sa(dp4404
g1
g48
sg3
I01
sg10
L5L
sa(dp4405
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4406
sa(dp4407
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4408
sa(dp4409
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4410
sa(dp4411
g1
g58
sg3
I01
sg10
L5L
sa(dp4412
g1
V__set__
p4413
sg3
I01
sg10
L5L
sa(dp4414
g1
g60
sg3
I01
sg10
L5L
sa(dp4415
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4416
sa(dp4417
g1
g67
sg3
I01
sg10
L5L
sa(dp4418
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4419
sa(dp4420
g1
Vdeleter
p4421
sg3
I01
sg10
L2L
sg4
VDescriptor to change the deleter on a property.
p4422
sa(dp4423
g1
Vfdel
p4424
sg3
I01
sg10
L5L
sa(dp4425
g1
Vfget
p4426
sg3
I01
sg10
L5L
sa(dp4427
g1
Vfset
p4428
sg3
I01
sg10
L5L
sa(dp4429
g1
Vgetter
p4430
sg3
I01
sg10
L2L
sg4
VDescriptor to change the getter on a property.
p4431
sa(dp4432
g1
Vsetter
p4433
sg3
I01
sg10
L2L
sg4
VDescriptor to change the setter on a property.
p4434
sasg4
Vproperty(fget=None, fset=None, fdel=None, doc=None) -> property attribute\u000a\u000afget is a function to be used for getting an attribute value, and likewise\u000afset is a function for setting, and fdel a function for del'ing, an\u000aattribute.  Typical use is to define a managed attribute x:\u000a\u000aclass C(object):\u000a    def getx(self): return self._x\u000a    def setx(self, value): self._x = value\u000a    def delx(self): del self._x\u000a    x = property(getx, setx, delx, "I'm the 'x' property.")\u000a\u000aDecorators make defining new properties or modifying existing ones easy:\u000a\u000aclass C(object):\u000a    @property\u000a    def x(self):\u000a        "I am the 'x' property."\u000a        return self._x\u000a    @x.setter\u000a    def x(self, value):\u000a        self._x = value\u000a    @x.deleter\u000a    def x(self):\u000a        del self._x\u000a
p4435
sa(dp4436
g1
Vquit
p4437
sg3
I01
sg10
L5L
sa(dp4438
g1
Vrange
p4439
sg3
I01
sg10
L3L
sg6
(lp4440
(dp4441
g1
g3134
sg3
I01
sg10
L5L
sa(dp4442
g1
g3267
sg3
I01
sg10
L5L
sa(dp4443
g1
g17
sg3
I01
sg10
L5L
sa(dp4444
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4445
sa(dp4446
g1
g24
sg3
I01
sg10
L5L
sa(dp4447
g1
g26
sg3
I01
sg10
L5L
sa(dp4448
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4449
sa(dp4450
g1
g31
sg3
I01
sg10
L5L
sa(dp4451
g1
g33
sg3
I01
sg10
L5L
sa(dp4452
g1
g3280
sg3
I01
sg10
L5L
sa(dp4453
g1
g35
sg3
I01
sg10
L5L
sa(dp4454
g1
g37
sg3
I01
sg10
L5L
sa(dp4455
g1
g39
sg3
I01
sg10
L5L
sa(dp4456
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4457
sa(dp4458
g1
g3291
sg3
I01
sg10
L5L
sa(dp4459
g1
g44
sg3
I01
sg10
L5L
sa(dp4460
g1
g3294
sg3
I01
sg10
L5L
sa(dp4461
g1
g46
sg3
I01
sg10
L5L
sa(dp4462
g1
g48
sg3
I01
sg10
L5L
sa(dp4463
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4464
sa(dp4465
g1
g53
sg3
I01
sg10
L2L
sg4
Nsa(dp4466
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4467
sa(dp4468
g1
g58
sg3
I01
sg10
L5L
sa(dp4469
g1
g4172
sg3
I01
sg10
L2L
sg4
VReturn a reverse iterator.
p4470
sa(dp4471
g1
g60
sg3
I01
sg10
L5L
sa(dp4472
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4473
sa(dp4474
g1
g67
sg3
I01
sg10
L5L
sa(dp4475
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4476
sa(dp4477
g1
g3332
sg3
I01
sg10
L2L
sg4
Vrangeobject.count(value) -> integer -- return number of occurrences of value
p4478
sa(dp4479
g1
g3356
sg3
I01
sg10
L2L
sg4
Vrangeobject.index(value, [start, [stop]]) -> integer -- return index of value.\u000aRaise ValueError if the value is not present.
p4480
sa(dp4481
g1
g2639
sg3
I01
sg10
L5L
sa(dp4482
g1
Vstep
p4483
sg3
I01
sg10
L5L
sa(dp4484
g1
Vstop
p4485
sg3
I01
sg10
L5L
sasg4
Vrange(stop) -> range object\u000arange(start, stop[, step]) -> range object\u000a\u000aReturn an object that produces a sequence of integers from start (inclusive)\u000ato stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\u000astart defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\u000aThese are exactly the valid indices for a list of 4 elements.\u000aWhen step is given, it specifies the increment (or decrement).
p4486
sa(dp4487
g1
Vrepr
p4488
sg3
I01
sg10
L2L
sg4
VReturn the canonical string representation of the object.\u000a\u000aFor many object types, including most builtins, eval(repr(obj)) == obj.
p4489
sa(dp4490
g1
Vreversed
p4491
sg3
I01
sg10
L3L
sg6
(lp4492
(dp4493
g1
g17
sg3
I01
sg10
L5L
sa(dp4494
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4495
sa(dp4496
g1
g24
sg3
I01
sg10
L5L
sa(dp4497
g1
g26
sg3
I01
sg10
L5L
sa(dp4498
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4499
sa(dp4500
g1
g31
sg3
I01
sg10
L5L
sa(dp4501
g1
g33
sg3
I01
sg10
L5L
sa(dp4502
g1
g35
sg3
I01
sg10
L5L
sa(dp4503
g1
g37
sg3
I01
sg10
L5L
sa(dp4504
g1
g39
sg3
I01
sg10
L5L
sa(dp4505
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4506
sa(dp4507
g1
g3291
sg3
I01
sg10
L5L
sa(dp4508
g1
g44
sg3
I01
sg10
L5L
sa(dp4509
g1
V__length_hint__
p4510
sg3
I01
sg10
L2L
sg4
VPrivate method returning an estimate of len(list(it)).
p4511
sa(dp4512
g1
g46
sg3
I01
sg10
L5L
sa(dp4513
g1
g48
sg3
I01
sg10
L5L
sa(dp4514
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4515
sa(dp4516
g1
g3800
sg3
I01
sg10
L5L
sa(dp4517
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p4518
sa(dp4519
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4520
sa(dp4521
g1
g58
sg3
I01
sg10
L5L
sa(dp4522
g1
g60
sg3
I01
sg10
L5L
sa(dp4523
g1
g62
sg3
I01
sg10
L2L
sg4
VSet state information for unpickling.
p4524
sa(dp4525
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4526
sa(dp4527
g1
g67
sg3
I01
sg10
L5L
sa(dp4528
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4529
sasg4
Vreversed(sequence) -> reverse iterator over values of the sequence\u000a\u000aReturn a reverse iterator
p4530
sa(dp4531
g1
Vround
p4532
sg3
I01
sg10
L2L
sg4
Vround(number[, ndigits]) -> number\u000a\u000aRound a number to a given precision in decimal digits (default 0 digits).\u000aThis returns an int when called with one argument, otherwise the\u000asame type as the number. ndigits may be negative.
p4533
sa(dp4534
g1
Vset
p4535
sg3
I01
sg10
L3L
sg6
(lp4536
(dp4537
g1
g3132
sg3
I01
sg10
L5L
sa(dp4538
g1
g3267
sg3
I01
sg10
L2L
sg4
Vx.__contains__(y) <==> y in x.
p4539
sa(dp4540
g1
g17
sg3
I01
sg10
L5L
sa(dp4541
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4542
sa(dp4543
g1
g24
sg3
I01
sg10
L5L
sa(dp4544
g1
g26
sg3
I01
sg10
L5L
sa(dp4545
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4546
sa(dp4547
g1
g31
sg3
I01
sg10
L5L
sa(dp4548
g1
g33
sg3
I01
sg10
L5L
sa(dp4549
g1
g35
sg3
I01
sg10
L5L
sa(dp4550
g1
g37
sg3
I01
sg10
L5L
sa(dp4551
g1
V__iand__
p4552
sg3
I01
sg10
L5L
sa(dp4553
g1
g39
sg3
I01
sg10
L5L
sa(dp4554
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4555
sa(dp4556
g1
V__ior__
p4557
sg3
I01
sg10
L5L
sa(dp4558
g1
V__isub__
p4559
sg3
I01
sg10
L5L
sa(dp4560
g1
g3291
sg3
I01
sg10
L5L
sa(dp4561
g1
V__ixor__
p4562
sg3
I01
sg10
L5L
sa(dp4563
g1
g44
sg3
I01
sg10
L5L
sa(dp4564
g1
g3294
sg3
I01
sg10
L5L
sa(dp4565
g1
g46
sg3
I01
sg10
L5L
sa(dp4566
g1
g48
sg3
I01
sg10
L5L
sa(dp4567
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4568
sa(dp4569
g1
g3182
sg3
I01
sg10
L5L
sa(dp4570
g1
g3190
sg3
I01
sg10
L5L
sa(dp4571
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p4572
sa(dp4573
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4574
sa(dp4575
g1
g58
sg3
I01
sg10
L5L
sa(dp4576
g1
g3207
sg3
I01
sg10
L5L
sa(dp4577
g1
g3218
sg3
I01
sg10
L5L
sa(dp4578
g1
g3222
sg3
I01
sg10
L5L
sa(dp4579
g1
g60
sg3
I01
sg10
L5L
sa(dp4580
g1
g64
sg3
I01
sg10
L2L
sg4
VS.__sizeof__() -> size of S in memory, in bytes
p4581
sa(dp4582
g1
g67
sg3
I01
sg10
L5L
sa(dp4583
g1
g3228
sg3
I01
sg10
L5L
sa(dp4584
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4585
sa(dp4586
g1
g3237
sg3
I01
sg10
L5L
sa(dp4587
g1
Vadd
p4588
sg3
I01
sg10
L2L
sg4
VAdd an element to a set.\u000a\u000aThis has no effect if the element is already present.
p4589
sa(dp4590
g1
g3326
sg3
I01
sg10
L2L
sg4
VRemove all elements from this set.
p4591
sa(dp4592
g1
g3329
sg3
I01
sg10
L2L
sg4
VReturn a shallow copy of a set.
p4593
sa(dp4594
g1
g3989
sg3
I01
sg10
L2L
sg4
VReturn the difference of two or more sets as a new set.\u000a\u000a(i.e. all elements that are in this set but not the others.)
p4595
sa(dp4596
g1
Vdifference_update
p4597
sg3
I01
sg10
L2L
sg4
VRemove all elements of another set from this set.
p4598
sa(dp4599
g1
Vdiscard
p4600
sg3
I01
sg10
L2L
sg4
VRemove an element from a set if it is a member.\u000a\u000aIf the element is not a member, do nothing.
p4601
sa(dp4602
g1
g3992
sg3
I01
sg10
L2L
sg4
VReturn the intersection of two sets as a new set.\u000a\u000a(i.e. all elements that are in both sets.)
p4603
sa(dp4604
g1
Vintersection_update
p4605
sg3
I01
sg10
L2L
sg4
VUpdate a set with the intersection of itself and another.
p4606
sa(dp4607
g1
g3995
sg3
I01
sg10
L2L
sg4
VReturn True if two sets have a null intersection.
p4608
sa(dp4609
g1
g3998
sg3
I01
sg10
L2L
sg4
VReport whether another set contains this set.
p4610
sa(dp4611
g1
g4001
sg3
I01
sg10
L2L
sg4
VReport whether this set contains another set.
p4612
sa(dp4613
g1
g3401
sg3
I01
sg10
L2L
sg4
VRemove and return an arbitrary set element.\u000aRaises KeyError if the set is empty.
p4614
sa(dp4615
g1
g3404
sg3
I01
sg10
L2L
sg4
VRemove an element from a set; it must be a member.\u000a\u000aIf the element is not a member, raise a KeyError.
p4616
sa(dp4617
g1
g4004
sg3
I01
sg10
L2L
sg4
VReturn the symmetric difference of two sets as a new set.\u000a\u000a(i.e. all elements that are in exactly one of the sets.)
p4618
sa(dp4619
g1
Vsymmetric_difference_update
p4620
sg3
I01
sg10
L2L
sg4
VUpdate a set with the symmetric difference of itself and another.
p4621
sa(dp4622
g1
g4007
sg3
I01
sg10
L2L
sg4
VReturn the union of sets as a new set.\u000a\u000a(i.e. all elements that are in either set.)
p4623
sa(dp4624
g1
g3764
sg3
I01
sg10
L2L
sg4
VUpdate a set with the union of itself and others.
p4625
sasg4
Vset() -> new empty set object\u000aset(iterable) -> new set object\u000a\u000aBuild an unordered collection of unique elements.
p4626
sa(dp4627
g1
Vsetattr
p4628
sg3
I01
sg10
L2L
sg4
VSets the named attribute on the given object to the specified value.\u000a\u000asetattr(x, 'y', v) is equivalent to ``x.y = v''
p4629
sa(dp4630
g1
Vslice
p4631
sg3
I01
sg10
L3L
sg6
(lp4632
(dp4633
g1
g17
sg3
I01
sg10
L5L
sa(dp4634
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4635
sa(dp4636
g1
g24
sg3
I01
sg10
L5L
sa(dp4637
g1
g26
sg3
I01
sg10
L5L
sa(dp4638
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4639
sa(dp4640
g1
g31
sg3
I01
sg10
L5L
sa(dp4641
g1
g33
sg3
I01
sg10
L5L
sa(dp4642
g1
g35
sg3
I01
sg10
L5L
sa(dp4643
g1
g37
sg3
I01
sg10
L5L
sa(dp4644
g1
g39
sg3
I01
sg10
L5L
sa(dp4645
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4646
sa(dp4647
g1
g44
sg3
I01
sg10
L5L
sa(dp4648
g1
g46
sg3
I01
sg10
L5L
sa(dp4649
g1
g48
sg3
I01
sg10
L5L
sa(dp4650
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4651
sa(dp4652
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p4653
sa(dp4654
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4655
sa(dp4656
g1
g58
sg3
I01
sg10
L5L
sa(dp4657
g1
g60
sg3
I01
sg10
L5L
sa(dp4658
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4659
sa(dp4660
g1
g67
sg3
I01
sg10
L5L
sa(dp4661
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4662
sa(dp4663
g1
Vindices
p4664
sg3
I01
sg10
L2L
sg4
VS.indices(len) -> (start, stop, stride)\u000a\u000aAssuming a sequence of length len, calculate the start and stop\u000aindices, and the stride length of the extended slice described by\u000aS. Out of bounds indices are clipped in a manner consistent with the\u000ahandling of normal slices.
p4665
sa(dp4666
g1
g2639
sg3
I01
sg10
L5L
sa(dp4667
g1
g4483
sg3
I01
sg10
L5L
sa(dp4668
g1
g4485
sg3
I01
sg10
L5L
sasg4
Vslice(stop)\u000aslice(start, stop[, step])\u000a\u000aCreate a slice object.  This is used for extended slicing (e.g. a[0:10:2]).
p4669
sa(dp4670
g1
Vsorted
p4671
sg3
I01
sg10
L2L
sg4
VReturn a new list containing all items from the iterable in ascending order.\u000a\u000aA custom key function can be supplied to customize the sort order, and the\u000areverse flag can be set to request the result in descending order.
p4672
sa(dp4673
g1
Vstaticmethod
p4674
sg3
I01
sg10
L3L
sg6
(lp4675
(dp4676
g1
g17
sg3
I01
sg10
L5L
sa(dp4677
g1
g19
sg3
I01
sg10
L5L
sa(dp4678
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4679
sa(dp4680
g1
g24
sg3
I01
sg10
L5L
sa(dp4681
g1
g26
sg3
I01
sg10
L5L
sa(dp4682
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4683
sa(dp4684
g1
g3598
sg3
I01
sg10
L5L
sa(dp4685
g1
g31
sg3
I01
sg10
L5L
sa(dp4686
g1
g3601
sg3
I01
sg10
L5L
sa(dp4687
g1
g33
sg3
I01
sg10
L5L
sa(dp4688
g1
g35
sg3
I01
sg10
L5L
sa(dp4689
g1
g37
sg3
I01
sg10
L5L
sa(dp4690
g1
g39
sg3
I01
sg10
L5L
sa(dp4691
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4692
sa(dp4693
g1
g3609
sg3
I01
sg10
L5L
sa(dp4694
g1
g44
sg3
I01
sg10
L5L
sa(dp4695
g1
g46
sg3
I01
sg10
L5L
sa(dp4696
g1
g48
sg3
I01
sg10
L5L
sa(dp4697
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4698
sa(dp4699
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4700
sa(dp4701
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4702
sa(dp4703
g1
g58
sg3
I01
sg10
L5L
sa(dp4704
g1
g60
sg3
I01
sg10
L5L
sa(dp4705
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4706
sa(dp4707
g1
g67
sg3
I01
sg10
L5L
sa(dp4708
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4709
sasg4
Vstaticmethod(function) -> method\u000a\u000aConvert a function to be a static method.\u000a\u000aA static method does not receive an implicit first argument.\u000aTo declare a static method, use this idiom:\u000a\u000a     class C:\u000a         @staticmethod\u000a         def f(arg1, arg2, ...):\u000a             ...\u000a\u000aIt can be called either on the class (e.g. C.f()) or on an instance\u000a(e.g. C().f()).  The instance is ignored except for its class.\u000a\u000aStatic methods in Python are similar to those found in Java or C++.\u000aFor a more advanced concept, see the classmethod builtin.
p4710
sa(dp4711
g1
Vstr
p4712
sg3
I01
sg10
L3L
sg6
(lp4713
(dp4714
g1
g3130
sg3
I01
sg10
L5L
sa(dp4715
g1
g3267
sg3
I01
sg10
L5L
sa(dp4716
g1
g17
sg3
I01
sg10
L5L
sa(dp4717
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4718
sa(dp4719
g1
g24
sg3
I01
sg10
L5L
sa(dp4720
g1
g26
sg3
I01
sg10
L5L
sa(dp4721
g1
g28
sg3
I01
sg10
L2L
sg4
VS.__format__(format_spec) -> str\u000a\u000aReturn a formatted version of S as described by format_spec.
p4722
sa(dp4723
g1
g31
sg3
I01
sg10
L5L
sa(dp4724
g1
g33
sg3
I01
sg10
L5L
sa(dp4725
g1
g3280
sg3
I01
sg10
L5L
sa(dp4726
g1
g3156
sg3
I01
sg10
L2L
sg4
Nsa(dp4727
g1
g35
sg3
I01
sg10
L5L
sa(dp4728
g1
g37
sg3
I01
sg10
L5L
sa(dp4729
g1
g39
sg3
I01
sg10
L5L
sa(dp4730
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4731
sa(dp4732
g1
g3291
sg3
I01
sg10
L5L
sa(dp4733
g1
g44
sg3
I01
sg10
L5L
sa(dp4734
g1
g3294
sg3
I01
sg10
L5L
sa(dp4735
g1
g46
sg3
I01
sg10
L5L
sa(dp4736
g1
g3173
sg3
I01
sg10
L5L
sa(dp4737
g1
g3175
sg3
I01
sg10
L5L
sa(dp4738
g1
g48
sg3
I01
sg10
L5L
sa(dp4739
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4740
sa(dp4741
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4742
sa(dp4743
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4744
sa(dp4745
g1
g58
sg3
I01
sg10
L5L
sa(dp4746
g1
g3203
sg3
I01
sg10
L5L
sa(dp4747
g1
g3205
sg3
I01
sg10
L5L
sa(dp4748
g1
g60
sg3
I01
sg10
L5L
sa(dp4749
g1
g64
sg3
I01
sg10
L2L
sg4
VS.__sizeof__() -> size of S in memory, in bytes
p4750
sa(dp4751
g1
g67
sg3
I01
sg10
L5L
sa(dp4752
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4753
sa(dp4754
g1
g3320
sg3
I01
sg10
L2L
sg4
VS.capitalize() -> str\u000a\u000aReturn a capitalized version of S, i.e. make the first character\u000ahave upper case and the rest lower case.
p4755
sa(dp4756
g1
Vcasefold
p4757
sg3
I01
sg10
L2L
sg4
VS.casefold() -> str\u000a\u000aReturn a version of S suitable for caseless comparisons.
p4758
sa(dp4759
g1
g3323
sg3
I01
sg10
L2L
sg4
VS.center(width[, fillchar]) -> str\u000a\u000aReturn S centered in a string of length width. Padding is\u000adone using the specified fill character (default is a space)
p4760
sa(dp4761
g1
g3332
sg3
I01
sg10
L2L
sg4
VS.count(sub[, start[, end]]) -> int\u000a\u000aReturn the number of non-overlapping occurrences of substring sub in\u000astring S[start:end].  Optional arguments start and end are\u000ainterpreted as in slice notation.
p4762
sa(dp4763
g1
Vencode
p4764
sg3
I01
sg10
L2L
sg4
VS.encode(encoding='utf-8', errors='strict') -> bytes\u000a\u000aEncode S using the codec registered for encoding. Default encoding\u000ais 'utf-8'. errors may be given to set a different error\u000ahandling scheme. Default is 'strict' meaning that encoding errors raise\u000aa UnicodeEncodeError. Other possible values are 'ignore', 'replace' and\u000a'xmlcharrefreplace' as well as any other name registered with\u000acodecs.register_error that can handle UnicodeEncodeErrors.
p4765
sa(dp4766
g1
g3338
sg3
I01
sg10
L2L
sg4
VS.endswith(suffix[, start[, end]]) -> bool\u000a\u000aReturn True if S ends with the specified suffix, False otherwise.\u000aWith optional start, test S beginning at that position.\u000aWith optional end, stop comparing S at that position.\u000asuffix can also be a tuple of strings to try.
p4767
sa(dp4768
g1
g3341
sg3
I01
sg10
L2L
sg4
VS.expandtabs(tabsize=8) -> str\u000a\u000aReturn a copy of S where all tab characters are expanded using spaces.\u000aIf tabsize is not given, a tab size of 8 characters is assumed.
p4769
sa(dp4770
g1
g3347
sg3
I01
sg10
L2L
sg4
VS.find(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in S where substring sub is found,\u000asuch that sub is contained within S[start:end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p4771
sa(dp4772
g1
g3939
sg3
I01
sg10
L2L
sg4
VS.format(*args, **kwargs) -> str\u000a\u000aReturn a formatted version of S, using substitutions from args and kwargs.\u000aThe substitutions are identified by braces ('{' and '}').
p4773
sa(dp4774
g1
Vformat_map
p4775
sg3
I01
sg10
L2L
sg4
VS.format_map(mapping) -> str\u000a\u000aReturn a formatted version of S, using substitutions from mapping.\u000aThe substitutions are identified by braces ('{' and '}').
p4776
sa(dp4777
g1
g3356
sg3
I01
sg10
L2L
sg4
VS.index(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in S where substring sub is found, \u000asuch that sub is contained within S[start:end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aRaises ValueError when the substring is not found.
p4778
sa(dp4779
g1
g3362
sg3
I01
sg10
L2L
sg4
VS.isalnum() -> bool\u000a\u000aReturn True if all characters in S are alphanumeric\u000aand there is at least one character in S, False otherwise.
p4780
sa(dp4781
g1
g3365
sg3
I01
sg10
L2L
sg4
VS.isalpha() -> bool\u000a\u000aReturn True if all characters in S are alphabetic\u000aand there is at least one character in S, False otherwise.
p4782
sa(dp4783
g1
Visdecimal
p4784
sg3
I01
sg10
L2L
sg4
VS.isdecimal() -> bool\u000a\u000aReturn True if there are only decimal characters in S,\u000aFalse otherwise.
p4785
sa(dp4786
g1
g3368
sg3
I01
sg10
L2L
sg4
VS.isdigit() -> bool\u000a\u000aReturn True if all characters in S are digits\u000aand there is at least one character in S, False otherwise.
p4787
sa(dp4788
g1
Visidentifier
p4789
sg3
I01
sg10
L2L
sg4
VS.isidentifier() -> bool\u000a\u000aReturn True if S is a valid identifier according\u000ato the language definition.\u000a\u000aUse keyword.iskeyword() to test for reserved identifiers\u000asuch as "def" and "class".\u000a
p4790
sa(dp4791
g1
g3371
sg3
I01
sg10
L2L
sg4
VS.islower() -> bool\u000a\u000aReturn True if all cased characters in S are lowercase and there is\u000aat least one cased character in S, False otherwise.
p4792
sa(dp4793
g1
Visnumeric
p4794
sg3
I01
sg10
L2L
sg4
VS.isnumeric() -> bool\u000a\u000aReturn True if there are only numeric characters in S,\u000aFalse otherwise.
p4795
sa(dp4796
g1
Visprintable
p4797
sg3
I01
sg10
L2L
sg4
VS.isprintable() -> bool\u000a\u000aReturn True if all characters in S are considered\u000aprintable in repr() or S is empty, False otherwise.
p4798
sa(dp4799
g1
g3374
sg3
I01
sg10
L2L
sg4
VS.isspace() -> bool\u000a\u000aReturn True if all characters in S are whitespace\u000aand there is at least one character in S, False otherwise.
p4800
sa(dp4801
g1
g3377
sg3
I01
sg10
L2L
sg4
VS.istitle() -> bool\u000a\u000aReturn True if S is a titlecased string and there is at least one\u000acharacter in S, i.e. upper- and titlecase characters may only\u000afollow uncased characters and lowercase characters only cased ones.\u000aReturn False otherwise.
p4802
sa(dp4803
g1
g3380
sg3
I01
sg10
L2L
sg4
VS.isupper() -> bool\u000a\u000aReturn True if all cased characters in S are uppercase and there is\u000aat least one cased character in S, False otherwise.
p4804
sa(dp4805
g1
g3383
sg3
I01
sg10
L2L
sg4
VS.join(iterable) -> str\u000a\u000aReturn a string which is the concatenation of the strings in the\u000aiterable.  The separator between elements is S.
p4806
sa(dp4807
g1
g3386
sg3
I01
sg10
L2L
sg4
VS.ljust(width[, fillchar]) -> str\u000a\u000aReturn S left-justified in a Unicode string of length width. Padding is\u000adone using the specified fill character (default is a space).
p4808
sa(dp4809
g1
g3389
sg3
I01
sg10
L2L
sg4
VS.lower() -> str\u000a\u000aReturn a copy of the string S converted to lowercase.
p4810
sa(dp4811
g1
g3392
sg3
I01
sg10
L2L
sg4
VS.lstrip([chars]) -> str\u000a\u000aReturn a copy of the string S with leading whitespace removed.\u000aIf chars is given and not None, remove characters in chars instead.
p4812
sa(dp4813
g1
g3395
sg3
I01
sg10
L2L
sg4
VReturn a translation table usable for str.translate().\u000a\u000aIf there is only one argument, it must be a dictionary mapping Unicode\u000aordinals (integers) or characters to Unicode ordinals, strings or None.\u000aCharacter keys will be then converted to ordinals.\u000aIf there are two arguments, they must be strings of equal length, and\u000ain the resulting dictionary, each character in x will be mapped to the\u000acharacter at the same position in y. If there is a third argument, it\u000amust be a string, whose characters will be mapped to None in the result.
p4814
sa(dp4815
g1
g3398
sg3
I01
sg10
L2L
sg4
VS.partition(sep) -> (head, sep, tail)\u000a\u000aSearch for the separator sep in S, and return the part before it,\u000athe separator itself, and the part after it.  If the separator is not\u000afound, return S and two empty strings.
p4816
sa(dp4817
g1
g3407
sg3
I01
sg10
L2L
sg4
VS.replace(old, new[, count]) -> str\u000a\u000aReturn a copy of S with all occurrences of substring\u000aold replaced by new.  If the optional argument count is\u000agiven, only the first count occurrences are replaced.
p4818
sa(dp4819
g1
g3413
sg3
I01
sg10
L2L
sg4
VS.rfind(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in S where substring sub is found,\u000asuch that sub is contained within S[start:end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p4820
sa(dp4821
g1
g3416
sg3
I01
sg10
L2L
sg4
VS.rindex(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in S where substring sub is found,\u000asuch that sub is contained within S[start:end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aRaises ValueError when the substring is not found.
p4822
sa(dp4823
g1
g3419
sg3
I01
sg10
L2L
sg4
VS.rjust(width[, fillchar]) -> str\u000a\u000aReturn S right-justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space).
p4824
sa(dp4825
g1
g3422
sg3
I01
sg10
L2L
sg4
VS.rpartition(sep) -> (head, sep, tail)\u000a\u000aSearch for the separator sep in S, starting at the end of S, and return\u000athe part before it, the separator itself, and the part after it.  If the\u000aseparator is not found, return two empty strings and S.
p4826
sa(dp4827
g1
g3425
sg3
I01
sg10
L2L
sg4
VS.rsplit(sep=None, maxsplit=-1) -> list of strings\u000a\u000aReturn a list of the words in S, using sep as the\u000adelimiter string, starting at the end of the string and\u000aworking to the front.  If maxsplit is given, at most maxsplit\u000asplits are done. If sep is not specified, any whitespace string\u000ais a separator.
p4828
sa(dp4829
g1
g3428
sg3
I01
sg10
L2L
sg4
VS.rstrip([chars]) -> str\u000a\u000aReturn a copy of the string S with trailing whitespace removed.\u000aIf chars is given and not None, remove characters in chars instead.
p4830
sa(dp4831
g1
g3431
sg3
I01
sg10
L2L
sg4
VS.split(sep=None, maxsplit=-1) -> list of strings\u000a\u000aReturn a list of the words in S, using sep as the\u000adelimiter string.  If maxsplit is given, at most maxsplit\u000asplits are done. If sep is not specified or is None, any\u000awhitespace string is a separator and empty strings are\u000aremoved from the result.
p4832
sa(dp4833
g1
g3434
sg3
I01
sg10
L2L
sg4
VS.splitlines([keepends]) -> list of strings\u000a\u000aReturn a list of the lines in S, breaking at line boundaries.\u000aLine breaks are not included in the resulting list unless keepends\u000ais given and true.
p4834
sa(dp4835
g1
g3437
sg3
I01
sg10
L2L
sg4
VS.startswith(prefix[, start[, end]]) -> bool\u000a\u000aReturn True if S starts with the specified prefix, False otherwise.\u000aWith optional start, test S beginning at that position.\u000aWith optional end, stop comparing S at that position.\u000aprefix can also be a tuple of strings to try.
p4836
sa(dp4837
g1
g3440
sg3
I01
sg10
L2L
sg4
VS.strip([chars]) -> str\u000a\u000aReturn a copy of the string S with leading and trailing\u000awhitespace removed.\u000aIf chars is given and not None, remove characters in chars instead.
p4838
sa(dp4839
g1
g3443
sg3
I01
sg10
L2L
sg4
VS.swapcase() -> str\u000a\u000aReturn a copy of S with uppercase characters converted to lowercase\u000aand vice versa.
p4840
sa(dp4841
g1
g3446
sg3
I01
sg10
L2L
sg4
VS.title() -> str\u000a\u000aReturn a titlecased version of S, i.e. words start with title case\u000acharacters, all remaining cased characters have lower case.
p4842
sa(dp4843
g1
g3449
sg3
I01
sg10
L2L
sg4
VS.translate(table) -> str\u000a\u000aReturn a copy of the string S in which each character has been mapped\u000athrough the given translation table. The table must implement\u000alookup/indexing via __getitem__, for instance a dictionary or list,\u000amapping Unicode ordinals to Unicode ordinals, strings, or None. If\u000athis operation raises LookupError, the character is left untouched.\u000aCharacters mapped to None are deleted.
p4844
sa(dp4845
g1
g3452
sg3
I01
sg10
L2L
sg4
VS.upper() -> str\u000a\u000aReturn a copy of S converted to uppercase.
p4846
sa(dp4847
g1
g3455
sg3
I01
sg10
L2L
sg4
VS.zfill(width) -> str\u000a\u000aPad a numeric string S with zeros on the left, to fill a field\u000aof the specified width. The string S is never truncated.
p4848
sasg4
Vstr(object='') -> str\u000astr(bytes_or_buffer[, encoding[, errors]]) -> str\u000a\u000aCreate a new string object from the given object. If encoding or\u000aerrors is specified, then the object must expose a data buffer\u000athat will be decoded using the given encoding and error handler.\u000aOtherwise, returns the result of object.__str__() (if defined)\u000aor repr(object).\u000aencoding defaults to sys.getdefaultencoding().\u000aerrors defaults to 'strict'.
p4849
sa(dp4850
g1
Vsum
p4851
sg3
I01
sg10
L2L
sg4
VReturn the sum of a 'start' value (default: 0) plus an iterable of numbers\u000a\u000aWhen the iterable is empty, return the start value.\u000aThis function is intended specifically for use with numeric values and may\u000areject non-numeric types.
p4852
sa(dp4853
g1
Vsuper
p4854
sg3
I01
sg10
L3L
sg6
(lp4855
(dp4856
g1
g17
sg3
I01
sg10
L5L
sa(dp4857
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4858
sa(dp4859
g1
g24
sg3
I01
sg10
L5L
sa(dp4860
g1
g26
sg3
I01
sg10
L5L
sa(dp4861
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4862
sa(dp4863
g1
g31
sg3
I01
sg10
L5L
sa(dp4864
g1
g3601
sg3
I01
sg10
L5L
sa(dp4865
g1
g33
sg3
I01
sg10
L5L
sa(dp4866
g1
g35
sg3
I01
sg10
L5L
sa(dp4867
g1
g37
sg3
I01
sg10
L5L
sa(dp4868
g1
g39
sg3
I01
sg10
L5L
sa(dp4869
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4870
sa(dp4871
g1
g44
sg3
I01
sg10
L5L
sa(dp4872
g1
g46
sg3
I01
sg10
L5L
sa(dp4873
g1
g48
sg3
I01
sg10
L5L
sa(dp4874
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4875
sa(dp4876
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4877
sa(dp4878
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4879
sa(dp4880
g1
g58
sg3
I01
sg10
L5L
sa(dp4881
g1
V__self__
p4882
sg3
I01
sg10
L5L
sa(dp4883
g1
V__self_class__
p4884
sg3
I01
sg10
L5L
sa(dp4885
g1
g60
sg3
I01
sg10
L5L
sa(dp4886
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4887
sa(dp4888
g1
g67
sg3
I01
sg10
L5L
sa(dp4889
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4890
sa(dp4891
g1
V__thisclass__
p4892
sg3
I01
sg10
L5L
sasg4
Vsuper() -> same as super(__class__, <first argument>)\u000asuper(type) -> unbound super object\u000asuper(type, obj) -> bound super object; requires isinstance(obj, type)\u000asuper(type, type2) -> bound super object; requires issubclass(type2, type)\u000aTypical use to call a cooperative superclass method:\u000aclass C(B):\u000a    def meth(self, arg):\u000a        super().meth(arg)\u000aThis works for class methods too:\u000aclass C(B):\u000a    @classmethod\u000a    def cmeth(cls, arg):\u000a        super().cmeth(arg)\u000a
p4893
sa(dp4894
g1
Vtuple
p4895
sg3
I01
sg10
L3L
sg6
(lp4896
(dp4897
g1
g3130
sg3
I01
sg10
L5L
sa(dp4898
g1
g3267
sg3
I01
sg10
L5L
sa(dp4899
g1
g17
sg3
I01
sg10
L5L
sa(dp4900
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p4901
sa(dp4902
g1
g24
sg3
I01
sg10
L5L
sa(dp4903
g1
g26
sg3
I01
sg10
L5L
sa(dp4904
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4905
sa(dp4906
g1
g31
sg3
I01
sg10
L5L
sa(dp4907
g1
g33
sg3
I01
sg10
L5L
sa(dp4908
g1
g3280
sg3
I01
sg10
L5L
sa(dp4909
g1
g3156
sg3
I01
sg10
L2L
sg4
Nsa(dp4910
g1
g35
sg3
I01
sg10
L5L
sa(dp4911
g1
g37
sg3
I01
sg10
L5L
sa(dp4912
g1
g39
sg3
I01
sg10
L5L
sa(dp4913
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4914
sa(dp4915
g1
g3291
sg3
I01
sg10
L5L
sa(dp4916
g1
g44
sg3
I01
sg10
L5L
sa(dp4917
g1
g3294
sg3
I01
sg10
L5L
sa(dp4918
g1
g46
sg3
I01
sg10
L5L
sa(dp4919
g1
g3175
sg3
I01
sg10
L5L
sa(dp4920
g1
g48
sg3
I01
sg10
L5L
sa(dp4921
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4922
sa(dp4923
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4924
sa(dp4925
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4926
sa(dp4927
g1
g58
sg3
I01
sg10
L5L
sa(dp4928
g1
g3205
sg3
I01
sg10
L5L
sa(dp4929
g1
g60
sg3
I01
sg10
L5L
sa(dp4930
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4931
sa(dp4932
g1
g67
sg3
I01
sg10
L5L
sa(dp4933
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4934
sa(dp4935
g1
g3332
sg3
I01
sg10
L2L
sg4
VT.count(value) -> integer -- return number of occurrences of value
p4936
sa(dp4937
g1
g3356
sg3
I01
sg10
L2L
sg4
VT.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p4938
sasg4
Vtuple() -> empty tuple\u000atuple(iterable) -> tuple initialized from iterable's items\u000a\u000aIf the argument is a tuple, the return value is the same object.
p4939
sa(dp4940
g1
g10
sg3
I01
sg10
L3L
sg6
(lp4941
(dp4942
g1
V__bases__
p4943
sg3
I01
sg10
L5L
sa(dp4944
g1
V__basicsize__
p4945
sg3
I01
sg10
L5L
sa(dp4946
g1
V__call__
p4947
sg3
I01
sg10
L5L
sa(dp4948
g1
g17
sg3
I01
sg10
L5L
sa(dp4949
g1
g19
sg3
I01
sg10
L5L
sa(dp4950
g1
V__dictoffset__
p4951
sg3
I01
sg10
L5L
sa(dp4952
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000aspecialized __dir__ implementation for types
p4953
sa(dp4954
g1
g24
sg3
I01
sg10
L5L
sa(dp4955
g1
g26
sg3
I01
sg10
L5L
sa(dp4956
g1
V__flags__
p4957
sg3
I01
sg10
L5L
sa(dp4958
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p4959
sa(dp4960
g1
g31
sg3
I01
sg10
L5L
sa(dp4961
g1
g33
sg3
I01
sg10
L5L
sa(dp4962
g1
g35
sg3
I01
sg10
L5L
sa(dp4963
g1
g37
sg3
I01
sg10
L5L
sa(dp4964
g1
g39
sg3
I01
sg10
L5L
sa(dp4965
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p4966
sa(dp4967
g1
V__instancecheck__
p4968
sg3
I01
sg10
L2L
sg4
V__instancecheck__() -> bool\u000acheck if an object is an instance
p4969
sa(dp4970
g1
V__itemsize__
p4971
sg3
I01
sg10
L5L
sa(dp4972
g1
g44
sg3
I01
sg10
L5L
sa(dp4973
g1
g46
sg3
I01
sg10
L5L
sa(dp4974
g1
g3067
sg3
I01
sg10
L5L
sa(dp4975
g1
V__mro__
p4976
sg3
I01
sg10
L5L
sa(dp4977
g1
g3104
sg3
I01
sg10
L5L
sa(dp4978
g1
g48
sg3
I01
sg10
L5L
sa(dp4979
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p4980
sa(dp4981
g1
V__prepare__
p4982
sg3
I01
sg10
L2L
sg4
V__prepare__() -> dict\u000aused to create the namespace for the class statement
p4983
sa(dp4984
g1
V__qualname__
p4985
sg3
I01
sg10
L5L
sa(dp4986
g1
g53
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4987
sa(dp4988
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p4989
sa(dp4990
g1
g58
sg3
I01
sg10
L5L
sa(dp4991
g1
g60
sg3
I01
sg10
L5L
sa(dp4992
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000areturn memory consumption of the type object
p4993
sa(dp4994
g1
g67
sg3
I01
sg10
L5L
sa(dp4995
g1
V__subclasscheck__
p4996
sg3
I01
sg10
L2L
sg4
V__subclasscheck__() -> bool\u000acheck if a class is a subclass
p4997
sa(dp4998
g1
V__subclasses__
p4999
sg3
I01
sg10
L2L
sg4
V__subclasses__() -> list of immediate subclasses
p5000
sa(dp5001
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p5002
sa(dp5003
g1
V__text_signature__
p5004
sg3
I01
sg10
L5L
sa(dp5005
g1
V__weakrefoffset__
p5006
sg3
I01
sg10
L5L
sa(dp5007
g1
Vmro
p5008
sg3
I01
sg10
L2L
sg4
Vmro() -> list\u000areturn a type's method resolution order
p5009
sasg4
Vtype(object_or_name, bases, dict)\u000atype(object) -> the object's type\u000atype(name, bases, dict) -> a new type
p5010
sa(dp5011
g1
Vvars
p5012
sg3
I01
sg10
L2L
sg4
Vvars([object]) -> dictionary\u000a\u000aWithout arguments, equivalent to locals().\u000aWith an argument, equivalent to object.__dict__.
p5013
sa(dp5014
g1
Vzip
p5015
sg3
I01
sg10
L3L
sg6
(lp5016
(dp5017
g1
g17
sg3
I01
sg10
L5L
sa(dp5018
g1
g21
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p5019
sa(dp5020
g1
g24
sg3
I01
sg10
L5L
sa(dp5021
g1
g26
sg3
I01
sg10
L5L
sa(dp5022
g1
g28
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p5023
sa(dp5024
g1
g31
sg3
I01
sg10
L5L
sa(dp5025
g1
g33
sg3
I01
sg10
L5L
sa(dp5026
g1
g35
sg3
I01
sg10
L5L
sa(dp5027
g1
g37
sg3
I01
sg10
L5L
sa(dp5028
g1
g39
sg3
I01
sg10
L5L
sa(dp5029
g1
g41
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p5030
sa(dp5031
g1
g3291
sg3
I01
sg10
L5L
sa(dp5032
g1
g44
sg3
I01
sg10
L5L
sa(dp5033
g1
g46
sg3
I01
sg10
L5L
sa(dp5034
g1
g48
sg3
I01
sg10
L5L
sa(dp5035
g1
g50
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p5036
sa(dp5037
g1
g3800
sg3
I01
sg10
L5L
sa(dp5038
g1
g53
sg3
I01
sg10
L2L
sg4
VReturn state information for pickling.
p5039
sa(dp5040
g1
g55
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p5041
sa(dp5042
g1
g58
sg3
I01
sg10
L5L
sa(dp5043
g1
g60
sg3
I01
sg10
L5L
sa(dp5044
g1
g64
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p5045
sa(dp5046
g1
g67
sg3
I01
sg10
L5L
sa(dp5047
g1
g69
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p5048
sasg4
Vzip(iter1 [,iter2 [...]]) --> zip object\u000a\u000aReturn a zip object whose .__next__() method returns a tuple where\u000athe i-th element comes from the i-th iterable argument.  The .__next__()\u000amethod continues until the shortest iterable in the argument sequence\u000ais exhausted and then it raises StopIteration.
p5049
sasg10
L1L
s.