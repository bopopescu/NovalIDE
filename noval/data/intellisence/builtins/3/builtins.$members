(dp0
Vchilds
p1
(lp2
(dp3
g1
(lp4
(dp5
Vis_builtin
p6
I01
sVname
p7
V__cause__
p8
sVtype
p9
L5L
sa(dp10
g6
I01
sg7
V__context__
p11
sg9
L5L
sa(dp12
g6
I01
sg7
V__delattr__
p13
sg9
L5L
sa(dp14
g6
I01
sg7
V__dict__
p15
sg9
L5L
sa(dp16
g6
I01
sg7
V__dir__
p17
sg9
L2L
sVdoc
p18
V__dir__() -> list\u000adefault dir() implementation
p19
sa(dp20
g6
I01
sg7
V__doc__
p21
sg9
L5L
sa(dp22
g6
I01
sg7
V__eq__
p23
sg9
L5L
sa(dp24
g6
I01
sg7
V__format__
p25
sg9
L2L
sg18
Vdefault object formatter
p26
sa(dp27
g6
I01
sg7
V__ge__
p28
sg9
L5L
sa(dp29
g6
I01
sg7
V__getattribute__
p30
sg9
L5L
sa(dp31
g6
I01
sg7
V__gt__
p32
sg9
L5L
sa(dp33
g6
I01
sg7
V__hash__
p34
sg9
L5L
sa(dp35
g6
I01
sg7
V__init__
p36
sg9
L5L
sa(dp37
g6
I01
sg7
V__le__
p38
sg9
L5L
sa(dp39
g6
I01
sg7
V__lt__
p40
sg9
L5L
sa(dp41
g6
I01
sg7
V__ne__
p42
sg9
L5L
sa(dp43
g6
I01
sg7
V__new__
p44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p45
sa(dp46
g6
I01
sg7
V__reduce__
p47
sg9
L2L
sg18
Nsa(dp48
g6
I01
sg7
V__reduce_ex__
p49
sg9
L2L
sg18
Vhelper for pickle
p50
sa(dp51
g6
I01
sg7
V__repr__
p52
sg9
L5L
sa(dp53
g6
I01
sg7
V__setattr__
p54
sg9
L5L
sa(dp55
g6
I01
sg7
V__setstate__
p56
sg9
L2L
sg18
Nsa(dp57
g6
I01
sg7
V__sizeof__
p58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p59
sa(dp60
g6
I01
sg7
V__str__
p61
sg9
L5L
sa(dp62
g6
I01
sg7
V__subclasshook__
p63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p64
sa(dp65
g6
I01
sg7
V__suppress_context__
p66
sg9
L5L
sa(dp67
g6
I01
sg7
V__traceback__
p68
sg9
L5L
sa(dp69
g6
I01
sg7
Vargs
p70
sg9
L5L
sa(dp71
g6
I01
sg7
Vwith_traceback
p72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p73
sasg6
I01
sg7
VArithmeticError
p74
sg9
L3L
sg18
VBase class for arithmetic errors.
p75
sa(dp76
g1
(lp77
(dp78
g6
I01
sg7
g8
sg9
L5L
sa(dp79
g6
I01
sg7
g11
sg9
L5L
sa(dp80
g6
I01
sg7
g13
sg9
L5L
sa(dp81
g6
I01
sg7
g15
sg9
L5L
sa(dp82
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p83
sa(dp84
g6
I01
sg7
g21
sg9
L5L
sa(dp85
g6
I01
sg7
g23
sg9
L5L
sa(dp86
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p87
sa(dp88
g6
I01
sg7
g28
sg9
L5L
sa(dp89
g6
I01
sg7
g30
sg9
L5L
sa(dp90
g6
I01
sg7
g32
sg9
L5L
sa(dp91
g6
I01
sg7
g34
sg9
L5L
sa(dp92
g6
I01
sg7
g36
sg9
L5L
sa(dp93
g6
I01
sg7
g38
sg9
L5L
sa(dp94
g6
I01
sg7
g40
sg9
L5L
sa(dp95
g6
I01
sg7
g42
sg9
L5L
sa(dp96
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p97
sa(dp98
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp99
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p100
sa(dp101
g6
I01
sg7
g52
sg9
L5L
sa(dp102
g6
I01
sg7
g54
sg9
L5L
sa(dp103
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp104
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p105
sa(dp106
g6
I01
sg7
g61
sg9
L5L
sa(dp107
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p108
sa(dp109
g6
I01
sg7
g66
sg9
L5L
sa(dp110
g6
I01
sg7
g68
sg9
L5L
sa(dp111
g6
I01
sg7
g70
sg9
L5L
sa(dp112
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p113
sasg6
I01
sg7
VAssertionError
p114
sg9
L3L
sg18
VAssertion failed.
p115
sa(dp116
g1
(lp117
(dp118
g6
I01
sg7
g8
sg9
L5L
sa(dp119
g6
I01
sg7
g11
sg9
L5L
sa(dp120
g6
I01
sg7
g13
sg9
L5L
sa(dp121
g6
I01
sg7
g15
sg9
L5L
sa(dp122
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p123
sa(dp124
g6
I01
sg7
g21
sg9
L5L
sa(dp125
g6
I01
sg7
g23
sg9
L5L
sa(dp126
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p127
sa(dp128
g6
I01
sg7
g28
sg9
L5L
sa(dp129
g6
I01
sg7
g30
sg9
L5L
sa(dp130
g6
I01
sg7
g32
sg9
L5L
sa(dp131
g6
I01
sg7
g34
sg9
L5L
sa(dp132
g6
I01
sg7
g36
sg9
L5L
sa(dp133
g6
I01
sg7
g38
sg9
L5L
sa(dp134
g6
I01
sg7
g40
sg9
L5L
sa(dp135
g6
I01
sg7
g42
sg9
L5L
sa(dp136
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p137
sa(dp138
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp139
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p140
sa(dp141
g6
I01
sg7
g52
sg9
L5L
sa(dp142
g6
I01
sg7
g54
sg9
L5L
sa(dp143
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp144
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p145
sa(dp146
g6
I01
sg7
g61
sg9
L5L
sa(dp147
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p148
sa(dp149
g6
I01
sg7
g66
sg9
L5L
sa(dp150
g6
I01
sg7
g68
sg9
L5L
sa(dp151
g6
I01
sg7
g70
sg9
L5L
sa(dp152
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p153
sasg6
I01
sg7
VAttributeError
p154
sg9
L3L
sg18
VAttribute not found.
p155
sa(dp156
g1
(lp157
(dp158
g6
I01
sg7
g8
sg9
L5L
sa(dp159
g6
I01
sg7
g11
sg9
L5L
sa(dp160
g6
I01
sg7
g13
sg9
L5L
sa(dp161
g6
I01
sg7
g15
sg9
L5L
sa(dp162
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p163
sa(dp164
g6
I01
sg7
g21
sg9
L5L
sa(dp165
g6
I01
sg7
g23
sg9
L5L
sa(dp166
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p167
sa(dp168
g6
I01
sg7
g28
sg9
L5L
sa(dp169
g6
I01
sg7
g30
sg9
L5L
sa(dp170
g6
I01
sg7
g32
sg9
L5L
sa(dp171
g6
I01
sg7
g34
sg9
L5L
sa(dp172
g6
I01
sg7
g36
sg9
L5L
sa(dp173
g6
I01
sg7
g38
sg9
L5L
sa(dp174
g6
I01
sg7
g40
sg9
L5L
sa(dp175
g6
I01
sg7
g42
sg9
L5L
sa(dp176
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p177
sa(dp178
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp179
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p180
sa(dp181
g6
I01
sg7
g52
sg9
L5L
sa(dp182
g6
I01
sg7
g54
sg9
L5L
sa(dp183
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp184
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p185
sa(dp186
g6
I01
sg7
g61
sg9
L5L
sa(dp187
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p188
sa(dp189
g6
I01
sg7
g66
sg9
L5L
sa(dp190
g6
I01
sg7
g68
sg9
L5L
sa(dp191
g6
I01
sg7
g70
sg9
L5L
sa(dp192
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p193
sasg6
I01
sg7
VBaseException
p194
sg9
L3L
sg18
VCommon base class for all exceptions
p195
sa(dp196
g1
(lp197
(dp198
g6
I01
sg7
g8
sg9
L5L
sa(dp199
g6
I01
sg7
g11
sg9
L5L
sa(dp200
g6
I01
sg7
g13
sg9
L5L
sa(dp201
g6
I01
sg7
g15
sg9
L5L
sa(dp202
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p203
sa(dp204
g6
I01
sg7
g21
sg9
L5L
sa(dp205
g6
I01
sg7
g23
sg9
L5L
sa(dp206
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p207
sa(dp208
g6
I01
sg7
g28
sg9
L5L
sa(dp209
g6
I01
sg7
g30
sg9
L5L
sa(dp210
g6
I01
sg7
g32
sg9
L5L
sa(dp211
g6
I01
sg7
g34
sg9
L5L
sa(dp212
g6
I01
sg7
g36
sg9
L5L
sa(dp213
g6
I01
sg7
g38
sg9
L5L
sa(dp214
g6
I01
sg7
g40
sg9
L5L
sa(dp215
g6
I01
sg7
g42
sg9
L5L
sa(dp216
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p217
sa(dp218
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp219
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p220
sa(dp221
g6
I01
sg7
g52
sg9
L5L
sa(dp222
g6
I01
sg7
g54
sg9
L5L
sa(dp223
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp224
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p225
sa(dp226
g6
I01
sg7
g61
sg9
L5L
sa(dp227
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p228
sa(dp229
g6
I01
sg7
g66
sg9
L5L
sa(dp230
g6
I01
sg7
g68
sg9
L5L
sa(dp231
g6
I01
sg7
g70
sg9
L5L
sa(dp232
g6
I01
sg7
Vcharacters_written
p233
sg9
L5L
sa(dp234
g6
I01
sg7
Verrno
p235
sg9
L5L
sa(dp236
g6
I01
sg7
Vfilename
p237
sg9
L5L
sa(dp238
g6
I01
sg7
Vfilename2
p239
sg9
L5L
sa(dp240
g6
I01
sg7
Vstrerror
p241
sg9
L5L
sa(dp242
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p243
sasg6
I01
sg7
VBlockingIOError
p244
sg9
L3L
sg18
VI/O operation would block.
p245
sa(dp246
g1
(lp247
(dp248
g6
I01
sg7
g8
sg9
L5L
sa(dp249
g6
I01
sg7
g11
sg9
L5L
sa(dp250
g6
I01
sg7
g13
sg9
L5L
sa(dp251
g6
I01
sg7
g15
sg9
L5L
sa(dp252
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p253
sa(dp254
g6
I01
sg7
g21
sg9
L5L
sa(dp255
g6
I01
sg7
g23
sg9
L5L
sa(dp256
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p257
sa(dp258
g6
I01
sg7
g28
sg9
L5L
sa(dp259
g6
I01
sg7
g30
sg9
L5L
sa(dp260
g6
I01
sg7
g32
sg9
L5L
sa(dp261
g6
I01
sg7
g34
sg9
L5L
sa(dp262
g6
I01
sg7
g36
sg9
L5L
sa(dp263
g6
I01
sg7
g38
sg9
L5L
sa(dp264
g6
I01
sg7
g40
sg9
L5L
sa(dp265
g6
I01
sg7
g42
sg9
L5L
sa(dp266
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p267
sa(dp268
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp269
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p270
sa(dp271
g6
I01
sg7
g52
sg9
L5L
sa(dp272
g6
I01
sg7
g54
sg9
L5L
sa(dp273
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp274
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p275
sa(dp276
g6
I01
sg7
g61
sg9
L5L
sa(dp277
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p278
sa(dp279
g6
I01
sg7
g66
sg9
L5L
sa(dp280
g6
I01
sg7
g68
sg9
L5L
sa(dp281
g6
I01
sg7
g70
sg9
L5L
sa(dp282
g6
I01
sg7
g233
sg9
L5L
sa(dp283
g6
I01
sg7
g235
sg9
L5L
sa(dp284
g6
I01
sg7
g237
sg9
L5L
sa(dp285
g6
I01
sg7
g239
sg9
L5L
sa(dp286
g6
I01
sg7
g241
sg9
L5L
sa(dp287
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p288
sasg6
I01
sg7
VBrokenPipeError
p289
sg9
L3L
sg18
VBroken pipe.
p290
sa(dp291
g1
(lp292
(dp293
g6
I01
sg7
g8
sg9
L5L
sa(dp294
g6
I01
sg7
g11
sg9
L5L
sa(dp295
g6
I01
sg7
g13
sg9
L5L
sa(dp296
g6
I01
sg7
g15
sg9
L5L
sa(dp297
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p298
sa(dp299
g6
I01
sg7
g21
sg9
L5L
sa(dp300
g6
I01
sg7
g23
sg9
L5L
sa(dp301
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p302
sa(dp303
g6
I01
sg7
g28
sg9
L5L
sa(dp304
g6
I01
sg7
g30
sg9
L5L
sa(dp305
g6
I01
sg7
g32
sg9
L5L
sa(dp306
g6
I01
sg7
g34
sg9
L5L
sa(dp307
g6
I01
sg7
g36
sg9
L5L
sa(dp308
g6
I01
sg7
g38
sg9
L5L
sa(dp309
g6
I01
sg7
g40
sg9
L5L
sa(dp310
g6
I01
sg7
g42
sg9
L5L
sa(dp311
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p312
sa(dp313
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp314
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p315
sa(dp316
g6
I01
sg7
g52
sg9
L5L
sa(dp317
g6
I01
sg7
g54
sg9
L5L
sa(dp318
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp319
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p320
sa(dp321
g6
I01
sg7
g61
sg9
L5L
sa(dp322
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p323
sa(dp324
g6
I01
sg7
g66
sg9
L5L
sa(dp325
g6
I01
sg7
g68
sg9
L5L
sa(dp326
g6
I01
sg7
g70
sg9
L5L
sa(dp327
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p328
sasg6
I01
sg7
VBufferError
p329
sg9
L3L
sg18
VBuffer error.
p330
sa(dp331
g1
(lp332
(dp333
g6
I01
sg7
g8
sg9
L5L
sa(dp334
g6
I01
sg7
g11
sg9
L5L
sa(dp335
g6
I01
sg7
g13
sg9
L5L
sa(dp336
g6
I01
sg7
g15
sg9
L5L
sa(dp337
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p338
sa(dp339
g6
I01
sg7
g21
sg9
L5L
sa(dp340
g6
I01
sg7
g23
sg9
L5L
sa(dp341
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p342
sa(dp343
g6
I01
sg7
g28
sg9
L5L
sa(dp344
g6
I01
sg7
g30
sg9
L5L
sa(dp345
g6
I01
sg7
g32
sg9
L5L
sa(dp346
g6
I01
sg7
g34
sg9
L5L
sa(dp347
g6
I01
sg7
g36
sg9
L5L
sa(dp348
g6
I01
sg7
g38
sg9
L5L
sa(dp349
g6
I01
sg7
g40
sg9
L5L
sa(dp350
g6
I01
sg7
g42
sg9
L5L
sa(dp351
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p352
sa(dp353
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp354
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p355
sa(dp356
g6
I01
sg7
g52
sg9
L5L
sa(dp357
g6
I01
sg7
g54
sg9
L5L
sa(dp358
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp359
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p360
sa(dp361
g6
I01
sg7
g61
sg9
L5L
sa(dp362
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p363
sa(dp364
g6
I01
sg7
g66
sg9
L5L
sa(dp365
g6
I01
sg7
g68
sg9
L5L
sa(dp366
g6
I01
sg7
g70
sg9
L5L
sa(dp367
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p368
sasg6
I01
sg7
VBytesWarning
p369
sg9
L3L
sg18
VBase class for warnings about bytes and buffer related problems, mostly\u000arelated to conversion from str or comparing to str.
p370
sa(dp371
g1
(lp372
(dp373
g6
I01
sg7
g8
sg9
L5L
sa(dp374
g6
I01
sg7
g11
sg9
L5L
sa(dp375
g6
I01
sg7
g13
sg9
L5L
sa(dp376
g6
I01
sg7
g15
sg9
L5L
sa(dp377
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p378
sa(dp379
g6
I01
sg7
g21
sg9
L5L
sa(dp380
g6
I01
sg7
g23
sg9
L5L
sa(dp381
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p382
sa(dp383
g6
I01
sg7
g28
sg9
L5L
sa(dp384
g6
I01
sg7
g30
sg9
L5L
sa(dp385
g6
I01
sg7
g32
sg9
L5L
sa(dp386
g6
I01
sg7
g34
sg9
L5L
sa(dp387
g6
I01
sg7
g36
sg9
L5L
sa(dp388
g6
I01
sg7
g38
sg9
L5L
sa(dp389
g6
I01
sg7
g40
sg9
L5L
sa(dp390
g6
I01
sg7
g42
sg9
L5L
sa(dp391
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p392
sa(dp393
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp394
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p395
sa(dp396
g6
I01
sg7
g52
sg9
L5L
sa(dp397
g6
I01
sg7
g54
sg9
L5L
sa(dp398
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp399
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p400
sa(dp401
g6
I01
sg7
g61
sg9
L5L
sa(dp402
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p403
sa(dp404
g6
I01
sg7
g66
sg9
L5L
sa(dp405
g6
I01
sg7
g68
sg9
L5L
sa(dp406
g6
I01
sg7
g70
sg9
L5L
sa(dp407
g6
I01
sg7
g233
sg9
L5L
sa(dp408
g6
I01
sg7
g235
sg9
L5L
sa(dp409
g6
I01
sg7
g237
sg9
L5L
sa(dp410
g6
I01
sg7
g239
sg9
L5L
sa(dp411
g6
I01
sg7
g241
sg9
L5L
sa(dp412
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p413
sasg6
I01
sg7
VChildProcessError
p414
sg9
L3L
sg18
VChild process error.
p415
sa(dp416
g1
(lp417
(dp418
g6
I01
sg7
g8
sg9
L5L
sa(dp419
g6
I01
sg7
g11
sg9
L5L
sa(dp420
g6
I01
sg7
g13
sg9
L5L
sa(dp421
g6
I01
sg7
g15
sg9
L5L
sa(dp422
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p423
sa(dp424
g6
I01
sg7
g21
sg9
L5L
sa(dp425
g6
I01
sg7
g23
sg9
L5L
sa(dp426
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p427
sa(dp428
g6
I01
sg7
g28
sg9
L5L
sa(dp429
g6
I01
sg7
g30
sg9
L5L
sa(dp430
g6
I01
sg7
g32
sg9
L5L
sa(dp431
g6
I01
sg7
g34
sg9
L5L
sa(dp432
g6
I01
sg7
g36
sg9
L5L
sa(dp433
g6
I01
sg7
g38
sg9
L5L
sa(dp434
g6
I01
sg7
g40
sg9
L5L
sa(dp435
g6
I01
sg7
g42
sg9
L5L
sa(dp436
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p437
sa(dp438
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp439
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p440
sa(dp441
g6
I01
sg7
g52
sg9
L5L
sa(dp442
g6
I01
sg7
g54
sg9
L5L
sa(dp443
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp444
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p445
sa(dp446
g6
I01
sg7
g61
sg9
L5L
sa(dp447
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p448
sa(dp449
g6
I01
sg7
g66
sg9
L5L
sa(dp450
g6
I01
sg7
g68
sg9
L5L
sa(dp451
g6
I01
sg7
g70
sg9
L5L
sa(dp452
g6
I01
sg7
g233
sg9
L5L
sa(dp453
g6
I01
sg7
g235
sg9
L5L
sa(dp454
g6
I01
sg7
g237
sg9
L5L
sa(dp455
g6
I01
sg7
g239
sg9
L5L
sa(dp456
g6
I01
sg7
g241
sg9
L5L
sa(dp457
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p458
sasg6
I01
sg7
VConnectionAbortedError
p459
sg9
L3L
sg18
VConnection aborted.
p460
sa(dp461
g1
(lp462
(dp463
g6
I01
sg7
g8
sg9
L5L
sa(dp464
g6
I01
sg7
g11
sg9
L5L
sa(dp465
g6
I01
sg7
g13
sg9
L5L
sa(dp466
g6
I01
sg7
g15
sg9
L5L
sa(dp467
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p468
sa(dp469
g6
I01
sg7
g21
sg9
L5L
sa(dp470
g6
I01
sg7
g23
sg9
L5L
sa(dp471
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p472
sa(dp473
g6
I01
sg7
g28
sg9
L5L
sa(dp474
g6
I01
sg7
g30
sg9
L5L
sa(dp475
g6
I01
sg7
g32
sg9
L5L
sa(dp476
g6
I01
sg7
g34
sg9
L5L
sa(dp477
g6
I01
sg7
g36
sg9
L5L
sa(dp478
g6
I01
sg7
g38
sg9
L5L
sa(dp479
g6
I01
sg7
g40
sg9
L5L
sa(dp480
g6
I01
sg7
g42
sg9
L5L
sa(dp481
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p482
sa(dp483
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp484
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p485
sa(dp486
g6
I01
sg7
g52
sg9
L5L
sa(dp487
g6
I01
sg7
g54
sg9
L5L
sa(dp488
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp489
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p490
sa(dp491
g6
I01
sg7
g61
sg9
L5L
sa(dp492
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p493
sa(dp494
g6
I01
sg7
g66
sg9
L5L
sa(dp495
g6
I01
sg7
g68
sg9
L5L
sa(dp496
g6
I01
sg7
g70
sg9
L5L
sa(dp497
g6
I01
sg7
g233
sg9
L5L
sa(dp498
g6
I01
sg7
g235
sg9
L5L
sa(dp499
g6
I01
sg7
g237
sg9
L5L
sa(dp500
g6
I01
sg7
g239
sg9
L5L
sa(dp501
g6
I01
sg7
g241
sg9
L5L
sa(dp502
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p503
sasg6
I01
sg7
VConnectionError
p504
sg9
L3L
sg18
VConnection error.
p505
sa(dp506
g1
(lp507
(dp508
g6
I01
sg7
g8
sg9
L5L
sa(dp509
g6
I01
sg7
g11
sg9
L5L
sa(dp510
g6
I01
sg7
g13
sg9
L5L
sa(dp511
g6
I01
sg7
g15
sg9
L5L
sa(dp512
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p513
sa(dp514
g6
I01
sg7
g21
sg9
L5L
sa(dp515
g6
I01
sg7
g23
sg9
L5L
sa(dp516
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p517
sa(dp518
g6
I01
sg7
g28
sg9
L5L
sa(dp519
g6
I01
sg7
g30
sg9
L5L
sa(dp520
g6
I01
sg7
g32
sg9
L5L
sa(dp521
g6
I01
sg7
g34
sg9
L5L
sa(dp522
g6
I01
sg7
g36
sg9
L5L
sa(dp523
g6
I01
sg7
g38
sg9
L5L
sa(dp524
g6
I01
sg7
g40
sg9
L5L
sa(dp525
g6
I01
sg7
g42
sg9
L5L
sa(dp526
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p527
sa(dp528
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp529
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p530
sa(dp531
g6
I01
sg7
g52
sg9
L5L
sa(dp532
g6
I01
sg7
g54
sg9
L5L
sa(dp533
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp534
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p535
sa(dp536
g6
I01
sg7
g61
sg9
L5L
sa(dp537
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p538
sa(dp539
g6
I01
sg7
g66
sg9
L5L
sa(dp540
g6
I01
sg7
g68
sg9
L5L
sa(dp541
g6
I01
sg7
g70
sg9
L5L
sa(dp542
g6
I01
sg7
g233
sg9
L5L
sa(dp543
g6
I01
sg7
g235
sg9
L5L
sa(dp544
g6
I01
sg7
g237
sg9
L5L
sa(dp545
g6
I01
sg7
g239
sg9
L5L
sa(dp546
g6
I01
sg7
g241
sg9
L5L
sa(dp547
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p548
sasg6
I01
sg7
VConnectionRefusedError
p549
sg9
L3L
sg18
VConnection refused.
p550
sa(dp551
g1
(lp552
(dp553
g6
I01
sg7
g8
sg9
L5L
sa(dp554
g6
I01
sg7
g11
sg9
L5L
sa(dp555
g6
I01
sg7
g13
sg9
L5L
sa(dp556
g6
I01
sg7
g15
sg9
L5L
sa(dp557
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p558
sa(dp559
g6
I01
sg7
g21
sg9
L5L
sa(dp560
g6
I01
sg7
g23
sg9
L5L
sa(dp561
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p562
sa(dp563
g6
I01
sg7
g28
sg9
L5L
sa(dp564
g6
I01
sg7
g30
sg9
L5L
sa(dp565
g6
I01
sg7
g32
sg9
L5L
sa(dp566
g6
I01
sg7
g34
sg9
L5L
sa(dp567
g6
I01
sg7
g36
sg9
L5L
sa(dp568
g6
I01
sg7
g38
sg9
L5L
sa(dp569
g6
I01
sg7
g40
sg9
L5L
sa(dp570
g6
I01
sg7
g42
sg9
L5L
sa(dp571
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p572
sa(dp573
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp574
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p575
sa(dp576
g6
I01
sg7
g52
sg9
L5L
sa(dp577
g6
I01
sg7
g54
sg9
L5L
sa(dp578
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp579
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p580
sa(dp581
g6
I01
sg7
g61
sg9
L5L
sa(dp582
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p583
sa(dp584
g6
I01
sg7
g66
sg9
L5L
sa(dp585
g6
I01
sg7
g68
sg9
L5L
sa(dp586
g6
I01
sg7
g70
sg9
L5L
sa(dp587
g6
I01
sg7
g233
sg9
L5L
sa(dp588
g6
I01
sg7
g235
sg9
L5L
sa(dp589
g6
I01
sg7
g237
sg9
L5L
sa(dp590
g6
I01
sg7
g239
sg9
L5L
sa(dp591
g6
I01
sg7
g241
sg9
L5L
sa(dp592
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p593
sasg6
I01
sg7
VConnectionResetError
p594
sg9
L3L
sg18
VConnection reset.
p595
sa(dp596
g1
(lp597
(dp598
g6
I01
sg7
g8
sg9
L5L
sa(dp599
g6
I01
sg7
g11
sg9
L5L
sa(dp600
g6
I01
sg7
g13
sg9
L5L
sa(dp601
g6
I01
sg7
g15
sg9
L5L
sa(dp602
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p603
sa(dp604
g6
I01
sg7
g21
sg9
L5L
sa(dp605
g6
I01
sg7
g23
sg9
L5L
sa(dp606
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p607
sa(dp608
g6
I01
sg7
g28
sg9
L5L
sa(dp609
g6
I01
sg7
g30
sg9
L5L
sa(dp610
g6
I01
sg7
g32
sg9
L5L
sa(dp611
g6
I01
sg7
g34
sg9
L5L
sa(dp612
g6
I01
sg7
g36
sg9
L5L
sa(dp613
g6
I01
sg7
g38
sg9
L5L
sa(dp614
g6
I01
sg7
g40
sg9
L5L
sa(dp615
g6
I01
sg7
g42
sg9
L5L
sa(dp616
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p617
sa(dp618
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp619
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p620
sa(dp621
g6
I01
sg7
g52
sg9
L5L
sa(dp622
g6
I01
sg7
g54
sg9
L5L
sa(dp623
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp624
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p625
sa(dp626
g6
I01
sg7
g61
sg9
L5L
sa(dp627
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p628
sa(dp629
g6
I01
sg7
g66
sg9
L5L
sa(dp630
g6
I01
sg7
g68
sg9
L5L
sa(dp631
g6
I01
sg7
g70
sg9
L5L
sa(dp632
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p633
sasg6
I01
sg7
VDeprecationWarning
p634
sg9
L3L
sg18
VBase class for warnings about deprecated features.
p635
sa(dp636
g1
(lp637
(dp638
g6
I01
sg7
g8
sg9
L5L
sa(dp639
g6
I01
sg7
g11
sg9
L5L
sa(dp640
g6
I01
sg7
g13
sg9
L5L
sa(dp641
g6
I01
sg7
g15
sg9
L5L
sa(dp642
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p643
sa(dp644
g6
I01
sg7
g21
sg9
L5L
sa(dp645
g6
I01
sg7
g23
sg9
L5L
sa(dp646
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p647
sa(dp648
g6
I01
sg7
g28
sg9
L5L
sa(dp649
g6
I01
sg7
g30
sg9
L5L
sa(dp650
g6
I01
sg7
g32
sg9
L5L
sa(dp651
g6
I01
sg7
g34
sg9
L5L
sa(dp652
g6
I01
sg7
g36
sg9
L5L
sa(dp653
g6
I01
sg7
g38
sg9
L5L
sa(dp654
g6
I01
sg7
g40
sg9
L5L
sa(dp655
g6
I01
sg7
g42
sg9
L5L
sa(dp656
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p657
sa(dp658
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp659
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p660
sa(dp661
g6
I01
sg7
g52
sg9
L5L
sa(dp662
g6
I01
sg7
g54
sg9
L5L
sa(dp663
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp664
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p665
sa(dp666
g6
I01
sg7
g61
sg9
L5L
sa(dp667
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p668
sa(dp669
g6
I01
sg7
g66
sg9
L5L
sa(dp670
g6
I01
sg7
g68
sg9
L5L
sa(dp671
g6
I01
sg7
g70
sg9
L5L
sa(dp672
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p673
sasg6
I01
sg7
VEOFError
p674
sg9
L3L
sg18
VRead beyond end of file.
p675
sa(dp676
g6
I01
sg7
VEllipsis
p677
sg9
L5L
sa(dp678
g1
(lp679
(dp680
g6
I01
sg7
g8
sg9
L5L
sa(dp681
g6
I01
sg7
g11
sg9
L5L
sa(dp682
g6
I01
sg7
g13
sg9
L5L
sa(dp683
g6
I01
sg7
g15
sg9
L5L
sa(dp684
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p685
sa(dp686
g6
I01
sg7
g21
sg9
L5L
sa(dp687
g6
I01
sg7
g23
sg9
L5L
sa(dp688
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p689
sa(dp690
g6
I01
sg7
g28
sg9
L5L
sa(dp691
g6
I01
sg7
g30
sg9
L5L
sa(dp692
g6
I01
sg7
g32
sg9
L5L
sa(dp693
g6
I01
sg7
g34
sg9
L5L
sa(dp694
g6
I01
sg7
g36
sg9
L5L
sa(dp695
g6
I01
sg7
g38
sg9
L5L
sa(dp696
g6
I01
sg7
g40
sg9
L5L
sa(dp697
g6
I01
sg7
g42
sg9
L5L
sa(dp698
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p699
sa(dp700
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp701
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p702
sa(dp703
g6
I01
sg7
g52
sg9
L5L
sa(dp704
g6
I01
sg7
g54
sg9
L5L
sa(dp705
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp706
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p707
sa(dp708
g6
I01
sg7
g61
sg9
L5L
sa(dp709
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p710
sa(dp711
g6
I01
sg7
g66
sg9
L5L
sa(dp712
g6
I01
sg7
g68
sg9
L5L
sa(dp713
g6
I01
sg7
g70
sg9
L5L
sa(dp714
g6
I01
sg7
g233
sg9
L5L
sa(dp715
g6
I01
sg7
g235
sg9
L5L
sa(dp716
g6
I01
sg7
g237
sg9
L5L
sa(dp717
g6
I01
sg7
g239
sg9
L5L
sa(dp718
g6
I01
sg7
g241
sg9
L5L
sa(dp719
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p720
sasg6
I01
sg7
VEnvironmentError
p721
sg9
L3L
sg18
VBase class for I/O related errors.
p722
sa(dp723
g1
(lp724
(dp725
g6
I01
sg7
g8
sg9
L5L
sa(dp726
g6
I01
sg7
g11
sg9
L5L
sa(dp727
g6
I01
sg7
g13
sg9
L5L
sa(dp728
g6
I01
sg7
g15
sg9
L5L
sa(dp729
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p730
sa(dp731
g6
I01
sg7
g21
sg9
L5L
sa(dp732
g6
I01
sg7
g23
sg9
L5L
sa(dp733
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p734
sa(dp735
g6
I01
sg7
g28
sg9
L5L
sa(dp736
g6
I01
sg7
g30
sg9
L5L
sa(dp737
g6
I01
sg7
g32
sg9
L5L
sa(dp738
g6
I01
sg7
g34
sg9
L5L
sa(dp739
g6
I01
sg7
g36
sg9
L5L
sa(dp740
g6
I01
sg7
g38
sg9
L5L
sa(dp741
g6
I01
sg7
g40
sg9
L5L
sa(dp742
g6
I01
sg7
g42
sg9
L5L
sa(dp743
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p744
sa(dp745
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp746
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p747
sa(dp748
g6
I01
sg7
g52
sg9
L5L
sa(dp749
g6
I01
sg7
g54
sg9
L5L
sa(dp750
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp751
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p752
sa(dp753
g6
I01
sg7
g61
sg9
L5L
sa(dp754
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p755
sa(dp756
g6
I01
sg7
g66
sg9
L5L
sa(dp757
g6
I01
sg7
g68
sg9
L5L
sa(dp758
g6
I01
sg7
g70
sg9
L5L
sa(dp759
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p760
sasg6
I01
sg7
VException
p761
sg9
L3L
sg18
VCommon base class for all non-exit exceptions.
p762
sa(dp763
g6
I01
sg7
VFalse
p764
sg9
L5L
sa(dp765
g1
(lp766
(dp767
g6
I01
sg7
g8
sg9
L5L
sa(dp768
g6
I01
sg7
g11
sg9
L5L
sa(dp769
g6
I01
sg7
g13
sg9
L5L
sa(dp770
g6
I01
sg7
g15
sg9
L5L
sa(dp771
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p772
sa(dp773
g6
I01
sg7
g21
sg9
L5L
sa(dp774
g6
I01
sg7
g23
sg9
L5L
sa(dp775
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p776
sa(dp777
g6
I01
sg7
g28
sg9
L5L
sa(dp778
g6
I01
sg7
g30
sg9
L5L
sa(dp779
g6
I01
sg7
g32
sg9
L5L
sa(dp780
g6
I01
sg7
g34
sg9
L5L
sa(dp781
g6
I01
sg7
g36
sg9
L5L
sa(dp782
g6
I01
sg7
g38
sg9
L5L
sa(dp783
g6
I01
sg7
g40
sg9
L5L
sa(dp784
g6
I01
sg7
g42
sg9
L5L
sa(dp785
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p786
sa(dp787
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp788
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p789
sa(dp790
g6
I01
sg7
g52
sg9
L5L
sa(dp791
g6
I01
sg7
g54
sg9
L5L
sa(dp792
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp793
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p794
sa(dp795
g6
I01
sg7
g61
sg9
L5L
sa(dp796
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p797
sa(dp798
g6
I01
sg7
g66
sg9
L5L
sa(dp799
g6
I01
sg7
g68
sg9
L5L
sa(dp800
g6
I01
sg7
g70
sg9
L5L
sa(dp801
g6
I01
sg7
g233
sg9
L5L
sa(dp802
g6
I01
sg7
g235
sg9
L5L
sa(dp803
g6
I01
sg7
g237
sg9
L5L
sa(dp804
g6
I01
sg7
g239
sg9
L5L
sa(dp805
g6
I01
sg7
g241
sg9
L5L
sa(dp806
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p807
sasg6
I01
sg7
VFileExistsError
p808
sg9
L3L
sg18
VFile already exists.
p809
sa(dp810
g1
(lp811
(dp812
g6
I01
sg7
g8
sg9
L5L
sa(dp813
g6
I01
sg7
g11
sg9
L5L
sa(dp814
g6
I01
sg7
g13
sg9
L5L
sa(dp815
g6
I01
sg7
g15
sg9
L5L
sa(dp816
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p817
sa(dp818
g6
I01
sg7
g21
sg9
L5L
sa(dp819
g6
I01
sg7
g23
sg9
L5L
sa(dp820
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p821
sa(dp822
g6
I01
sg7
g28
sg9
L5L
sa(dp823
g6
I01
sg7
g30
sg9
L5L
sa(dp824
g6
I01
sg7
g32
sg9
L5L
sa(dp825
g6
I01
sg7
g34
sg9
L5L
sa(dp826
g6
I01
sg7
g36
sg9
L5L
sa(dp827
g6
I01
sg7
g38
sg9
L5L
sa(dp828
g6
I01
sg7
g40
sg9
L5L
sa(dp829
g6
I01
sg7
g42
sg9
L5L
sa(dp830
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p831
sa(dp832
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp833
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p834
sa(dp835
g6
I01
sg7
g52
sg9
L5L
sa(dp836
g6
I01
sg7
g54
sg9
L5L
sa(dp837
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp838
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p839
sa(dp840
g6
I01
sg7
g61
sg9
L5L
sa(dp841
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p842
sa(dp843
g6
I01
sg7
g66
sg9
L5L
sa(dp844
g6
I01
sg7
g68
sg9
L5L
sa(dp845
g6
I01
sg7
g70
sg9
L5L
sa(dp846
g6
I01
sg7
g233
sg9
L5L
sa(dp847
g6
I01
sg7
g235
sg9
L5L
sa(dp848
g6
I01
sg7
g237
sg9
L5L
sa(dp849
g6
I01
sg7
g239
sg9
L5L
sa(dp850
g6
I01
sg7
g241
sg9
L5L
sa(dp851
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p852
sasg6
I01
sg7
VFileNotFoundError
p853
sg9
L3L
sg18
VFile not found.
p854
sa(dp855
g1
(lp856
(dp857
g6
I01
sg7
g8
sg9
L5L
sa(dp858
g6
I01
sg7
g11
sg9
L5L
sa(dp859
g6
I01
sg7
g13
sg9
L5L
sa(dp860
g6
I01
sg7
g15
sg9
L5L
sa(dp861
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p862
sa(dp863
g6
I01
sg7
g21
sg9
L5L
sa(dp864
g6
I01
sg7
g23
sg9
L5L
sa(dp865
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p866
sa(dp867
g6
I01
sg7
g28
sg9
L5L
sa(dp868
g6
I01
sg7
g30
sg9
L5L
sa(dp869
g6
I01
sg7
g32
sg9
L5L
sa(dp870
g6
I01
sg7
g34
sg9
L5L
sa(dp871
g6
I01
sg7
g36
sg9
L5L
sa(dp872
g6
I01
sg7
g38
sg9
L5L
sa(dp873
g6
I01
sg7
g40
sg9
L5L
sa(dp874
g6
I01
sg7
g42
sg9
L5L
sa(dp875
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p876
sa(dp877
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp878
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p879
sa(dp880
g6
I01
sg7
g52
sg9
L5L
sa(dp881
g6
I01
sg7
g54
sg9
L5L
sa(dp882
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp883
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p884
sa(dp885
g6
I01
sg7
g61
sg9
L5L
sa(dp886
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p887
sa(dp888
g6
I01
sg7
g66
sg9
L5L
sa(dp889
g6
I01
sg7
g68
sg9
L5L
sa(dp890
g6
I01
sg7
g70
sg9
L5L
sa(dp891
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p892
sasg6
I01
sg7
VFloatingPointError
p893
sg9
L3L
sg18
VFloating point operation failed.
p894
sa(dp895
g1
(lp896
(dp897
g6
I01
sg7
g8
sg9
L5L
sa(dp898
g6
I01
sg7
g11
sg9
L5L
sa(dp899
g6
I01
sg7
g13
sg9
L5L
sa(dp900
g6
I01
sg7
g15
sg9
L5L
sa(dp901
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p902
sa(dp903
g6
I01
sg7
g21
sg9
L5L
sa(dp904
g6
I01
sg7
g23
sg9
L5L
sa(dp905
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p906
sa(dp907
g6
I01
sg7
g28
sg9
L5L
sa(dp908
g6
I01
sg7
g30
sg9
L5L
sa(dp909
g6
I01
sg7
g32
sg9
L5L
sa(dp910
g6
I01
sg7
g34
sg9
L5L
sa(dp911
g6
I01
sg7
g36
sg9
L5L
sa(dp912
g6
I01
sg7
g38
sg9
L5L
sa(dp913
g6
I01
sg7
g40
sg9
L5L
sa(dp914
g6
I01
sg7
g42
sg9
L5L
sa(dp915
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p916
sa(dp917
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp918
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p919
sa(dp920
g6
I01
sg7
g52
sg9
L5L
sa(dp921
g6
I01
sg7
g54
sg9
L5L
sa(dp922
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp923
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p924
sa(dp925
g6
I01
sg7
g61
sg9
L5L
sa(dp926
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p927
sa(dp928
g6
I01
sg7
g66
sg9
L5L
sa(dp929
g6
I01
sg7
g68
sg9
L5L
sa(dp930
g6
I01
sg7
g70
sg9
L5L
sa(dp931
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p932
sasg6
I01
sg7
VFutureWarning
p933
sg9
L3L
sg18
VBase class for warnings about constructs that will change semantically\u000ain the future.
p934
sa(dp935
g1
(lp936
(dp937
g6
I01
sg7
g8
sg9
L5L
sa(dp938
g6
I01
sg7
g11
sg9
L5L
sa(dp939
g6
I01
sg7
g13
sg9
L5L
sa(dp940
g6
I01
sg7
g15
sg9
L5L
sa(dp941
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p942
sa(dp943
g6
I01
sg7
g21
sg9
L5L
sa(dp944
g6
I01
sg7
g23
sg9
L5L
sa(dp945
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p946
sa(dp947
g6
I01
sg7
g28
sg9
L5L
sa(dp948
g6
I01
sg7
g30
sg9
L5L
sa(dp949
g6
I01
sg7
g32
sg9
L5L
sa(dp950
g6
I01
sg7
g34
sg9
L5L
sa(dp951
g6
I01
sg7
g36
sg9
L5L
sa(dp952
g6
I01
sg7
g38
sg9
L5L
sa(dp953
g6
I01
sg7
g40
sg9
L5L
sa(dp954
g6
I01
sg7
g42
sg9
L5L
sa(dp955
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p956
sa(dp957
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp958
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p959
sa(dp960
g6
I01
sg7
g52
sg9
L5L
sa(dp961
g6
I01
sg7
g54
sg9
L5L
sa(dp962
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp963
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p964
sa(dp965
g6
I01
sg7
g61
sg9
L5L
sa(dp966
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p967
sa(dp968
g6
I01
sg7
g66
sg9
L5L
sa(dp969
g6
I01
sg7
g68
sg9
L5L
sa(dp970
g6
I01
sg7
g70
sg9
L5L
sa(dp971
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p972
sasg6
I01
sg7
VGeneratorExit
p973
sg9
L3L
sg18
VRequest that a generator exit.
p974
sa(dp975
g1
(lp976
(dp977
g6
I01
sg7
g8
sg9
L5L
sa(dp978
g6
I01
sg7
g11
sg9
L5L
sa(dp979
g6
I01
sg7
g13
sg9
L5L
sa(dp980
g6
I01
sg7
g15
sg9
L5L
sa(dp981
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p982
sa(dp983
g6
I01
sg7
g21
sg9
L5L
sa(dp984
g6
I01
sg7
g23
sg9
L5L
sa(dp985
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p986
sa(dp987
g6
I01
sg7
g28
sg9
L5L
sa(dp988
g6
I01
sg7
g30
sg9
L5L
sa(dp989
g6
I01
sg7
g32
sg9
L5L
sa(dp990
g6
I01
sg7
g34
sg9
L5L
sa(dp991
g6
I01
sg7
g36
sg9
L5L
sa(dp992
g6
I01
sg7
g38
sg9
L5L
sa(dp993
g6
I01
sg7
g40
sg9
L5L
sa(dp994
g6
I01
sg7
g42
sg9
L5L
sa(dp995
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p996
sa(dp997
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp998
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p999
sa(dp1000
g6
I01
sg7
g52
sg9
L5L
sa(dp1001
g6
I01
sg7
g54
sg9
L5L
sa(dp1002
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1003
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1004
sa(dp1005
g6
I01
sg7
g61
sg9
L5L
sa(dp1006
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1007
sa(dp1008
g6
I01
sg7
g66
sg9
L5L
sa(dp1009
g6
I01
sg7
g68
sg9
L5L
sa(dp1010
g6
I01
sg7
g70
sg9
L5L
sa(dp1011
g6
I01
sg7
g233
sg9
L5L
sa(dp1012
g6
I01
sg7
g235
sg9
L5L
sa(dp1013
g6
I01
sg7
g237
sg9
L5L
sa(dp1014
g6
I01
sg7
g239
sg9
L5L
sa(dp1015
g6
I01
sg7
g241
sg9
L5L
sa(dp1016
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1017
sasg6
I01
sg7
VIOError
p1018
sg9
L3L
sg18
VBase class for I/O related errors.
p1019
sa(dp1020
g1
(lp1021
(dp1022
g6
I01
sg7
g8
sg9
L5L
sa(dp1023
g6
I01
sg7
g11
sg9
L5L
sa(dp1024
g6
I01
sg7
g13
sg9
L5L
sa(dp1025
g6
I01
sg7
g15
sg9
L5L
sa(dp1026
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1027
sa(dp1028
g6
I01
sg7
g21
sg9
L5L
sa(dp1029
g6
I01
sg7
g23
sg9
L5L
sa(dp1030
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1031
sa(dp1032
g6
I01
sg7
g28
sg9
L5L
sa(dp1033
g6
I01
sg7
g30
sg9
L5L
sa(dp1034
g6
I01
sg7
g32
sg9
L5L
sa(dp1035
g6
I01
sg7
g34
sg9
L5L
sa(dp1036
g6
I01
sg7
g36
sg9
L5L
sa(dp1037
g6
I01
sg7
g38
sg9
L5L
sa(dp1038
g6
I01
sg7
g40
sg9
L5L
sa(dp1039
g6
I01
sg7
g42
sg9
L5L
sa(dp1040
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1041
sa(dp1042
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1043
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1044
sa(dp1045
g6
I01
sg7
g52
sg9
L5L
sa(dp1046
g6
I01
sg7
g54
sg9
L5L
sa(dp1047
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1048
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1049
sa(dp1050
g6
I01
sg7
g61
sg9
L5L
sa(dp1051
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1052
sa(dp1053
g6
I01
sg7
g66
sg9
L5L
sa(dp1054
g6
I01
sg7
g68
sg9
L5L
sa(dp1055
g6
I01
sg7
g70
sg9
L5L
sa(dp1056
g6
I01
sg7
Vmsg
p1057
sg9
L5L
sa(dp1058
g6
I01
sg7
g7
sg9
L5L
sa(dp1059
g6
I01
sg7
Vpath
p1060
sg9
L5L
sa(dp1061
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1062
sasg6
I01
sg7
VImportError
p1063
sg9
L3L
sg18
VImport can't find module, or can't find name in module.
p1064
sa(dp1065
g1
(lp1066
(dp1067
g6
I01
sg7
g8
sg9
L5L
sa(dp1068
g6
I01
sg7
g11
sg9
L5L
sa(dp1069
g6
I01
sg7
g13
sg9
L5L
sa(dp1070
g6
I01
sg7
g15
sg9
L5L
sa(dp1071
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1072
sa(dp1073
g6
I01
sg7
g21
sg9
L5L
sa(dp1074
g6
I01
sg7
g23
sg9
L5L
sa(dp1075
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1076
sa(dp1077
g6
I01
sg7
g28
sg9
L5L
sa(dp1078
g6
I01
sg7
g30
sg9
L5L
sa(dp1079
g6
I01
sg7
g32
sg9
L5L
sa(dp1080
g6
I01
sg7
g34
sg9
L5L
sa(dp1081
g6
I01
sg7
g36
sg9
L5L
sa(dp1082
g6
I01
sg7
g38
sg9
L5L
sa(dp1083
g6
I01
sg7
g40
sg9
L5L
sa(dp1084
g6
I01
sg7
g42
sg9
L5L
sa(dp1085
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1086
sa(dp1087
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1088
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1089
sa(dp1090
g6
I01
sg7
g52
sg9
L5L
sa(dp1091
g6
I01
sg7
g54
sg9
L5L
sa(dp1092
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1093
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1094
sa(dp1095
g6
I01
sg7
g61
sg9
L5L
sa(dp1096
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1097
sa(dp1098
g6
I01
sg7
g66
sg9
L5L
sa(dp1099
g6
I01
sg7
g68
sg9
L5L
sa(dp1100
g6
I01
sg7
g70
sg9
L5L
sa(dp1101
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1102
sasg6
I01
sg7
VImportWarning
p1103
sg9
L3L
sg18
VBase class for warnings about probable mistakes in module imports
p1104
sa(dp1105
g1
(lp1106
(dp1107
g6
I01
sg7
g8
sg9
L5L
sa(dp1108
g6
I01
sg7
g11
sg9
L5L
sa(dp1109
g6
I01
sg7
g13
sg9
L5L
sa(dp1110
g6
I01
sg7
g15
sg9
L5L
sa(dp1111
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1112
sa(dp1113
g6
I01
sg7
g21
sg9
L5L
sa(dp1114
g6
I01
sg7
g23
sg9
L5L
sa(dp1115
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1116
sa(dp1117
g6
I01
sg7
g28
sg9
L5L
sa(dp1118
g6
I01
sg7
g30
sg9
L5L
sa(dp1119
g6
I01
sg7
g32
sg9
L5L
sa(dp1120
g6
I01
sg7
g34
sg9
L5L
sa(dp1121
g6
I01
sg7
g36
sg9
L5L
sa(dp1122
g6
I01
sg7
g38
sg9
L5L
sa(dp1123
g6
I01
sg7
g40
sg9
L5L
sa(dp1124
g6
I01
sg7
g42
sg9
L5L
sa(dp1125
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1126
sa(dp1127
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1128
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1129
sa(dp1130
g6
I01
sg7
g52
sg9
L5L
sa(dp1131
g6
I01
sg7
g54
sg9
L5L
sa(dp1132
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1133
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1134
sa(dp1135
g6
I01
sg7
g61
sg9
L5L
sa(dp1136
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1137
sa(dp1138
g6
I01
sg7
g66
sg9
L5L
sa(dp1139
g6
I01
sg7
g68
sg9
L5L
sa(dp1140
g6
I01
sg7
g70
sg9
L5L
sa(dp1141
g6
I01
sg7
g237
sg9
L5L
sa(dp1142
g6
I01
sg7
Vlineno
p1143
sg9
L5L
sa(dp1144
g6
I01
sg7
g1057
sg9
L5L
sa(dp1145
g6
I01
sg7
Voffset
p1146
sg9
L5L
sa(dp1147
g6
I01
sg7
Vprint_file_and_line
p1148
sg9
L5L
sa(dp1149
g6
I01
sg7
Vtext
p1150
sg9
L5L
sa(dp1151
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1152
sasg6
I01
sg7
VIndentationError
p1153
sg9
L3L
sg18
VImproper indentation.
p1154
sa(dp1155
g1
(lp1156
(dp1157
g6
I01
sg7
g8
sg9
L5L
sa(dp1158
g6
I01
sg7
g11
sg9
L5L
sa(dp1159
g6
I01
sg7
g13
sg9
L5L
sa(dp1160
g6
I01
sg7
g15
sg9
L5L
sa(dp1161
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1162
sa(dp1163
g6
I01
sg7
g21
sg9
L5L
sa(dp1164
g6
I01
sg7
g23
sg9
L5L
sa(dp1165
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1166
sa(dp1167
g6
I01
sg7
g28
sg9
L5L
sa(dp1168
g6
I01
sg7
g30
sg9
L5L
sa(dp1169
g6
I01
sg7
g32
sg9
L5L
sa(dp1170
g6
I01
sg7
g34
sg9
L5L
sa(dp1171
g6
I01
sg7
g36
sg9
L5L
sa(dp1172
g6
I01
sg7
g38
sg9
L5L
sa(dp1173
g6
I01
sg7
g40
sg9
L5L
sa(dp1174
g6
I01
sg7
g42
sg9
L5L
sa(dp1175
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1176
sa(dp1177
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1178
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1179
sa(dp1180
g6
I01
sg7
g52
sg9
L5L
sa(dp1181
g6
I01
sg7
g54
sg9
L5L
sa(dp1182
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1183
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1184
sa(dp1185
g6
I01
sg7
g61
sg9
L5L
sa(dp1186
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1187
sa(dp1188
g6
I01
sg7
g66
sg9
L5L
sa(dp1189
g6
I01
sg7
g68
sg9
L5L
sa(dp1190
g6
I01
sg7
g70
sg9
L5L
sa(dp1191
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1192
sasg6
I01
sg7
VIndexError
p1193
sg9
L3L
sg18
VSequence index out of range.
p1194
sa(dp1195
g1
(lp1196
(dp1197
g6
I01
sg7
g8
sg9
L5L
sa(dp1198
g6
I01
sg7
g11
sg9
L5L
sa(dp1199
g6
I01
sg7
g13
sg9
L5L
sa(dp1200
g6
I01
sg7
g15
sg9
L5L
sa(dp1201
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1202
sa(dp1203
g6
I01
sg7
g21
sg9
L5L
sa(dp1204
g6
I01
sg7
g23
sg9
L5L
sa(dp1205
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1206
sa(dp1207
g6
I01
sg7
g28
sg9
L5L
sa(dp1208
g6
I01
sg7
g30
sg9
L5L
sa(dp1209
g6
I01
sg7
g32
sg9
L5L
sa(dp1210
g6
I01
sg7
g34
sg9
L5L
sa(dp1211
g6
I01
sg7
g36
sg9
L5L
sa(dp1212
g6
I01
sg7
g38
sg9
L5L
sa(dp1213
g6
I01
sg7
g40
sg9
L5L
sa(dp1214
g6
I01
sg7
g42
sg9
L5L
sa(dp1215
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1216
sa(dp1217
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1218
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1219
sa(dp1220
g6
I01
sg7
g52
sg9
L5L
sa(dp1221
g6
I01
sg7
g54
sg9
L5L
sa(dp1222
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1223
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1224
sa(dp1225
g6
I01
sg7
g61
sg9
L5L
sa(dp1226
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1227
sa(dp1228
g6
I01
sg7
g66
sg9
L5L
sa(dp1229
g6
I01
sg7
g68
sg9
L5L
sa(dp1230
g6
I01
sg7
g70
sg9
L5L
sa(dp1231
g6
I01
sg7
g233
sg9
L5L
sa(dp1232
g6
I01
sg7
g235
sg9
L5L
sa(dp1233
g6
I01
sg7
g237
sg9
L5L
sa(dp1234
g6
I01
sg7
g239
sg9
L5L
sa(dp1235
g6
I01
sg7
g241
sg9
L5L
sa(dp1236
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1237
sasg6
I01
sg7
VInterruptedError
p1238
sg9
L3L
sg18
VInterrupted by signal.
p1239
sa(dp1240
g1
(lp1241
(dp1242
g6
I01
sg7
g8
sg9
L5L
sa(dp1243
g6
I01
sg7
g11
sg9
L5L
sa(dp1244
g6
I01
sg7
g13
sg9
L5L
sa(dp1245
g6
I01
sg7
g15
sg9
L5L
sa(dp1246
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1247
sa(dp1248
g6
I01
sg7
g21
sg9
L5L
sa(dp1249
g6
I01
sg7
g23
sg9
L5L
sa(dp1250
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1251
sa(dp1252
g6
I01
sg7
g28
sg9
L5L
sa(dp1253
g6
I01
sg7
g30
sg9
L5L
sa(dp1254
g6
I01
sg7
g32
sg9
L5L
sa(dp1255
g6
I01
sg7
g34
sg9
L5L
sa(dp1256
g6
I01
sg7
g36
sg9
L5L
sa(dp1257
g6
I01
sg7
g38
sg9
L5L
sa(dp1258
g6
I01
sg7
g40
sg9
L5L
sa(dp1259
g6
I01
sg7
g42
sg9
L5L
sa(dp1260
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1261
sa(dp1262
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1263
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1264
sa(dp1265
g6
I01
sg7
g52
sg9
L5L
sa(dp1266
g6
I01
sg7
g54
sg9
L5L
sa(dp1267
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1268
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1269
sa(dp1270
g6
I01
sg7
g61
sg9
L5L
sa(dp1271
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1272
sa(dp1273
g6
I01
sg7
g66
sg9
L5L
sa(dp1274
g6
I01
sg7
g68
sg9
L5L
sa(dp1275
g6
I01
sg7
g70
sg9
L5L
sa(dp1276
g6
I01
sg7
g233
sg9
L5L
sa(dp1277
g6
I01
sg7
g235
sg9
L5L
sa(dp1278
g6
I01
sg7
g237
sg9
L5L
sa(dp1279
g6
I01
sg7
g239
sg9
L5L
sa(dp1280
g6
I01
sg7
g241
sg9
L5L
sa(dp1281
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1282
sasg6
I01
sg7
VIsADirectoryError
p1283
sg9
L3L
sg18
VOperation doesn't work on directories.
p1284
sa(dp1285
g1
(lp1286
(dp1287
g6
I01
sg7
g8
sg9
L5L
sa(dp1288
g6
I01
sg7
g11
sg9
L5L
sa(dp1289
g6
I01
sg7
g13
sg9
L5L
sa(dp1290
g6
I01
sg7
g15
sg9
L5L
sa(dp1291
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1292
sa(dp1293
g6
I01
sg7
g21
sg9
L5L
sa(dp1294
g6
I01
sg7
g23
sg9
L5L
sa(dp1295
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1296
sa(dp1297
g6
I01
sg7
g28
sg9
L5L
sa(dp1298
g6
I01
sg7
g30
sg9
L5L
sa(dp1299
g6
I01
sg7
g32
sg9
L5L
sa(dp1300
g6
I01
sg7
g34
sg9
L5L
sa(dp1301
g6
I01
sg7
g36
sg9
L5L
sa(dp1302
g6
I01
sg7
g38
sg9
L5L
sa(dp1303
g6
I01
sg7
g40
sg9
L5L
sa(dp1304
g6
I01
sg7
g42
sg9
L5L
sa(dp1305
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1306
sa(dp1307
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1308
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1309
sa(dp1310
g6
I01
sg7
g52
sg9
L5L
sa(dp1311
g6
I01
sg7
g54
sg9
L5L
sa(dp1312
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1313
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1314
sa(dp1315
g6
I01
sg7
g61
sg9
L5L
sa(dp1316
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1317
sa(dp1318
g6
I01
sg7
g66
sg9
L5L
sa(dp1319
g6
I01
sg7
g68
sg9
L5L
sa(dp1320
g6
I01
sg7
g70
sg9
L5L
sa(dp1321
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1322
sasg6
I01
sg7
VKeyError
p1323
sg9
L3L
sg18
VMapping key not found.
p1324
sa(dp1325
g1
(lp1326
(dp1327
g6
I01
sg7
g8
sg9
L5L
sa(dp1328
g6
I01
sg7
g11
sg9
L5L
sa(dp1329
g6
I01
sg7
g13
sg9
L5L
sa(dp1330
g6
I01
sg7
g15
sg9
L5L
sa(dp1331
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1332
sa(dp1333
g6
I01
sg7
g21
sg9
L5L
sa(dp1334
g6
I01
sg7
g23
sg9
L5L
sa(dp1335
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1336
sa(dp1337
g6
I01
sg7
g28
sg9
L5L
sa(dp1338
g6
I01
sg7
g30
sg9
L5L
sa(dp1339
g6
I01
sg7
g32
sg9
L5L
sa(dp1340
g6
I01
sg7
g34
sg9
L5L
sa(dp1341
g6
I01
sg7
g36
sg9
L5L
sa(dp1342
g6
I01
sg7
g38
sg9
L5L
sa(dp1343
g6
I01
sg7
g40
sg9
L5L
sa(dp1344
g6
I01
sg7
g42
sg9
L5L
sa(dp1345
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1346
sa(dp1347
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1348
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1349
sa(dp1350
g6
I01
sg7
g52
sg9
L5L
sa(dp1351
g6
I01
sg7
g54
sg9
L5L
sa(dp1352
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1353
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1354
sa(dp1355
g6
I01
sg7
g61
sg9
L5L
sa(dp1356
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1357
sa(dp1358
g6
I01
sg7
g66
sg9
L5L
sa(dp1359
g6
I01
sg7
g68
sg9
L5L
sa(dp1360
g6
I01
sg7
g70
sg9
L5L
sa(dp1361
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1362
sasg6
I01
sg7
VKeyboardInterrupt
p1363
sg9
L3L
sg18
VProgram interrupted by user.
p1364
sa(dp1365
g1
(lp1366
(dp1367
g6
I01
sg7
g8
sg9
L5L
sa(dp1368
g6
I01
sg7
g11
sg9
L5L
sa(dp1369
g6
I01
sg7
g13
sg9
L5L
sa(dp1370
g6
I01
sg7
g15
sg9
L5L
sa(dp1371
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1372
sa(dp1373
g6
I01
sg7
g21
sg9
L5L
sa(dp1374
g6
I01
sg7
g23
sg9
L5L
sa(dp1375
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1376
sa(dp1377
g6
I01
sg7
g28
sg9
L5L
sa(dp1378
g6
I01
sg7
g30
sg9
L5L
sa(dp1379
g6
I01
sg7
g32
sg9
L5L
sa(dp1380
g6
I01
sg7
g34
sg9
L5L
sa(dp1381
g6
I01
sg7
g36
sg9
L5L
sa(dp1382
g6
I01
sg7
g38
sg9
L5L
sa(dp1383
g6
I01
sg7
g40
sg9
L5L
sa(dp1384
g6
I01
sg7
g42
sg9
L5L
sa(dp1385
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1386
sa(dp1387
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1388
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1389
sa(dp1390
g6
I01
sg7
g52
sg9
L5L
sa(dp1391
g6
I01
sg7
g54
sg9
L5L
sa(dp1392
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1393
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1394
sa(dp1395
g6
I01
sg7
g61
sg9
L5L
sa(dp1396
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1397
sa(dp1398
g6
I01
sg7
g66
sg9
L5L
sa(dp1399
g6
I01
sg7
g68
sg9
L5L
sa(dp1400
g6
I01
sg7
g70
sg9
L5L
sa(dp1401
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1402
sasg6
I01
sg7
VLookupError
p1403
sg9
L3L
sg18
VBase class for lookup errors.
p1404
sa(dp1405
g1
(lp1406
(dp1407
g6
I01
sg7
g8
sg9
L5L
sa(dp1408
g6
I01
sg7
g11
sg9
L5L
sa(dp1409
g6
I01
sg7
g13
sg9
L5L
sa(dp1410
g6
I01
sg7
g15
sg9
L5L
sa(dp1411
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1412
sa(dp1413
g6
I01
sg7
g21
sg9
L5L
sa(dp1414
g6
I01
sg7
g23
sg9
L5L
sa(dp1415
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1416
sa(dp1417
g6
I01
sg7
g28
sg9
L5L
sa(dp1418
g6
I01
sg7
g30
sg9
L5L
sa(dp1419
g6
I01
sg7
g32
sg9
L5L
sa(dp1420
g6
I01
sg7
g34
sg9
L5L
sa(dp1421
g6
I01
sg7
g36
sg9
L5L
sa(dp1422
g6
I01
sg7
g38
sg9
L5L
sa(dp1423
g6
I01
sg7
g40
sg9
L5L
sa(dp1424
g6
I01
sg7
g42
sg9
L5L
sa(dp1425
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1426
sa(dp1427
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1428
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1429
sa(dp1430
g6
I01
sg7
g52
sg9
L5L
sa(dp1431
g6
I01
sg7
g54
sg9
L5L
sa(dp1432
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1433
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1434
sa(dp1435
g6
I01
sg7
g61
sg9
L5L
sa(dp1436
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1437
sa(dp1438
g6
I01
sg7
g66
sg9
L5L
sa(dp1439
g6
I01
sg7
g68
sg9
L5L
sa(dp1440
g6
I01
sg7
g70
sg9
L5L
sa(dp1441
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1442
sasg6
I01
sg7
VMemoryError
p1443
sg9
L3L
sg18
VOut of memory.
p1444
sa(dp1445
g1
(lp1446
(dp1447
g6
I01
sg7
g8
sg9
L5L
sa(dp1448
g6
I01
sg7
g11
sg9
L5L
sa(dp1449
g6
I01
sg7
g13
sg9
L5L
sa(dp1450
g6
I01
sg7
g15
sg9
L5L
sa(dp1451
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1452
sa(dp1453
g6
I01
sg7
g21
sg9
L5L
sa(dp1454
g6
I01
sg7
g23
sg9
L5L
sa(dp1455
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1456
sa(dp1457
g6
I01
sg7
g28
sg9
L5L
sa(dp1458
g6
I01
sg7
g30
sg9
L5L
sa(dp1459
g6
I01
sg7
g32
sg9
L5L
sa(dp1460
g6
I01
sg7
g34
sg9
L5L
sa(dp1461
g6
I01
sg7
g36
sg9
L5L
sa(dp1462
g6
I01
sg7
g38
sg9
L5L
sa(dp1463
g6
I01
sg7
g40
sg9
L5L
sa(dp1464
g6
I01
sg7
g42
sg9
L5L
sa(dp1465
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1466
sa(dp1467
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1468
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1469
sa(dp1470
g6
I01
sg7
g52
sg9
L5L
sa(dp1471
g6
I01
sg7
g54
sg9
L5L
sa(dp1472
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1473
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1474
sa(dp1475
g6
I01
sg7
g61
sg9
L5L
sa(dp1476
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1477
sa(dp1478
g6
I01
sg7
g66
sg9
L5L
sa(dp1479
g6
I01
sg7
g68
sg9
L5L
sa(dp1480
g6
I01
sg7
g70
sg9
L5L
sa(dp1481
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1482
sasg6
I01
sg7
VNameError
p1483
sg9
L3L
sg18
VName not found globally.
p1484
sa(dp1485
g6
I01
sg7
VNone
p1486
sg9
L5L
sa(dp1487
g1
(lp1488
(dp1489
g6
I01
sg7
g8
sg9
L5L
sa(dp1490
g6
I01
sg7
g11
sg9
L5L
sa(dp1491
g6
I01
sg7
g13
sg9
L5L
sa(dp1492
g6
I01
sg7
g15
sg9
L5L
sa(dp1493
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1494
sa(dp1495
g6
I01
sg7
g21
sg9
L5L
sa(dp1496
g6
I01
sg7
g23
sg9
L5L
sa(dp1497
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1498
sa(dp1499
g6
I01
sg7
g28
sg9
L5L
sa(dp1500
g6
I01
sg7
g30
sg9
L5L
sa(dp1501
g6
I01
sg7
g32
sg9
L5L
sa(dp1502
g6
I01
sg7
g34
sg9
L5L
sa(dp1503
g6
I01
sg7
g36
sg9
L5L
sa(dp1504
g6
I01
sg7
g38
sg9
L5L
sa(dp1505
g6
I01
sg7
g40
sg9
L5L
sa(dp1506
g6
I01
sg7
g42
sg9
L5L
sa(dp1507
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1508
sa(dp1509
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1510
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1511
sa(dp1512
g6
I01
sg7
g52
sg9
L5L
sa(dp1513
g6
I01
sg7
g54
sg9
L5L
sa(dp1514
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1515
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1516
sa(dp1517
g6
I01
sg7
g61
sg9
L5L
sa(dp1518
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1519
sa(dp1520
g6
I01
sg7
g66
sg9
L5L
sa(dp1521
g6
I01
sg7
g68
sg9
L5L
sa(dp1522
g6
I01
sg7
g70
sg9
L5L
sa(dp1523
g6
I01
sg7
g233
sg9
L5L
sa(dp1524
g6
I01
sg7
g235
sg9
L5L
sa(dp1525
g6
I01
sg7
g237
sg9
L5L
sa(dp1526
g6
I01
sg7
g239
sg9
L5L
sa(dp1527
g6
I01
sg7
g241
sg9
L5L
sa(dp1528
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1529
sasg6
I01
sg7
VNotADirectoryError
p1530
sg9
L3L
sg18
VOperation only works on directories.
p1531
sa(dp1532
g6
I01
sg7
VNotImplemented
p1533
sg9
L5L
sa(dp1534
g1
(lp1535
(dp1536
g6
I01
sg7
g8
sg9
L5L
sa(dp1537
g6
I01
sg7
g11
sg9
L5L
sa(dp1538
g6
I01
sg7
g13
sg9
L5L
sa(dp1539
g6
I01
sg7
g15
sg9
L5L
sa(dp1540
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1541
sa(dp1542
g6
I01
sg7
g21
sg9
L5L
sa(dp1543
g6
I01
sg7
g23
sg9
L5L
sa(dp1544
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1545
sa(dp1546
g6
I01
sg7
g28
sg9
L5L
sa(dp1547
g6
I01
sg7
g30
sg9
L5L
sa(dp1548
g6
I01
sg7
g32
sg9
L5L
sa(dp1549
g6
I01
sg7
g34
sg9
L5L
sa(dp1550
g6
I01
sg7
g36
sg9
L5L
sa(dp1551
g6
I01
sg7
g38
sg9
L5L
sa(dp1552
g6
I01
sg7
g40
sg9
L5L
sa(dp1553
g6
I01
sg7
g42
sg9
L5L
sa(dp1554
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1555
sa(dp1556
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1557
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1558
sa(dp1559
g6
I01
sg7
g52
sg9
L5L
sa(dp1560
g6
I01
sg7
g54
sg9
L5L
sa(dp1561
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1562
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1563
sa(dp1564
g6
I01
sg7
g61
sg9
L5L
sa(dp1565
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1566
sa(dp1567
g6
I01
sg7
g66
sg9
L5L
sa(dp1568
g6
I01
sg7
g68
sg9
L5L
sa(dp1569
g6
I01
sg7
g70
sg9
L5L
sa(dp1570
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1571
sasg6
I01
sg7
VNotImplementedError
p1572
sg9
L3L
sg18
VMethod or function hasn't been implemented yet.
p1573
sa(dp1574
g1
(lp1575
(dp1576
g6
I01
sg7
g8
sg9
L5L
sa(dp1577
g6
I01
sg7
g11
sg9
L5L
sa(dp1578
g6
I01
sg7
g13
sg9
L5L
sa(dp1579
g6
I01
sg7
g15
sg9
L5L
sa(dp1580
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1581
sa(dp1582
g6
I01
sg7
g21
sg9
L5L
sa(dp1583
g6
I01
sg7
g23
sg9
L5L
sa(dp1584
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1585
sa(dp1586
g6
I01
sg7
g28
sg9
L5L
sa(dp1587
g6
I01
sg7
g30
sg9
L5L
sa(dp1588
g6
I01
sg7
g32
sg9
L5L
sa(dp1589
g6
I01
sg7
g34
sg9
L5L
sa(dp1590
g6
I01
sg7
g36
sg9
L5L
sa(dp1591
g6
I01
sg7
g38
sg9
L5L
sa(dp1592
g6
I01
sg7
g40
sg9
L5L
sa(dp1593
g6
I01
sg7
g42
sg9
L5L
sa(dp1594
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1595
sa(dp1596
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1597
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1598
sa(dp1599
g6
I01
sg7
g52
sg9
L5L
sa(dp1600
g6
I01
sg7
g54
sg9
L5L
sa(dp1601
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1602
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1603
sa(dp1604
g6
I01
sg7
g61
sg9
L5L
sa(dp1605
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1606
sa(dp1607
g6
I01
sg7
g66
sg9
L5L
sa(dp1608
g6
I01
sg7
g68
sg9
L5L
sa(dp1609
g6
I01
sg7
g70
sg9
L5L
sa(dp1610
g6
I01
sg7
g233
sg9
L5L
sa(dp1611
g6
I01
sg7
g235
sg9
L5L
sa(dp1612
g6
I01
sg7
g237
sg9
L5L
sa(dp1613
g6
I01
sg7
g239
sg9
L5L
sa(dp1614
g6
I01
sg7
g241
sg9
L5L
sa(dp1615
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1616
sasg6
I01
sg7
VOSError
p1617
sg9
L3L
sg18
VBase class for I/O related errors.
p1618
sa(dp1619
g1
(lp1620
(dp1621
g6
I01
sg7
g8
sg9
L5L
sa(dp1622
g6
I01
sg7
g11
sg9
L5L
sa(dp1623
g6
I01
sg7
g13
sg9
L5L
sa(dp1624
g6
I01
sg7
g15
sg9
L5L
sa(dp1625
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1626
sa(dp1627
g6
I01
sg7
g21
sg9
L5L
sa(dp1628
g6
I01
sg7
g23
sg9
L5L
sa(dp1629
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1630
sa(dp1631
g6
I01
sg7
g28
sg9
L5L
sa(dp1632
g6
I01
sg7
g30
sg9
L5L
sa(dp1633
g6
I01
sg7
g32
sg9
L5L
sa(dp1634
g6
I01
sg7
g34
sg9
L5L
sa(dp1635
g6
I01
sg7
g36
sg9
L5L
sa(dp1636
g6
I01
sg7
g38
sg9
L5L
sa(dp1637
g6
I01
sg7
g40
sg9
L5L
sa(dp1638
g6
I01
sg7
g42
sg9
L5L
sa(dp1639
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1640
sa(dp1641
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1642
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1643
sa(dp1644
g6
I01
sg7
g52
sg9
L5L
sa(dp1645
g6
I01
sg7
g54
sg9
L5L
sa(dp1646
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1647
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1648
sa(dp1649
g6
I01
sg7
g61
sg9
L5L
sa(dp1650
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1651
sa(dp1652
g6
I01
sg7
g66
sg9
L5L
sa(dp1653
g6
I01
sg7
g68
sg9
L5L
sa(dp1654
g6
I01
sg7
g70
sg9
L5L
sa(dp1655
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1656
sasg6
I01
sg7
VOverflowError
p1657
sg9
L3L
sg18
VResult too large to be represented.
p1658
sa(dp1659
g1
(lp1660
(dp1661
g6
I01
sg7
g8
sg9
L5L
sa(dp1662
g6
I01
sg7
g11
sg9
L5L
sa(dp1663
g6
I01
sg7
g13
sg9
L5L
sa(dp1664
g6
I01
sg7
g15
sg9
L5L
sa(dp1665
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1666
sa(dp1667
g6
I01
sg7
g21
sg9
L5L
sa(dp1668
g6
I01
sg7
g23
sg9
L5L
sa(dp1669
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1670
sa(dp1671
g6
I01
sg7
g28
sg9
L5L
sa(dp1672
g6
I01
sg7
g30
sg9
L5L
sa(dp1673
g6
I01
sg7
g32
sg9
L5L
sa(dp1674
g6
I01
sg7
g34
sg9
L5L
sa(dp1675
g6
I01
sg7
g36
sg9
L5L
sa(dp1676
g6
I01
sg7
g38
sg9
L5L
sa(dp1677
g6
I01
sg7
g40
sg9
L5L
sa(dp1678
g6
I01
sg7
g42
sg9
L5L
sa(dp1679
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1680
sa(dp1681
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1682
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1683
sa(dp1684
g6
I01
sg7
g52
sg9
L5L
sa(dp1685
g6
I01
sg7
g54
sg9
L5L
sa(dp1686
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1687
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1688
sa(dp1689
g6
I01
sg7
g61
sg9
L5L
sa(dp1690
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1691
sa(dp1692
g6
I01
sg7
g66
sg9
L5L
sa(dp1693
g6
I01
sg7
g68
sg9
L5L
sa(dp1694
g6
I01
sg7
g70
sg9
L5L
sa(dp1695
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1696
sasg6
I01
sg7
VPendingDeprecationWarning
p1697
sg9
L3L
sg18
VBase class for warnings about features which will be deprecated\u000ain the future.
p1698
sa(dp1699
g1
(lp1700
(dp1701
g6
I01
sg7
g8
sg9
L5L
sa(dp1702
g6
I01
sg7
g11
sg9
L5L
sa(dp1703
g6
I01
sg7
g13
sg9
L5L
sa(dp1704
g6
I01
sg7
g15
sg9
L5L
sa(dp1705
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1706
sa(dp1707
g6
I01
sg7
g21
sg9
L5L
sa(dp1708
g6
I01
sg7
g23
sg9
L5L
sa(dp1709
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1710
sa(dp1711
g6
I01
sg7
g28
sg9
L5L
sa(dp1712
g6
I01
sg7
g30
sg9
L5L
sa(dp1713
g6
I01
sg7
g32
sg9
L5L
sa(dp1714
g6
I01
sg7
g34
sg9
L5L
sa(dp1715
g6
I01
sg7
g36
sg9
L5L
sa(dp1716
g6
I01
sg7
g38
sg9
L5L
sa(dp1717
g6
I01
sg7
g40
sg9
L5L
sa(dp1718
g6
I01
sg7
g42
sg9
L5L
sa(dp1719
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1720
sa(dp1721
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1722
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1723
sa(dp1724
g6
I01
sg7
g52
sg9
L5L
sa(dp1725
g6
I01
sg7
g54
sg9
L5L
sa(dp1726
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1727
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1728
sa(dp1729
g6
I01
sg7
g61
sg9
L5L
sa(dp1730
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1731
sa(dp1732
g6
I01
sg7
g66
sg9
L5L
sa(dp1733
g6
I01
sg7
g68
sg9
L5L
sa(dp1734
g6
I01
sg7
g70
sg9
L5L
sa(dp1735
g6
I01
sg7
g233
sg9
L5L
sa(dp1736
g6
I01
sg7
g235
sg9
L5L
sa(dp1737
g6
I01
sg7
g237
sg9
L5L
sa(dp1738
g6
I01
sg7
g239
sg9
L5L
sa(dp1739
g6
I01
sg7
g241
sg9
L5L
sa(dp1740
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1741
sasg6
I01
sg7
VPermissionError
p1742
sg9
L3L
sg18
VNot enough permissions.
p1743
sa(dp1744
g1
(lp1745
(dp1746
g6
I01
sg7
g8
sg9
L5L
sa(dp1747
g6
I01
sg7
g11
sg9
L5L
sa(dp1748
g6
I01
sg7
g13
sg9
L5L
sa(dp1749
g6
I01
sg7
g15
sg9
L5L
sa(dp1750
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1751
sa(dp1752
g6
I01
sg7
g21
sg9
L5L
sa(dp1753
g6
I01
sg7
g23
sg9
L5L
sa(dp1754
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1755
sa(dp1756
g6
I01
sg7
g28
sg9
L5L
sa(dp1757
g6
I01
sg7
g30
sg9
L5L
sa(dp1758
g6
I01
sg7
g32
sg9
L5L
sa(dp1759
g6
I01
sg7
g34
sg9
L5L
sa(dp1760
g6
I01
sg7
g36
sg9
L5L
sa(dp1761
g6
I01
sg7
g38
sg9
L5L
sa(dp1762
g6
I01
sg7
g40
sg9
L5L
sa(dp1763
g6
I01
sg7
g42
sg9
L5L
sa(dp1764
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1765
sa(dp1766
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1767
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1768
sa(dp1769
g6
I01
sg7
g52
sg9
L5L
sa(dp1770
g6
I01
sg7
g54
sg9
L5L
sa(dp1771
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1772
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1773
sa(dp1774
g6
I01
sg7
g61
sg9
L5L
sa(dp1775
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1776
sa(dp1777
g6
I01
sg7
g66
sg9
L5L
sa(dp1778
g6
I01
sg7
g68
sg9
L5L
sa(dp1779
g6
I01
sg7
g70
sg9
L5L
sa(dp1780
g6
I01
sg7
g233
sg9
L5L
sa(dp1781
g6
I01
sg7
g235
sg9
L5L
sa(dp1782
g6
I01
sg7
g237
sg9
L5L
sa(dp1783
g6
I01
sg7
g239
sg9
L5L
sa(dp1784
g6
I01
sg7
g241
sg9
L5L
sa(dp1785
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1786
sasg6
I01
sg7
VProcessLookupError
p1787
sg9
L3L
sg18
VProcess not found.
p1788
sa(dp1789
g1
(lp1790
(dp1791
g6
I01
sg7
g8
sg9
L5L
sa(dp1792
g6
I01
sg7
g11
sg9
L5L
sa(dp1793
g6
I01
sg7
g13
sg9
L5L
sa(dp1794
g6
I01
sg7
g15
sg9
L5L
sa(dp1795
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1796
sa(dp1797
g6
I01
sg7
g21
sg9
L5L
sa(dp1798
g6
I01
sg7
g23
sg9
L5L
sa(dp1799
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1800
sa(dp1801
g6
I01
sg7
g28
sg9
L5L
sa(dp1802
g6
I01
sg7
g30
sg9
L5L
sa(dp1803
g6
I01
sg7
g32
sg9
L5L
sa(dp1804
g6
I01
sg7
g34
sg9
L5L
sa(dp1805
g6
I01
sg7
g36
sg9
L5L
sa(dp1806
g6
I01
sg7
g38
sg9
L5L
sa(dp1807
g6
I01
sg7
g40
sg9
L5L
sa(dp1808
g6
I01
sg7
g42
sg9
L5L
sa(dp1809
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1810
sa(dp1811
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1812
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1813
sa(dp1814
g6
I01
sg7
g52
sg9
L5L
sa(dp1815
g6
I01
sg7
g54
sg9
L5L
sa(dp1816
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1817
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1818
sa(dp1819
g6
I01
sg7
g61
sg9
L5L
sa(dp1820
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1821
sa(dp1822
g6
I01
sg7
g66
sg9
L5L
sa(dp1823
g6
I01
sg7
g68
sg9
L5L
sa(dp1824
g6
I01
sg7
g70
sg9
L5L
sa(dp1825
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1826
sasg6
I01
sg7
VRecursionError
p1827
sg9
L3L
sg18
VRecursion limit exceeded.
p1828
sa(dp1829
g1
(lp1830
(dp1831
g6
I01
sg7
g8
sg9
L5L
sa(dp1832
g6
I01
sg7
g11
sg9
L5L
sa(dp1833
g6
I01
sg7
g13
sg9
L5L
sa(dp1834
g6
I01
sg7
g15
sg9
L5L
sa(dp1835
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1836
sa(dp1837
g6
I01
sg7
g21
sg9
L5L
sa(dp1838
g6
I01
sg7
g23
sg9
L5L
sa(dp1839
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1840
sa(dp1841
g6
I01
sg7
g28
sg9
L5L
sa(dp1842
g6
I01
sg7
g30
sg9
L5L
sa(dp1843
g6
I01
sg7
g32
sg9
L5L
sa(dp1844
g6
I01
sg7
g34
sg9
L5L
sa(dp1845
g6
I01
sg7
g36
sg9
L5L
sa(dp1846
g6
I01
sg7
g38
sg9
L5L
sa(dp1847
g6
I01
sg7
g40
sg9
L5L
sa(dp1848
g6
I01
sg7
g42
sg9
L5L
sa(dp1849
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1850
sa(dp1851
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1852
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1853
sa(dp1854
g6
I01
sg7
g52
sg9
L5L
sa(dp1855
g6
I01
sg7
g54
sg9
L5L
sa(dp1856
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1857
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1858
sa(dp1859
g6
I01
sg7
g61
sg9
L5L
sa(dp1860
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1861
sa(dp1862
g6
I01
sg7
g66
sg9
L5L
sa(dp1863
g6
I01
sg7
g68
sg9
L5L
sa(dp1864
g6
I01
sg7
g70
sg9
L5L
sa(dp1865
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1866
sasg6
I01
sg7
VReferenceError
p1867
sg9
L3L
sg18
VWeak ref proxy used after referent went away.
p1868
sa(dp1869
g1
(lp1870
(dp1871
g6
I01
sg7
g8
sg9
L5L
sa(dp1872
g6
I01
sg7
g11
sg9
L5L
sa(dp1873
g6
I01
sg7
g13
sg9
L5L
sa(dp1874
g6
I01
sg7
g15
sg9
L5L
sa(dp1875
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1876
sa(dp1877
g6
I01
sg7
g21
sg9
L5L
sa(dp1878
g6
I01
sg7
g23
sg9
L5L
sa(dp1879
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1880
sa(dp1881
g6
I01
sg7
g28
sg9
L5L
sa(dp1882
g6
I01
sg7
g30
sg9
L5L
sa(dp1883
g6
I01
sg7
g32
sg9
L5L
sa(dp1884
g6
I01
sg7
g34
sg9
L5L
sa(dp1885
g6
I01
sg7
g36
sg9
L5L
sa(dp1886
g6
I01
sg7
g38
sg9
L5L
sa(dp1887
g6
I01
sg7
g40
sg9
L5L
sa(dp1888
g6
I01
sg7
g42
sg9
L5L
sa(dp1889
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1890
sa(dp1891
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1892
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1893
sa(dp1894
g6
I01
sg7
g52
sg9
L5L
sa(dp1895
g6
I01
sg7
g54
sg9
L5L
sa(dp1896
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1897
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1898
sa(dp1899
g6
I01
sg7
g61
sg9
L5L
sa(dp1900
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1901
sa(dp1902
g6
I01
sg7
g66
sg9
L5L
sa(dp1903
g6
I01
sg7
g68
sg9
L5L
sa(dp1904
g6
I01
sg7
g70
sg9
L5L
sa(dp1905
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1906
sasg6
I01
sg7
VResourceWarning
p1907
sg9
L3L
sg18
VBase class for warnings about resource usage.
p1908
sa(dp1909
g1
(lp1910
(dp1911
g6
I01
sg7
g8
sg9
L5L
sa(dp1912
g6
I01
sg7
g11
sg9
L5L
sa(dp1913
g6
I01
sg7
g13
sg9
L5L
sa(dp1914
g6
I01
sg7
g15
sg9
L5L
sa(dp1915
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1916
sa(dp1917
g6
I01
sg7
g21
sg9
L5L
sa(dp1918
g6
I01
sg7
g23
sg9
L5L
sa(dp1919
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1920
sa(dp1921
g6
I01
sg7
g28
sg9
L5L
sa(dp1922
g6
I01
sg7
g30
sg9
L5L
sa(dp1923
g6
I01
sg7
g32
sg9
L5L
sa(dp1924
g6
I01
sg7
g34
sg9
L5L
sa(dp1925
g6
I01
sg7
g36
sg9
L5L
sa(dp1926
g6
I01
sg7
g38
sg9
L5L
sa(dp1927
g6
I01
sg7
g40
sg9
L5L
sa(dp1928
g6
I01
sg7
g42
sg9
L5L
sa(dp1929
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1930
sa(dp1931
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1932
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1933
sa(dp1934
g6
I01
sg7
g52
sg9
L5L
sa(dp1935
g6
I01
sg7
g54
sg9
L5L
sa(dp1936
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1937
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1938
sa(dp1939
g6
I01
sg7
g61
sg9
L5L
sa(dp1940
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1941
sa(dp1942
g6
I01
sg7
g66
sg9
L5L
sa(dp1943
g6
I01
sg7
g68
sg9
L5L
sa(dp1944
g6
I01
sg7
g70
sg9
L5L
sa(dp1945
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1946
sasg6
I01
sg7
VRuntimeError
p1947
sg9
L3L
sg18
VUnspecified run-time error.
p1948
sa(dp1949
g1
(lp1950
(dp1951
g6
I01
sg7
g8
sg9
L5L
sa(dp1952
g6
I01
sg7
g11
sg9
L5L
sa(dp1953
g6
I01
sg7
g13
sg9
L5L
sa(dp1954
g6
I01
sg7
g15
sg9
L5L
sa(dp1955
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1956
sa(dp1957
g6
I01
sg7
g21
sg9
L5L
sa(dp1958
g6
I01
sg7
g23
sg9
L5L
sa(dp1959
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p1960
sa(dp1961
g6
I01
sg7
g28
sg9
L5L
sa(dp1962
g6
I01
sg7
g30
sg9
L5L
sa(dp1963
g6
I01
sg7
g32
sg9
L5L
sa(dp1964
g6
I01
sg7
g34
sg9
L5L
sa(dp1965
g6
I01
sg7
g36
sg9
L5L
sa(dp1966
g6
I01
sg7
g38
sg9
L5L
sa(dp1967
g6
I01
sg7
g40
sg9
L5L
sa(dp1968
g6
I01
sg7
g42
sg9
L5L
sa(dp1969
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p1970
sa(dp1971
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp1972
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p1973
sa(dp1974
g6
I01
sg7
g52
sg9
L5L
sa(dp1975
g6
I01
sg7
g54
sg9
L5L
sa(dp1976
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp1977
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p1978
sa(dp1979
g6
I01
sg7
g61
sg9
L5L
sa(dp1980
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p1981
sa(dp1982
g6
I01
sg7
g66
sg9
L5L
sa(dp1983
g6
I01
sg7
g68
sg9
L5L
sa(dp1984
g6
I01
sg7
g70
sg9
L5L
sa(dp1985
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p1986
sasg6
I01
sg7
VRuntimeWarning
p1987
sg9
L3L
sg18
VBase class for warnings about dubious runtime behavior.
p1988
sa(dp1989
g1
(lp1990
(dp1991
g6
I01
sg7
g8
sg9
L5L
sa(dp1992
g6
I01
sg7
g11
sg9
L5L
sa(dp1993
g6
I01
sg7
g13
sg9
L5L
sa(dp1994
g6
I01
sg7
g15
sg9
L5L
sa(dp1995
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p1996
sa(dp1997
g6
I01
sg7
g21
sg9
L5L
sa(dp1998
g6
I01
sg7
g23
sg9
L5L
sa(dp1999
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2000
sa(dp2001
g6
I01
sg7
g28
sg9
L5L
sa(dp2002
g6
I01
sg7
g30
sg9
L5L
sa(dp2003
g6
I01
sg7
g32
sg9
L5L
sa(dp2004
g6
I01
sg7
g34
sg9
L5L
sa(dp2005
g6
I01
sg7
g36
sg9
L5L
sa(dp2006
g6
I01
sg7
g38
sg9
L5L
sa(dp2007
g6
I01
sg7
g40
sg9
L5L
sa(dp2008
g6
I01
sg7
g42
sg9
L5L
sa(dp2009
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2010
sa(dp2011
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2012
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2013
sa(dp2014
g6
I01
sg7
g52
sg9
L5L
sa(dp2015
g6
I01
sg7
g54
sg9
L5L
sa(dp2016
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2017
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2018
sa(dp2019
g6
I01
sg7
g61
sg9
L5L
sa(dp2020
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2021
sa(dp2022
g6
I01
sg7
g66
sg9
L5L
sa(dp2023
g6
I01
sg7
g68
sg9
L5L
sa(dp2024
g6
I01
sg7
g70
sg9
L5L
sa(dp2025
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2026
sasg6
I01
sg7
VStopAsyncIteration
p2027
sg9
L3L
sg18
VSignal the end from iterator.__anext__().
p2028
sa(dp2029
g1
(lp2030
(dp2031
g6
I01
sg7
g8
sg9
L5L
sa(dp2032
g6
I01
sg7
g11
sg9
L5L
sa(dp2033
g6
I01
sg7
g13
sg9
L5L
sa(dp2034
g6
I01
sg7
g15
sg9
L5L
sa(dp2035
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2036
sa(dp2037
g6
I01
sg7
g21
sg9
L5L
sa(dp2038
g6
I01
sg7
g23
sg9
L5L
sa(dp2039
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2040
sa(dp2041
g6
I01
sg7
g28
sg9
L5L
sa(dp2042
g6
I01
sg7
g30
sg9
L5L
sa(dp2043
g6
I01
sg7
g32
sg9
L5L
sa(dp2044
g6
I01
sg7
g34
sg9
L5L
sa(dp2045
g6
I01
sg7
g36
sg9
L5L
sa(dp2046
g6
I01
sg7
g38
sg9
L5L
sa(dp2047
g6
I01
sg7
g40
sg9
L5L
sa(dp2048
g6
I01
sg7
g42
sg9
L5L
sa(dp2049
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2050
sa(dp2051
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2052
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2053
sa(dp2054
g6
I01
sg7
g52
sg9
L5L
sa(dp2055
g6
I01
sg7
g54
sg9
L5L
sa(dp2056
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2057
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2058
sa(dp2059
g6
I01
sg7
g61
sg9
L5L
sa(dp2060
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2061
sa(dp2062
g6
I01
sg7
g66
sg9
L5L
sa(dp2063
g6
I01
sg7
g68
sg9
L5L
sa(dp2064
g6
I01
sg7
g70
sg9
L5L
sa(dp2065
g6
I01
sg7
Vvalue
p2066
sg9
L5L
sa(dp2067
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2068
sasg6
I01
sg7
VStopIteration
p2069
sg9
L3L
sg18
VSignal the end from iterator.__next__().
p2070
sa(dp2071
g1
(lp2072
(dp2073
g6
I01
sg7
g8
sg9
L5L
sa(dp2074
g6
I01
sg7
g11
sg9
L5L
sa(dp2075
g6
I01
sg7
g13
sg9
L5L
sa(dp2076
g6
I01
sg7
g15
sg9
L5L
sa(dp2077
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2078
sa(dp2079
g6
I01
sg7
g21
sg9
L5L
sa(dp2080
g6
I01
sg7
g23
sg9
L5L
sa(dp2081
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2082
sa(dp2083
g6
I01
sg7
g28
sg9
L5L
sa(dp2084
g6
I01
sg7
g30
sg9
L5L
sa(dp2085
g6
I01
sg7
g32
sg9
L5L
sa(dp2086
g6
I01
sg7
g34
sg9
L5L
sa(dp2087
g6
I01
sg7
g36
sg9
L5L
sa(dp2088
g6
I01
sg7
g38
sg9
L5L
sa(dp2089
g6
I01
sg7
g40
sg9
L5L
sa(dp2090
g6
I01
sg7
g42
sg9
L5L
sa(dp2091
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2092
sa(dp2093
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2094
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2095
sa(dp2096
g6
I01
sg7
g52
sg9
L5L
sa(dp2097
g6
I01
sg7
g54
sg9
L5L
sa(dp2098
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2099
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2100
sa(dp2101
g6
I01
sg7
g61
sg9
L5L
sa(dp2102
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2103
sa(dp2104
g6
I01
sg7
g66
sg9
L5L
sa(dp2105
g6
I01
sg7
g68
sg9
L5L
sa(dp2106
g6
I01
sg7
g70
sg9
L5L
sa(dp2107
g6
I01
sg7
g237
sg9
L5L
sa(dp2108
g6
I01
sg7
g1143
sg9
L5L
sa(dp2109
g6
I01
sg7
g1057
sg9
L5L
sa(dp2110
g6
I01
sg7
g1146
sg9
L5L
sa(dp2111
g6
I01
sg7
g1148
sg9
L5L
sa(dp2112
g6
I01
sg7
g1150
sg9
L5L
sa(dp2113
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2114
sasg6
I01
sg7
VSyntaxError
p2115
sg9
L3L
sg18
VInvalid syntax.
p2116
sa(dp2117
g1
(lp2118
(dp2119
g6
I01
sg7
g8
sg9
L5L
sa(dp2120
g6
I01
sg7
g11
sg9
L5L
sa(dp2121
g6
I01
sg7
g13
sg9
L5L
sa(dp2122
g6
I01
sg7
g15
sg9
L5L
sa(dp2123
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2124
sa(dp2125
g6
I01
sg7
g21
sg9
L5L
sa(dp2126
g6
I01
sg7
g23
sg9
L5L
sa(dp2127
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2128
sa(dp2129
g6
I01
sg7
g28
sg9
L5L
sa(dp2130
g6
I01
sg7
g30
sg9
L5L
sa(dp2131
g6
I01
sg7
g32
sg9
L5L
sa(dp2132
g6
I01
sg7
g34
sg9
L5L
sa(dp2133
g6
I01
sg7
g36
sg9
L5L
sa(dp2134
g6
I01
sg7
g38
sg9
L5L
sa(dp2135
g6
I01
sg7
g40
sg9
L5L
sa(dp2136
g6
I01
sg7
g42
sg9
L5L
sa(dp2137
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2138
sa(dp2139
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2140
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2141
sa(dp2142
g6
I01
sg7
g52
sg9
L5L
sa(dp2143
g6
I01
sg7
g54
sg9
L5L
sa(dp2144
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2145
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2146
sa(dp2147
g6
I01
sg7
g61
sg9
L5L
sa(dp2148
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2149
sa(dp2150
g6
I01
sg7
g66
sg9
L5L
sa(dp2151
g6
I01
sg7
g68
sg9
L5L
sa(dp2152
g6
I01
sg7
g70
sg9
L5L
sa(dp2153
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2154
sasg6
I01
sg7
VSyntaxWarning
p2155
sg9
L3L
sg18
VBase class for warnings about dubious syntax.
p2156
sa(dp2157
g1
(lp2158
(dp2159
g6
I01
sg7
g8
sg9
L5L
sa(dp2160
g6
I01
sg7
g11
sg9
L5L
sa(dp2161
g6
I01
sg7
g13
sg9
L5L
sa(dp2162
g6
I01
sg7
g15
sg9
L5L
sa(dp2163
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2164
sa(dp2165
g6
I01
sg7
g21
sg9
L5L
sa(dp2166
g6
I01
sg7
g23
sg9
L5L
sa(dp2167
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2168
sa(dp2169
g6
I01
sg7
g28
sg9
L5L
sa(dp2170
g6
I01
sg7
g30
sg9
L5L
sa(dp2171
g6
I01
sg7
g32
sg9
L5L
sa(dp2172
g6
I01
sg7
g34
sg9
L5L
sa(dp2173
g6
I01
sg7
g36
sg9
L5L
sa(dp2174
g6
I01
sg7
g38
sg9
L5L
sa(dp2175
g6
I01
sg7
g40
sg9
L5L
sa(dp2176
g6
I01
sg7
g42
sg9
L5L
sa(dp2177
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2178
sa(dp2179
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2180
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2181
sa(dp2182
g6
I01
sg7
g52
sg9
L5L
sa(dp2183
g6
I01
sg7
g54
sg9
L5L
sa(dp2184
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2185
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2186
sa(dp2187
g6
I01
sg7
g61
sg9
L5L
sa(dp2188
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2189
sa(dp2190
g6
I01
sg7
g66
sg9
L5L
sa(dp2191
g6
I01
sg7
g68
sg9
L5L
sa(dp2192
g6
I01
sg7
g70
sg9
L5L
sa(dp2193
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2194
sasg6
I01
sg7
VSystemError
p2195
sg9
L3L
sg18
VInternal error in the Python interpreter.\u000a\u000aPlease report this to the Python maintainer, along with the traceback,\u000athe Python version, and the hardware/OS platform and version.
p2196
sa(dp2197
g1
(lp2198
(dp2199
g6
I01
sg7
g8
sg9
L5L
sa(dp2200
g6
I01
sg7
g11
sg9
L5L
sa(dp2201
g6
I01
sg7
g13
sg9
L5L
sa(dp2202
g6
I01
sg7
g15
sg9
L5L
sa(dp2203
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2204
sa(dp2205
g6
I01
sg7
g21
sg9
L5L
sa(dp2206
g6
I01
sg7
g23
sg9
L5L
sa(dp2207
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2208
sa(dp2209
g6
I01
sg7
g28
sg9
L5L
sa(dp2210
g6
I01
sg7
g30
sg9
L5L
sa(dp2211
g6
I01
sg7
g32
sg9
L5L
sa(dp2212
g6
I01
sg7
g34
sg9
L5L
sa(dp2213
g6
I01
sg7
g36
sg9
L5L
sa(dp2214
g6
I01
sg7
g38
sg9
L5L
sa(dp2215
g6
I01
sg7
g40
sg9
L5L
sa(dp2216
g6
I01
sg7
g42
sg9
L5L
sa(dp2217
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2218
sa(dp2219
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2220
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2221
sa(dp2222
g6
I01
sg7
g52
sg9
L5L
sa(dp2223
g6
I01
sg7
g54
sg9
L5L
sa(dp2224
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2225
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2226
sa(dp2227
g6
I01
sg7
g61
sg9
L5L
sa(dp2228
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2229
sa(dp2230
g6
I01
sg7
g66
sg9
L5L
sa(dp2231
g6
I01
sg7
g68
sg9
L5L
sa(dp2232
g6
I01
sg7
g70
sg9
L5L
sa(dp2233
g6
I01
sg7
Vcode
p2234
sg9
L5L
sa(dp2235
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2236
sasg6
I01
sg7
VSystemExit
p2237
sg9
L3L
sg18
VRequest to exit from the interpreter.
p2238
sa(dp2239
g1
(lp2240
(dp2241
g6
I01
sg7
g8
sg9
L5L
sa(dp2242
g6
I01
sg7
g11
sg9
L5L
sa(dp2243
g6
I01
sg7
g13
sg9
L5L
sa(dp2244
g6
I01
sg7
g15
sg9
L5L
sa(dp2245
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2246
sa(dp2247
g6
I01
sg7
g21
sg9
L5L
sa(dp2248
g6
I01
sg7
g23
sg9
L5L
sa(dp2249
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2250
sa(dp2251
g6
I01
sg7
g28
sg9
L5L
sa(dp2252
g6
I01
sg7
g30
sg9
L5L
sa(dp2253
g6
I01
sg7
g32
sg9
L5L
sa(dp2254
g6
I01
sg7
g34
sg9
L5L
sa(dp2255
g6
I01
sg7
g36
sg9
L5L
sa(dp2256
g6
I01
sg7
g38
sg9
L5L
sa(dp2257
g6
I01
sg7
g40
sg9
L5L
sa(dp2258
g6
I01
sg7
g42
sg9
L5L
sa(dp2259
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2260
sa(dp2261
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2262
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2263
sa(dp2264
g6
I01
sg7
g52
sg9
L5L
sa(dp2265
g6
I01
sg7
g54
sg9
L5L
sa(dp2266
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2267
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2268
sa(dp2269
g6
I01
sg7
g61
sg9
L5L
sa(dp2270
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2271
sa(dp2272
g6
I01
sg7
g66
sg9
L5L
sa(dp2273
g6
I01
sg7
g68
sg9
L5L
sa(dp2274
g6
I01
sg7
g70
sg9
L5L
sa(dp2275
g6
I01
sg7
g237
sg9
L5L
sa(dp2276
g6
I01
sg7
g1143
sg9
L5L
sa(dp2277
g6
I01
sg7
g1057
sg9
L5L
sa(dp2278
g6
I01
sg7
g1146
sg9
L5L
sa(dp2279
g6
I01
sg7
g1148
sg9
L5L
sa(dp2280
g6
I01
sg7
g1150
sg9
L5L
sa(dp2281
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2282
sasg6
I01
sg7
VTabError
p2283
sg9
L3L
sg18
VImproper mixture of spaces and tabs.
p2284
sa(dp2285
g1
(lp2286
(dp2287
g6
I01
sg7
g8
sg9
L5L
sa(dp2288
g6
I01
sg7
g11
sg9
L5L
sa(dp2289
g6
I01
sg7
g13
sg9
L5L
sa(dp2290
g6
I01
sg7
g15
sg9
L5L
sa(dp2291
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2292
sa(dp2293
g6
I01
sg7
g21
sg9
L5L
sa(dp2294
g6
I01
sg7
g23
sg9
L5L
sa(dp2295
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2296
sa(dp2297
g6
I01
sg7
g28
sg9
L5L
sa(dp2298
g6
I01
sg7
g30
sg9
L5L
sa(dp2299
g6
I01
sg7
g32
sg9
L5L
sa(dp2300
g6
I01
sg7
g34
sg9
L5L
sa(dp2301
g6
I01
sg7
g36
sg9
L5L
sa(dp2302
g6
I01
sg7
g38
sg9
L5L
sa(dp2303
g6
I01
sg7
g40
sg9
L5L
sa(dp2304
g6
I01
sg7
g42
sg9
L5L
sa(dp2305
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2306
sa(dp2307
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2308
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2309
sa(dp2310
g6
I01
sg7
g52
sg9
L5L
sa(dp2311
g6
I01
sg7
g54
sg9
L5L
sa(dp2312
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2313
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2314
sa(dp2315
g6
I01
sg7
g61
sg9
L5L
sa(dp2316
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2317
sa(dp2318
g6
I01
sg7
g66
sg9
L5L
sa(dp2319
g6
I01
sg7
g68
sg9
L5L
sa(dp2320
g6
I01
sg7
g70
sg9
L5L
sa(dp2321
g6
I01
sg7
g233
sg9
L5L
sa(dp2322
g6
I01
sg7
g235
sg9
L5L
sa(dp2323
g6
I01
sg7
g237
sg9
L5L
sa(dp2324
g6
I01
sg7
g239
sg9
L5L
sa(dp2325
g6
I01
sg7
g241
sg9
L5L
sa(dp2326
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2327
sasg6
I01
sg7
VTimeoutError
p2328
sg9
L3L
sg18
VTimeout expired.
p2329
sa(dp2330
g6
I01
sg7
VTrue
p2331
sg9
L5L
sa(dp2332
g1
(lp2333
(dp2334
g6
I01
sg7
g8
sg9
L5L
sa(dp2335
g6
I01
sg7
g11
sg9
L5L
sa(dp2336
g6
I01
sg7
g13
sg9
L5L
sa(dp2337
g6
I01
sg7
g15
sg9
L5L
sa(dp2338
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2339
sa(dp2340
g6
I01
sg7
g21
sg9
L5L
sa(dp2341
g6
I01
sg7
g23
sg9
L5L
sa(dp2342
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2343
sa(dp2344
g6
I01
sg7
g28
sg9
L5L
sa(dp2345
g6
I01
sg7
g30
sg9
L5L
sa(dp2346
g6
I01
sg7
g32
sg9
L5L
sa(dp2347
g6
I01
sg7
g34
sg9
L5L
sa(dp2348
g6
I01
sg7
g36
sg9
L5L
sa(dp2349
g6
I01
sg7
g38
sg9
L5L
sa(dp2350
g6
I01
sg7
g40
sg9
L5L
sa(dp2351
g6
I01
sg7
g42
sg9
L5L
sa(dp2352
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2353
sa(dp2354
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2355
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2356
sa(dp2357
g6
I01
sg7
g52
sg9
L5L
sa(dp2358
g6
I01
sg7
g54
sg9
L5L
sa(dp2359
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2360
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2361
sa(dp2362
g6
I01
sg7
g61
sg9
L5L
sa(dp2363
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2364
sa(dp2365
g6
I01
sg7
g66
sg9
L5L
sa(dp2366
g6
I01
sg7
g68
sg9
L5L
sa(dp2367
g6
I01
sg7
g70
sg9
L5L
sa(dp2368
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2369
sasg6
I01
sg7
VTypeError
p2370
sg9
L3L
sg18
VInappropriate argument type.
p2371
sa(dp2372
g1
(lp2373
(dp2374
g6
I01
sg7
g8
sg9
L5L
sa(dp2375
g6
I01
sg7
g11
sg9
L5L
sa(dp2376
g6
I01
sg7
g13
sg9
L5L
sa(dp2377
g6
I01
sg7
g15
sg9
L5L
sa(dp2378
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2379
sa(dp2380
g6
I01
sg7
g21
sg9
L5L
sa(dp2381
g6
I01
sg7
g23
sg9
L5L
sa(dp2382
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2383
sa(dp2384
g6
I01
sg7
g28
sg9
L5L
sa(dp2385
g6
I01
sg7
g30
sg9
L5L
sa(dp2386
g6
I01
sg7
g32
sg9
L5L
sa(dp2387
g6
I01
sg7
g34
sg9
L5L
sa(dp2388
g6
I01
sg7
g36
sg9
L5L
sa(dp2389
g6
I01
sg7
g38
sg9
L5L
sa(dp2390
g6
I01
sg7
g40
sg9
L5L
sa(dp2391
g6
I01
sg7
g42
sg9
L5L
sa(dp2392
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2393
sa(dp2394
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2395
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2396
sa(dp2397
g6
I01
sg7
g52
sg9
L5L
sa(dp2398
g6
I01
sg7
g54
sg9
L5L
sa(dp2399
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2400
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2401
sa(dp2402
g6
I01
sg7
g61
sg9
L5L
sa(dp2403
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2404
sa(dp2405
g6
I01
sg7
g66
sg9
L5L
sa(dp2406
g6
I01
sg7
g68
sg9
L5L
sa(dp2407
g6
I01
sg7
g70
sg9
L5L
sa(dp2408
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2409
sasg6
I01
sg7
VUnboundLocalError
p2410
sg9
L3L
sg18
VLocal name referenced but not bound to a value.
p2411
sa(dp2412
g1
(lp2413
(dp2414
g6
I01
sg7
g8
sg9
L5L
sa(dp2415
g6
I01
sg7
g11
sg9
L5L
sa(dp2416
g6
I01
sg7
g13
sg9
L5L
sa(dp2417
g6
I01
sg7
g15
sg9
L5L
sa(dp2418
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2419
sa(dp2420
g6
I01
sg7
g21
sg9
L5L
sa(dp2421
g6
I01
sg7
g23
sg9
L5L
sa(dp2422
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2423
sa(dp2424
g6
I01
sg7
g28
sg9
L5L
sa(dp2425
g6
I01
sg7
g30
sg9
L5L
sa(dp2426
g6
I01
sg7
g32
sg9
L5L
sa(dp2427
g6
I01
sg7
g34
sg9
L5L
sa(dp2428
g6
I01
sg7
g36
sg9
L5L
sa(dp2429
g6
I01
sg7
g38
sg9
L5L
sa(dp2430
g6
I01
sg7
g40
sg9
L5L
sa(dp2431
g6
I01
sg7
g42
sg9
L5L
sa(dp2432
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2433
sa(dp2434
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2435
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2436
sa(dp2437
g6
I01
sg7
g52
sg9
L5L
sa(dp2438
g6
I01
sg7
g54
sg9
L5L
sa(dp2439
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2440
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2441
sa(dp2442
g6
I01
sg7
g61
sg9
L5L
sa(dp2443
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2444
sa(dp2445
g6
I01
sg7
g66
sg9
L5L
sa(dp2446
g6
I01
sg7
g68
sg9
L5L
sa(dp2447
g6
I01
sg7
g70
sg9
L5L
sa(dp2448
g6
I01
sg7
Vencoding
p2449
sg9
L5L
sa(dp2450
g6
I01
sg7
Vend
p2451
sg9
L5L
sa(dp2452
g6
I01
sg7
Vobject
p2453
sg9
L5L
sa(dp2454
g6
I01
sg7
Vreason
p2455
sg9
L5L
sa(dp2456
g6
I01
sg7
Vstart
p2457
sg9
L5L
sa(dp2458
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2459
sasg6
I01
sg7
VUnicodeDecodeError
p2460
sg9
L3L
sg18
VUnicode decoding error.
p2461
sa(dp2462
g1
(lp2463
(dp2464
g6
I01
sg7
g8
sg9
L5L
sa(dp2465
g6
I01
sg7
g11
sg9
L5L
sa(dp2466
g6
I01
sg7
g13
sg9
L5L
sa(dp2467
g6
I01
sg7
g15
sg9
L5L
sa(dp2468
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2469
sa(dp2470
g6
I01
sg7
g21
sg9
L5L
sa(dp2471
g6
I01
sg7
g23
sg9
L5L
sa(dp2472
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2473
sa(dp2474
g6
I01
sg7
g28
sg9
L5L
sa(dp2475
g6
I01
sg7
g30
sg9
L5L
sa(dp2476
g6
I01
sg7
g32
sg9
L5L
sa(dp2477
g6
I01
sg7
g34
sg9
L5L
sa(dp2478
g6
I01
sg7
g36
sg9
L5L
sa(dp2479
g6
I01
sg7
g38
sg9
L5L
sa(dp2480
g6
I01
sg7
g40
sg9
L5L
sa(dp2481
g6
I01
sg7
g42
sg9
L5L
sa(dp2482
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2483
sa(dp2484
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2485
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2486
sa(dp2487
g6
I01
sg7
g52
sg9
L5L
sa(dp2488
g6
I01
sg7
g54
sg9
L5L
sa(dp2489
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2490
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2491
sa(dp2492
g6
I01
sg7
g61
sg9
L5L
sa(dp2493
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2494
sa(dp2495
g6
I01
sg7
g66
sg9
L5L
sa(dp2496
g6
I01
sg7
g68
sg9
L5L
sa(dp2497
g6
I01
sg7
g70
sg9
L5L
sa(dp2498
g6
I01
sg7
g2449
sg9
L5L
sa(dp2499
g6
I01
sg7
g2451
sg9
L5L
sa(dp2500
g6
I01
sg7
g2453
sg9
L5L
sa(dp2501
g6
I01
sg7
g2455
sg9
L5L
sa(dp2502
g6
I01
sg7
g2457
sg9
L5L
sa(dp2503
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2504
sasg6
I01
sg7
VUnicodeEncodeError
p2505
sg9
L3L
sg18
VUnicode encoding error.
p2506
sa(dp2507
g1
(lp2508
(dp2509
g6
I01
sg7
g8
sg9
L5L
sa(dp2510
g6
I01
sg7
g11
sg9
L5L
sa(dp2511
g6
I01
sg7
g13
sg9
L5L
sa(dp2512
g6
I01
sg7
g15
sg9
L5L
sa(dp2513
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2514
sa(dp2515
g6
I01
sg7
g21
sg9
L5L
sa(dp2516
g6
I01
sg7
g23
sg9
L5L
sa(dp2517
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2518
sa(dp2519
g6
I01
sg7
g28
sg9
L5L
sa(dp2520
g6
I01
sg7
g30
sg9
L5L
sa(dp2521
g6
I01
sg7
g32
sg9
L5L
sa(dp2522
g6
I01
sg7
g34
sg9
L5L
sa(dp2523
g6
I01
sg7
g36
sg9
L5L
sa(dp2524
g6
I01
sg7
g38
sg9
L5L
sa(dp2525
g6
I01
sg7
g40
sg9
L5L
sa(dp2526
g6
I01
sg7
g42
sg9
L5L
sa(dp2527
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2528
sa(dp2529
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2530
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2531
sa(dp2532
g6
I01
sg7
g52
sg9
L5L
sa(dp2533
g6
I01
sg7
g54
sg9
L5L
sa(dp2534
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2535
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2536
sa(dp2537
g6
I01
sg7
g61
sg9
L5L
sa(dp2538
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2539
sa(dp2540
g6
I01
sg7
g66
sg9
L5L
sa(dp2541
g6
I01
sg7
g68
sg9
L5L
sa(dp2542
g6
I01
sg7
g70
sg9
L5L
sa(dp2543
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2544
sasg6
I01
sg7
VUnicodeError
p2545
sg9
L3L
sg18
VUnicode related error.
p2546
sa(dp2547
g1
(lp2548
(dp2549
g6
I01
sg7
g8
sg9
L5L
sa(dp2550
g6
I01
sg7
g11
sg9
L5L
sa(dp2551
g6
I01
sg7
g13
sg9
L5L
sa(dp2552
g6
I01
sg7
g15
sg9
L5L
sa(dp2553
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2554
sa(dp2555
g6
I01
sg7
g21
sg9
L5L
sa(dp2556
g6
I01
sg7
g23
sg9
L5L
sa(dp2557
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2558
sa(dp2559
g6
I01
sg7
g28
sg9
L5L
sa(dp2560
g6
I01
sg7
g30
sg9
L5L
sa(dp2561
g6
I01
sg7
g32
sg9
L5L
sa(dp2562
g6
I01
sg7
g34
sg9
L5L
sa(dp2563
g6
I01
sg7
g36
sg9
L5L
sa(dp2564
g6
I01
sg7
g38
sg9
L5L
sa(dp2565
g6
I01
sg7
g40
sg9
L5L
sa(dp2566
g6
I01
sg7
g42
sg9
L5L
sa(dp2567
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2568
sa(dp2569
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2570
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2571
sa(dp2572
g6
I01
sg7
g52
sg9
L5L
sa(dp2573
g6
I01
sg7
g54
sg9
L5L
sa(dp2574
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2575
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2576
sa(dp2577
g6
I01
sg7
g61
sg9
L5L
sa(dp2578
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2579
sa(dp2580
g6
I01
sg7
g66
sg9
L5L
sa(dp2581
g6
I01
sg7
g68
sg9
L5L
sa(dp2582
g6
I01
sg7
g70
sg9
L5L
sa(dp2583
g6
I01
sg7
g2449
sg9
L5L
sa(dp2584
g6
I01
sg7
g2451
sg9
L5L
sa(dp2585
g6
I01
sg7
g2453
sg9
L5L
sa(dp2586
g6
I01
sg7
g2455
sg9
L5L
sa(dp2587
g6
I01
sg7
g2457
sg9
L5L
sa(dp2588
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2589
sasg6
I01
sg7
VUnicodeTranslateError
p2590
sg9
L3L
sg18
VUnicode translation error.
p2591
sa(dp2592
g1
(lp2593
(dp2594
g6
I01
sg7
g8
sg9
L5L
sa(dp2595
g6
I01
sg7
g11
sg9
L5L
sa(dp2596
g6
I01
sg7
g13
sg9
L5L
sa(dp2597
g6
I01
sg7
g15
sg9
L5L
sa(dp2598
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2599
sa(dp2600
g6
I01
sg7
g21
sg9
L5L
sa(dp2601
g6
I01
sg7
g23
sg9
L5L
sa(dp2602
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2603
sa(dp2604
g6
I01
sg7
g28
sg9
L5L
sa(dp2605
g6
I01
sg7
g30
sg9
L5L
sa(dp2606
g6
I01
sg7
g32
sg9
L5L
sa(dp2607
g6
I01
sg7
g34
sg9
L5L
sa(dp2608
g6
I01
sg7
g36
sg9
L5L
sa(dp2609
g6
I01
sg7
g38
sg9
L5L
sa(dp2610
g6
I01
sg7
g40
sg9
L5L
sa(dp2611
g6
I01
sg7
g42
sg9
L5L
sa(dp2612
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2613
sa(dp2614
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2615
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2616
sa(dp2617
g6
I01
sg7
g52
sg9
L5L
sa(dp2618
g6
I01
sg7
g54
sg9
L5L
sa(dp2619
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2620
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2621
sa(dp2622
g6
I01
sg7
g61
sg9
L5L
sa(dp2623
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2624
sa(dp2625
g6
I01
sg7
g66
sg9
L5L
sa(dp2626
g6
I01
sg7
g68
sg9
L5L
sa(dp2627
g6
I01
sg7
g70
sg9
L5L
sa(dp2628
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2629
sasg6
I01
sg7
VUnicodeWarning
p2630
sg9
L3L
sg18
VBase class for warnings about Unicode related problems, mostly\u000arelated to conversion problems.
p2631
sa(dp2632
g1
(lp2633
(dp2634
g6
I01
sg7
g8
sg9
L5L
sa(dp2635
g6
I01
sg7
g11
sg9
L5L
sa(dp2636
g6
I01
sg7
g13
sg9
L5L
sa(dp2637
g6
I01
sg7
g15
sg9
L5L
sa(dp2638
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2639
sa(dp2640
g6
I01
sg7
g21
sg9
L5L
sa(dp2641
g6
I01
sg7
g23
sg9
L5L
sa(dp2642
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2643
sa(dp2644
g6
I01
sg7
g28
sg9
L5L
sa(dp2645
g6
I01
sg7
g30
sg9
L5L
sa(dp2646
g6
I01
sg7
g32
sg9
L5L
sa(dp2647
g6
I01
sg7
g34
sg9
L5L
sa(dp2648
g6
I01
sg7
g36
sg9
L5L
sa(dp2649
g6
I01
sg7
g38
sg9
L5L
sa(dp2650
g6
I01
sg7
g40
sg9
L5L
sa(dp2651
g6
I01
sg7
g42
sg9
L5L
sa(dp2652
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2653
sa(dp2654
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2655
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2656
sa(dp2657
g6
I01
sg7
g52
sg9
L5L
sa(dp2658
g6
I01
sg7
g54
sg9
L5L
sa(dp2659
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2660
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2661
sa(dp2662
g6
I01
sg7
g61
sg9
L5L
sa(dp2663
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2664
sa(dp2665
g6
I01
sg7
g66
sg9
L5L
sa(dp2666
g6
I01
sg7
g68
sg9
L5L
sa(dp2667
g6
I01
sg7
g70
sg9
L5L
sa(dp2668
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2669
sasg6
I01
sg7
VUserWarning
p2670
sg9
L3L
sg18
VBase class for warnings generated by user code.
p2671
sa(dp2672
g1
(lp2673
(dp2674
g6
I01
sg7
g8
sg9
L5L
sa(dp2675
g6
I01
sg7
g11
sg9
L5L
sa(dp2676
g6
I01
sg7
g13
sg9
L5L
sa(dp2677
g6
I01
sg7
g15
sg9
L5L
sa(dp2678
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2679
sa(dp2680
g6
I01
sg7
g21
sg9
L5L
sa(dp2681
g6
I01
sg7
g23
sg9
L5L
sa(dp2682
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2683
sa(dp2684
g6
I01
sg7
g28
sg9
L5L
sa(dp2685
g6
I01
sg7
g30
sg9
L5L
sa(dp2686
g6
I01
sg7
g32
sg9
L5L
sa(dp2687
g6
I01
sg7
g34
sg9
L5L
sa(dp2688
g6
I01
sg7
g36
sg9
L5L
sa(dp2689
g6
I01
sg7
g38
sg9
L5L
sa(dp2690
g6
I01
sg7
g40
sg9
L5L
sa(dp2691
g6
I01
sg7
g42
sg9
L5L
sa(dp2692
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2693
sa(dp2694
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2695
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2696
sa(dp2697
g6
I01
sg7
g52
sg9
L5L
sa(dp2698
g6
I01
sg7
g54
sg9
L5L
sa(dp2699
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2700
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2701
sa(dp2702
g6
I01
sg7
g61
sg9
L5L
sa(dp2703
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2704
sa(dp2705
g6
I01
sg7
g66
sg9
L5L
sa(dp2706
g6
I01
sg7
g68
sg9
L5L
sa(dp2707
g6
I01
sg7
g70
sg9
L5L
sa(dp2708
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2709
sasg6
I01
sg7
VValueError
p2710
sg9
L3L
sg18
VInappropriate argument value (of correct type).
p2711
sa(dp2712
g1
(lp2713
(dp2714
g6
I01
sg7
g8
sg9
L5L
sa(dp2715
g6
I01
sg7
g11
sg9
L5L
sa(dp2716
g6
I01
sg7
g13
sg9
L5L
sa(dp2717
g6
I01
sg7
g15
sg9
L5L
sa(dp2718
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2719
sa(dp2720
g6
I01
sg7
g21
sg9
L5L
sa(dp2721
g6
I01
sg7
g23
sg9
L5L
sa(dp2722
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2723
sa(dp2724
g6
I01
sg7
g28
sg9
L5L
sa(dp2725
g6
I01
sg7
g30
sg9
L5L
sa(dp2726
g6
I01
sg7
g32
sg9
L5L
sa(dp2727
g6
I01
sg7
g34
sg9
L5L
sa(dp2728
g6
I01
sg7
g36
sg9
L5L
sa(dp2729
g6
I01
sg7
g38
sg9
L5L
sa(dp2730
g6
I01
sg7
g40
sg9
L5L
sa(dp2731
g6
I01
sg7
g42
sg9
L5L
sa(dp2732
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2733
sa(dp2734
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2735
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2736
sa(dp2737
g6
I01
sg7
g52
sg9
L5L
sa(dp2738
g6
I01
sg7
g54
sg9
L5L
sa(dp2739
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2740
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2741
sa(dp2742
g6
I01
sg7
g61
sg9
L5L
sa(dp2743
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2744
sa(dp2745
g6
I01
sg7
g66
sg9
L5L
sa(dp2746
g6
I01
sg7
g68
sg9
L5L
sa(dp2747
g6
I01
sg7
g70
sg9
L5L
sa(dp2748
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2749
sasg6
I01
sg7
VWarning
p2750
sg9
L3L
sg18
VBase class for warning categories.
p2751
sa(dp2752
g1
(lp2753
(dp2754
g6
I01
sg7
g8
sg9
L5L
sa(dp2755
g6
I01
sg7
g11
sg9
L5L
sa(dp2756
g6
I01
sg7
g13
sg9
L5L
sa(dp2757
g6
I01
sg7
g15
sg9
L5L
sa(dp2758
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2759
sa(dp2760
g6
I01
sg7
g21
sg9
L5L
sa(dp2761
g6
I01
sg7
g23
sg9
L5L
sa(dp2762
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2763
sa(dp2764
g6
I01
sg7
g28
sg9
L5L
sa(dp2765
g6
I01
sg7
g30
sg9
L5L
sa(dp2766
g6
I01
sg7
g32
sg9
L5L
sa(dp2767
g6
I01
sg7
g34
sg9
L5L
sa(dp2768
g6
I01
sg7
g36
sg9
L5L
sa(dp2769
g6
I01
sg7
g38
sg9
L5L
sa(dp2770
g6
I01
sg7
g40
sg9
L5L
sa(dp2771
g6
I01
sg7
g42
sg9
L5L
sa(dp2772
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2773
sa(dp2774
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp2775
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2776
sa(dp2777
g6
I01
sg7
g52
sg9
L5L
sa(dp2778
g6
I01
sg7
g54
sg9
L5L
sa(dp2779
g6
I01
sg7
g56
sg9
L2L
sg18
Nsa(dp2780
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2781
sa(dp2782
g6
I01
sg7
g61
sg9
L5L
sa(dp2783
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2784
sa(dp2785
g6
I01
sg7
g66
sg9
L5L
sa(dp2786
g6
I01
sg7
g68
sg9
L5L
sa(dp2787
g6
I01
sg7
g70
sg9
L5L
sa(dp2788
g6
I01
sg7
g72
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p2789
sasg6
I01
sg7
VZeroDivisionError
p2790
sg9
L3L
sg18
VSecond argument to a division or modulo operation was zero.
p2791
sa(dp2792
g6
I01
sg7
V__build_class__
p2793
sg9
L2L
sg18
V__build_class__(func, name, *bases, metaclass=None, **kwds) -> class\u000a\u000aInternal helper function used by the class statement.
p2794
sa(dp2795
g6
I01
sg7
V__debug__
p2796
sg9
L5L
sa(dp2797
g6
I01
sg7
g21
sg9
L5L
sa(dp2798
g6
I01
sg7
V__import__
p2799
sg9
L2L
sg18
V__import__(name, globals=None, locals=None, fromlist=(), level=0) -> module\u000a\u000aImport a module. Because this function is meant for use by the Python\u000ainterpreter and not for general use it is better to use\u000aimportlib.import_module() to programmatically import a module.\u000a\u000aThe globals argument is only used to determine the context;\u000athey are not modified.  The locals argument is unused.  The fromlist\u000ashould be a list of names to emulate ``from name import ...'', or an\u000aempty list to emulate ``import name''.\u000aWhen importing a module from a package, note that __import__('A.B', ...)\u000areturns package A when fromlist is empty, but its submodule B when\u000afromlist is not empty.  Level is used to determine whether to perform \u000aabsolute or relative imports. 0 is absolute while a positive number\u000ais the number of parent directories to search relative to the current module.
p2800
sa(dp2801
g1
(lp2802
(dp2803
g6
I01
sg7
g13
sg9
L5L
sa(dp2804
g6
I01
sg7
g15
sg9
L5L
sa(dp2805
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2806
sa(dp2807
g6
I01
sg7
g21
sg9
L5L
sa(dp2808
g6
I01
sg7
g23
sg9
L5L
sa(dp2809
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p2810
sa(dp2811
g6
I01
sg7
g28
sg9
L5L
sa(dp2812
g6
I01
sg7
g30
sg9
L5L
sa(dp2813
g6
I01
sg7
g32
sg9
L5L
sa(dp2814
g6
I01
sg7
g34
sg9
L5L
sa(dp2815
g6
I01
sg7
g36
sg9
L5L
sa(dp2816
g6
I01
sg7
g38
sg9
L5L
sa(dp2817
g6
I01
sg7
g40
sg9
L5L
sa(dp2818
g6
I01
sg7
V__module__
p2819
sg9
L5L
sa(dp2820
g6
I01
sg7
g42
sg9
L5L
sa(dp2821
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2822
sa(dp2823
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p2824
sa(dp2825
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2826
sa(dp2827
g6
I01
sg7
g52
sg9
L5L
sa(dp2828
g6
I01
sg7
g54
sg9
L5L
sa(dp2829
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p2830
sa(dp2831
g6
I01
sg7
g61
sg9
L5L
sa(dp2832
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2833
sa(dp2834
g6
I01
sg7
V__weakref__
p2835
sg9
L5L
sa(dp2836
g6
I01
sg7
Vcreate_module
p2837
sg9
L5L
sa(dp2838
g6
I01
sg7
Vexec_module
p2839
sg9
L5L
sa(dp2840
g6
I01
sg7
Vfind_module
p2841
sg9
L5L
sa(dp2842
g6
I01
sg7
Vfind_spec
p2843
sg9
L5L
sa(dp2844
g6
I01
sg7
Vget_code
p2845
sg9
L5L
sa(dp2846
g6
I01
sg7
Vget_source
p2847
sg9
L5L
sa(dp2848
g6
I01
sg7
Vis_package
p2849
sg9
L5L
sa(dp2850
g6
I01
sg7
Vload_module
p2851
sg9
L5L
sa(dp2852
g6
I01
sg7
Vmodule_repr
p2853
sg9
L5L
sasg6
I01
sg7
V__loader__
p2854
sg9
L3L
sg18
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p2855
sa(dp2856
g6
I01
sg7
V__name__
p2857
sg9
L5L
sa(dp2858
g6
I01
sg7
V__package__
p2859
sg9
L5L
sa(dp2860
g6
I01
sg7
V__spec__
p2861
sg9
L5L
sa(dp2862
g6
I01
sg7
Vabs
p2863
sg9
L2L
sg18
VReturn the absolute value of the argument.
p2864
sa(dp2865
g6
I01
sg7
Vall
p2866
sg9
L2L
sg18
VReturn True if bool(x) is True for all values x in the iterable.\u000a\u000aIf the iterable is empty, return True.
p2867
sa(dp2868
g6
I01
sg7
Vany
p2869
sg9
L2L
sg18
VReturn True if bool(x) is True for any x in the iterable.\u000a\u000aIf the iterable is empty, return False.
p2870
sa(dp2871
g6
I01
sg7
Vascii
p2872
sg9
L2L
sg18
VReturn an ASCII-only representation of an object.\u000a\u000aAs repr(), return a string containing a printable representation of an\u000aobject, but escape the non-ASCII characters in the string returned by\u000arepr() using \u005c\u005cx, \u005c\u005cu or \u005c\u005cU escapes. This generates a string similar\u000ato that returned by repr() in Python 2.
p2873
sa(dp2874
g6
I01
sg7
Vbin
p2875
sg9
L2L
sg18
VReturn the binary representation of an integer.\u000a\u000a   >>> bin(2796202)\u000a   '0b1010101010101010101010'
p2876
sa(dp2877
g1
(lp2878
(dp2879
g6
I01
sg7
V__abs__
p2880
sg9
L5L
sa(dp2881
g6
I01
sg7
V__add__
p2882
sg9
L5L
sa(dp2883
g6
I01
sg7
V__and__
p2884
sg9
L5L
sa(dp2885
g6
I01
sg7
V__bool__
p2886
sg9
L5L
sa(dp2887
g6
I01
sg7
V__ceil__
p2888
sg9
L2L
sg18
VCeiling of an Integral returns itself.
p2889
sa(dp2890
g6
I01
sg7
g13
sg9
L5L
sa(dp2891
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p2892
sa(dp2893
g6
I01
sg7
V__divmod__
p2894
sg9
L5L
sa(dp2895
g6
I01
sg7
g21
sg9
L5L
sa(dp2896
g6
I01
sg7
g23
sg9
L5L
sa(dp2897
g6
I01
sg7
V__float__
p2898
sg9
L5L
sa(dp2899
g6
I01
sg7
V__floor__
p2900
sg9
L2L
sg18
VFlooring an Integral returns itself.
p2901
sa(dp2902
g6
I01
sg7
V__floordiv__
p2903
sg9
L5L
sa(dp2904
g6
I01
sg7
g25
sg9
L2L
sg18
Nsa(dp2905
g6
I01
sg7
g28
sg9
L5L
sa(dp2906
g6
I01
sg7
g30
sg9
L5L
sa(dp2907
g6
I01
sg7
V__getnewargs__
p2908
sg9
L2L
sg18
Nsa(dp2909
g6
I01
sg7
g32
sg9
L5L
sa(dp2910
g6
I01
sg7
g34
sg9
L5L
sa(dp2911
g6
I01
sg7
V__index__
p2912
sg9
L5L
sa(dp2913
g6
I01
sg7
g36
sg9
L5L
sa(dp2914
g6
I01
sg7
V__int__
p2915
sg9
L5L
sa(dp2916
g6
I01
sg7
V__invert__
p2917
sg9
L5L
sa(dp2918
g6
I01
sg7
g38
sg9
L5L
sa(dp2919
g6
I01
sg7
V__lshift__
p2920
sg9
L5L
sa(dp2921
g6
I01
sg7
g40
sg9
L5L
sa(dp2922
g6
I01
sg7
V__mod__
p2923
sg9
L5L
sa(dp2924
g6
I01
sg7
V__mul__
p2925
sg9
L5L
sa(dp2926
g6
I01
sg7
g42
sg9
L5L
sa(dp2927
g6
I01
sg7
V__neg__
p2928
sg9
L5L
sa(dp2929
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p2930
sa(dp2931
g6
I01
sg7
V__or__
p2932
sg9
L5L
sa(dp2933
g6
I01
sg7
V__pos__
p2934
sg9
L5L
sa(dp2935
g6
I01
sg7
V__pow__
p2936
sg9
L5L
sa(dp2937
g6
I01
sg7
V__radd__
p2938
sg9
L5L
sa(dp2939
g6
I01
sg7
V__rand__
p2940
sg9
L5L
sa(dp2941
g6
I01
sg7
V__rdivmod__
p2942
sg9
L5L
sa(dp2943
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p2944
sa(dp2945
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p2946
sa(dp2947
g6
I01
sg7
g52
sg9
L5L
sa(dp2948
g6
I01
sg7
V__rfloordiv__
p2949
sg9
L5L
sa(dp2950
g6
I01
sg7
V__rlshift__
p2951
sg9
L5L
sa(dp2952
g6
I01
sg7
V__rmod__
p2953
sg9
L5L
sa(dp2954
g6
I01
sg7
V__rmul__
p2955
sg9
L5L
sa(dp2956
g6
I01
sg7
V__ror__
p2957
sg9
L5L
sa(dp2958
g6
I01
sg7
V__round__
p2959
sg9
L2L
sg18
VRounding an Integral returns itself.\u000aRounding with an ndigits argument also returns an integer.
p2960
sa(dp2961
g6
I01
sg7
V__rpow__
p2962
sg9
L5L
sa(dp2963
g6
I01
sg7
V__rrshift__
p2964
sg9
L5L
sa(dp2965
g6
I01
sg7
V__rshift__
p2966
sg9
L5L
sa(dp2967
g6
I01
sg7
V__rsub__
p2968
sg9
L5L
sa(dp2969
g6
I01
sg7
V__rtruediv__
p2970
sg9
L5L
sa(dp2971
g6
I01
sg7
V__rxor__
p2972
sg9
L5L
sa(dp2973
g6
I01
sg7
g54
sg9
L5L
sa(dp2974
g6
I01
sg7
g58
sg9
L2L
sg18
VReturns size in memory, in bytes
p2975
sa(dp2976
g6
I01
sg7
g61
sg9
L5L
sa(dp2977
g6
I01
sg7
V__sub__
p2978
sg9
L5L
sa(dp2979
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p2980
sa(dp2981
g6
I01
sg7
V__truediv__
p2982
sg9
L5L
sa(dp2983
g6
I01
sg7
V__trunc__
p2984
sg9
L2L
sg18
VTruncating an Integral returns itself.
p2985
sa(dp2986
g6
I01
sg7
V__xor__
p2987
sg9
L5L
sa(dp2988
g6
I01
sg7
Vbit_length
p2989
sg9
L2L
sg18
Vint.bit_length() -> int\u000a\u000aNumber of bits necessary to represent self in binary.\u000a>>> bin(37)\u000a'0b100101'\u000a>>> (37).bit_length()\u000a6
p2990
sa(dp2991
g6
I01
sg7
Vconjugate
p2992
sg9
L2L
sg18
VReturns self, the complex conjugate of any int.
p2993
sa(dp2994
g6
I01
sg7
Vdenominator
p2995
sg9
L5L
sa(dp2996
g6
I01
sg7
Vfrom_bytes
p2997
sg9
L2L
sg18
Vint.from_bytes(bytes, byteorder, *, signed=False) -> int\u000a\u000aReturn the integer represented by the given array of bytes.\u000a\u000aThe bytes argument must be a bytes-like object (e.g. bytes or bytearray).\u000a\u000aThe byteorder argument determines the byte order used to represent the\u000ainteger.  If byteorder is 'big', the most significant byte is at the\u000abeginning of the byte array.  If byteorder is 'little', the most\u000asignificant byte is at the end of the byte array.  To request the native\u000abyte order of the host system, use `sys.byteorder' as the byte order value.\u000a\u000aThe signed keyword-only argument indicates whether two's complement is\u000aused to represent the integer.
p2998
sa(dp2999
g6
I01
sg7
Vimag
p3000
sg9
L5L
sa(dp3001
g6
I01
sg7
Vnumerator
p3002
sg9
L5L
sa(dp3003
g6
I01
sg7
Vreal
p3004
sg9
L5L
sa(dp3005
g6
I01
sg7
Vto_bytes
p3006
sg9
L2L
sg18
Vint.to_bytes(length, byteorder, *, signed=False) -> bytes\u000a\u000aReturn an array of bytes representing an integer.\u000a\u000aThe integer is represented using length bytes.  An OverflowError is\u000araised if the integer is not representable with the given number of\u000abytes.\u000a\u000aThe byteorder argument determines the byte order used to represent the\u000ainteger.  If byteorder is 'big', the most significant byte is at the\u000abeginning of the byte array.  If byteorder is 'little', the most\u000asignificant byte is at the end of the byte array.  To request the native\u000abyte order of the host system, use `sys.byteorder' as the byte order value.\u000a\u000aThe signed keyword-only argument determines whether two's complement is\u000aused to represent the integer.  If signed is False and a negative integer\u000ais given, an OverflowError is raised.
p3007
sasg6
I01
sg7
Vbool
p3008
sg9
L3L
sg18
Vbool(x) -> bool\u000a\u000aReturns True when the argument x is true, False otherwise.\u000aThe builtins True and False are the only two instances of the class bool.\u000aThe class bool is a subclass of the class int, and cannot be subclassed.
p3009
sa(dp3010
g1
(lp3011
(dp3012
g6
I01
sg7
g2882
sg9
L5L
sa(dp3013
g6
I01
sg7
V__alloc__
p3014
sg9
L2L
sg18
VB.__alloc__() -> int\u000a\u000aReturn the number of bytes actually allocated.
p3015
sa(dp3016
g6
I01
sg7
V__contains__
p3017
sg9
L5L
sa(dp3018
g6
I01
sg7
g13
sg9
L5L
sa(dp3019
g6
I01
sg7
V__delitem__
p3020
sg9
L5L
sa(dp3021
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3022
sa(dp3023
g6
I01
sg7
g21
sg9
L5L
sa(dp3024
g6
I01
sg7
g23
sg9
L5L
sa(dp3025
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3026
sa(dp3027
g6
I01
sg7
g28
sg9
L5L
sa(dp3028
g6
I01
sg7
g30
sg9
L5L
sa(dp3029
g6
I01
sg7
V__getitem__
p3030
sg9
L5L
sa(dp3031
g6
I01
sg7
g32
sg9
L5L
sa(dp3032
g6
I01
sg7
g34
sg9
L5L
sa(dp3033
g6
I01
sg7
V__iadd__
p3034
sg9
L5L
sa(dp3035
g6
I01
sg7
V__imul__
p3036
sg9
L5L
sa(dp3037
g6
I01
sg7
g36
sg9
L5L
sa(dp3038
g6
I01
sg7
V__iter__
p3039
sg9
L5L
sa(dp3040
g6
I01
sg7
g38
sg9
L5L
sa(dp3041
g6
I01
sg7
V__len__
p3042
sg9
L5L
sa(dp3043
g6
I01
sg7
g40
sg9
L5L
sa(dp3044
g6
I01
sg7
g2923
sg9
L5L
sa(dp3045
g6
I01
sg7
g2925
sg9
L5L
sa(dp3046
g6
I01
sg7
g42
sg9
L5L
sa(dp3047
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3048
sa(dp3049
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p3050
sa(dp3051
g6
I01
sg7
g49
sg9
L2L
sg18
VReturn state information for pickling.
p3052
sa(dp3053
g6
I01
sg7
g52
sg9
L5L
sa(dp3054
g6
I01
sg7
g2953
sg9
L5L
sa(dp3055
g6
I01
sg7
g2955
sg9
L5L
sa(dp3056
g6
I01
sg7
g54
sg9
L5L
sa(dp3057
g6
I01
sg7
V__setitem__
p3058
sg9
L5L
sa(dp3059
g6
I01
sg7
g58
sg9
L2L
sg18
VReturns the size of the bytearray object in memory, in bytes.
p3060
sa(dp3061
g6
I01
sg7
g61
sg9
L5L
sa(dp3062
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3063
sa(dp3064
g6
I01
sg7
Vappend
p3065
sg9
L2L
sg18
VAppend a single item to the end of the bytearray.\u000a\u000a  item\u000a    The item to be appended.
p3066
sa(dp3067
g6
I01
sg7
Vcapitalize
p3068
sg9
L2L
sg18
VB.capitalize() -> copy of B\u000a\u000aReturn a copy of B with only its first character capitalized (ASCII)\u000aand the rest lower-cased.
p3069
sa(dp3070
g6
I01
sg7
Vcenter
p3071
sg9
L2L
sg18
VB.center(width[, fillchar]) -> copy of B\u000a\u000aReturn B centered in a string of length width.  Padding is\u000adone using the specified fill character (default is a space).
p3072
sa(dp3073
g6
I01
sg7
Vclear
p3074
sg9
L2L
sg18
VRemove all items from the bytearray.
p3075
sa(dp3076
g6
I01
sg7
Vcopy
p3077
sg9
L2L
sg18
VReturn a copy of B.
p3078
sa(dp3079
g6
I01
sg7
Vcount
p3080
sg9
L2L
sg18
VB.count(sub[, start[, end]]) -> int\u000a\u000aReturn the number of non-overlapping occurrences of subsection sub in\u000abytes B[start:end].  Optional arguments start and end are interpreted\u000aas in slice notation.
p3081
sa(dp3082
g6
I01
sg7
Vdecode
p3083
sg9
L2L
sg18
VDecode the bytearray using the codec registered for encoding.\u000a\u000a  encoding\u000a    The encoding with which to decode the bytearray.\u000a  errors\u000a    The error handling scheme to use for the handling of decoding errors.\u000a    The default is 'strict' meaning that decoding errors raise a\u000a    UnicodeDecodeError. Other possible values are 'ignore' and 'replace'\u000a    as well as any other name registered with codecs.register_error that\u000a    can handle UnicodeDecodeErrors.
p3084
sa(dp3085
g6
I01
sg7
Vendswith
p3086
sg9
L2L
sg18
VB.endswith(suffix[, start[, end]]) -> bool\u000a\u000aReturn True if B ends with the specified suffix, False otherwise.\u000aWith optional start, test B beginning at that position.\u000aWith optional end, stop comparing B at that position.\u000asuffix can also be a tuple of bytes to try.
p3087
sa(dp3088
g6
I01
sg7
Vexpandtabs
p3089
sg9
L2L
sg18
VB.expandtabs(tabsize=8) -> copy of B\u000a\u000aReturn a copy of B where all tab characters are expanded using spaces.\u000aIf tabsize is not given, a tab size of 8 characters is assumed.
p3090
sa(dp3091
g6
I01
sg7
Vextend
p3092
sg9
L2L
sg18
VAppend all the items from the iterator or sequence to the end of the bytearray.\u000a\u000a  iterable_of_ints\u000a    The iterable of items to append.
p3093
sa(dp3094
g6
I01
sg7
Vfind
p3095
sg9
L2L
sg18
VB.find(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p3096
sa(dp3097
g6
I01
sg7
Vfromhex
p3098
sg9
L2L
sg18
VCreate a bytearray object from a string of hexadecimal numbers.\u000a\u000aSpaces between two numbers are accepted.\u000aExample: bytearray.fromhex('B9 01EF') -> bytearray(b'\u005c\u005cxb9\u005c\u005cx01\u005c\u005cxef')
p3099
sa(dp3100
g6
I01
sg7
Vhex
p3101
sg9
L2L
sg18
VB.hex() -> string\u000a\u000aCreate a string of hexadecimal numbers from a bytearray object.\u000aExample: bytearray([0xb9, 0x01, 0xef]).hex() -> 'b901ef'.
p3102
sa(dp3103
g6
I01
sg7
Vindex
p3104
sg9
L2L
sg18
VB.index(sub[, start[, end]]) -> int\u000a\u000aLike B.find() but raise ValueError when the subsection is not found.
p3105
sa(dp3106
g6
I01
sg7
Vinsert
p3107
sg9
L2L
sg18
VInsert a single item into the bytearray before the given index.\u000a\u000a  index\u000a    The index where the value is to be inserted.\u000a  item\u000a    The item to be inserted.
p3108
sa(dp3109
g6
I01
sg7
Visalnum
p3110
sg9
L2L
sg18
VB.isalnum() -> bool\u000a\u000aReturn True if all characters in B are alphanumeric\u000aand there is at least one character in B, False otherwise.
p3111
sa(dp3112
g6
I01
sg7
Visalpha
p3113
sg9
L2L
sg18
VB.isalpha() -> bool\u000a\u000aReturn True if all characters in B are alphabetic\u000aand there is at least one character in B, False otherwise.
p3114
sa(dp3115
g6
I01
sg7
Visdigit
p3116
sg9
L2L
sg18
VB.isdigit() -> bool\u000a\u000aReturn True if all characters in B are digits\u000aand there is at least one character in B, False otherwise.
p3117
sa(dp3118
g6
I01
sg7
Vislower
p3119
sg9
L2L
sg18
VB.islower() -> bool\u000a\u000aReturn True if all cased characters in B are lowercase and there is\u000aat least one cased character in B, False otherwise.
p3120
sa(dp3121
g6
I01
sg7
Visspace
p3122
sg9
L2L
sg18
VB.isspace() -> bool\u000a\u000aReturn True if all characters in B are whitespace\u000aand there is at least one character in B, False otherwise.
p3123
sa(dp3124
g6
I01
sg7
Vistitle
p3125
sg9
L2L
sg18
VB.istitle() -> bool\u000a\u000aReturn True if B is a titlecased string and there is at least one\u000acharacter in B, i.e. uppercase characters may only follow uncased\u000acharacters and lowercase characters only cased ones. Return False\u000aotherwise.
p3126
sa(dp3127
g6
I01
sg7
Visupper
p3128
sg9
L2L
sg18
VB.isupper() -> bool\u000a\u000aReturn True if all cased characters in B are uppercase and there is\u000aat least one cased character in B, False otherwise.
p3129
sa(dp3130
g6
I01
sg7
Vjoin
p3131
sg9
L2L
sg18
VConcatenate any number of bytes/bytearray objects.\u000a\u000aThe bytearray whose method is called is inserted in between each pair.\u000a\u000aThe result is returned as a new bytearray object.
p3132
sa(dp3133
g6
I01
sg7
Vljust
p3134
sg9
L2L
sg18
VB.ljust(width[, fillchar]) -> copy of B\u000a\u000aReturn B left justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space).
p3135
sa(dp3136
g6
I01
sg7
Vlower
p3137
sg9
L2L
sg18
VB.lower() -> copy of B\u000a\u000aReturn a copy of B with all ASCII characters converted to lowercase.
p3138
sa(dp3139
g6
I01
sg7
Vlstrip
p3140
sg9
L2L
sg18
VStrip leading bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip leading ASCII whitespace.
p3141
sa(dp3142
g6
I01
sg7
Vmaketrans
p3143
sg9
L2L
sg18
VReturn a translation table useable for the bytes or bytearray translate method.\u000a\u000aThe returned table will be one where each byte in frm is mapped to the byte at\u000athe same position in to.\u000a\u000aThe bytes objects frm and to must be of the same length.
p3144
sa(dp3145
g6
I01
sg7
Vpartition
p3146
sg9
L2L
sg18
VPartition the bytearray into three parts using the given separator.\u000a\u000aThis will search for the separator sep in the bytearray. If the separator is\u000afound, returns a 3-tuple containing the part before the separator, the\u000aseparator itself, and the part after it.\u000a\u000aIf the separator is not found, returns a 3-tuple containing the original\u000abytearray object and two empty bytearray objects.
p3147
sa(dp3148
g6
I01
sg7
Vpop
p3149
sg9
L2L
sg18
VRemove and return a single item from B.\u000a\u000a  index\u000a    The index from where to remove the item.\u000a    -1 (the default value) means remove the last item.\u000a\u000aIf no index argument is given, will pop the last item.
p3150
sa(dp3151
g6
I01
sg7
Vremove
p3152
sg9
L2L
sg18
VRemove the first occurrence of a value in the bytearray.\u000a\u000a  value\u000a    The value to remove.
p3153
sa(dp3154
g6
I01
sg7
Vreplace
p3155
sg9
L2L
sg18
VReturn a copy with all occurrences of substring old replaced by new.\u000a\u000a  count\u000a    Maximum number of occurrences to replace.\u000a    -1 (the default value) means replace all occurrences.\u000a\u000aIf the optional argument count is given, only the first count occurrences are\u000areplaced.
p3156
sa(dp3157
g6
I01
sg7
Vreverse
p3158
sg9
L2L
sg18
VReverse the order of the values in B in place.
p3159
sa(dp3160
g6
I01
sg7
Vrfind
p3161
sg9
L2L
sg18
VB.rfind(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in B where subsection sub is found,\u000asuch that sub is contained within B[start,end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p3162
sa(dp3163
g6
I01
sg7
Vrindex
p3164
sg9
L2L
sg18
VB.rindex(sub[, start[, end]]) -> int\u000a\u000aLike B.rfind() but raise ValueError when the subsection is not found.
p3165
sa(dp3166
g6
I01
sg7
Vrjust
p3167
sg9
L2L
sg18
VB.rjust(width[, fillchar]) -> copy of B\u000a\u000aReturn B right justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space)
p3168
sa(dp3169
g6
I01
sg7
Vrpartition
p3170
sg9
L2L
sg18
VPartition the bytes into three parts using the given separator.\u000a\u000aThis will search for the separator sep in the bytearray, starting and the end.\u000aIf the separator is found, returns a 3-tuple containing the part before the\u000aseparator, the separator itself, and the part after it.\u000a\u000aIf the separator is not found, returns a 3-tuple containing two empty bytearray\u000aobjects and the original bytearray object.
p3171
sa(dp3172
g6
I01
sg7
Vrsplit
p3173
sg9
L2L
sg18
VReturn a list of the sections in the bytearray, using sep as the delimiter.\u000a\u000a  sep\u000a    The delimiter according which to split the bytearray.\u000a    None (the default value) means split on ASCII whitespace characters\u000a    (space, tab, return, newline, formfeed, vertical tab).\u000a  maxsplit\u000a    Maximum number of splits to do.\u000a    -1 (the default value) means no limit.\u000a\u000aSplitting is done starting at the end of the bytearray and working to the front.
p3174
sa(dp3175
g6
I01
sg7
Vrstrip
p3176
sg9
L2L
sg18
VStrip trailing bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip trailing ASCII whitespace.
p3177
sa(dp3178
g6
I01
sg7
Vsplit
p3179
sg9
L2L
sg18
VReturn a list of the sections in the bytearray, using sep as the delimiter.\u000a\u000a  sep\u000a    The delimiter according which to split the bytearray.\u000a    None (the default value) means split on ASCII whitespace characters\u000a    (space, tab, return, newline, formfeed, vertical tab).\u000a  maxsplit\u000a    Maximum number of splits to do.\u000a    -1 (the default value) means no limit.
p3180
sa(dp3181
g6
I01
sg7
Vsplitlines
p3182
sg9
L2L
sg18
VReturn a list of the lines in the bytearray, breaking at line boundaries.\u000a\u000aLine breaks are not included in the resulting list unless keepends is given and\u000atrue.
p3183
sa(dp3184
g6
I01
sg7
Vstartswith
p3185
sg9
L2L
sg18
VB.startswith(prefix[, start[, end]]) -> bool\u000a\u000aReturn True if B starts with the specified prefix, False otherwise.\u000aWith optional start, test B beginning at that position.\u000aWith optional end, stop comparing B at that position.\u000aprefix can also be a tuple of bytes to try.
p3186
sa(dp3187
g6
I01
sg7
Vstrip
p3188
sg9
L2L
sg18
VStrip leading and trailing bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip leading and trailing ASCII whitespace.
p3189
sa(dp3190
g6
I01
sg7
Vswapcase
p3191
sg9
L2L
sg18
VB.swapcase() -> copy of B\u000a\u000aReturn a copy of B with uppercase ASCII characters converted\u000ato lowercase ASCII and vice versa.
p3192
sa(dp3193
g6
I01
sg7
Vtitle
p3194
sg9
L2L
sg18
VB.title() -> copy of B\u000a\u000aReturn a titlecased version of B, i.e. ASCII words start with uppercase\u000acharacters, all remaining cased characters have lowercase.
p3195
sa(dp3196
g6
I01
sg7
Vtranslate
p3197
sg9
L2L
sg18
Vtranslate(table, [deletechars])\u000aReturn a copy with each character mapped by the given translation table.\u000a\u000a  table\u000a    Translation table, which must be a bytes object of length 256.\u000a\u000aAll characters occurring in the optional argument deletechars are removed.\u000aThe remaining characters are mapped through the given translation table.
p3198
sa(dp3199
g6
I01
sg7
Vupper
p3200
sg9
L2L
sg18
VB.upper() -> copy of B\u000a\u000aReturn a copy of B with all ASCII characters converted to uppercase.
p3201
sa(dp3202
g6
I01
sg7
Vzfill
p3203
sg9
L2L
sg18
VB.zfill(width) -> copy of B\u000a\u000aPad a numeric string B with zeros on the left, to fill a field\u000aof the specified width.  B is never truncated.
p3204
sasg6
I01
sg7
Vbytearray
p3205
sg9
L3L
sg18
Vbytearray(iterable_of_ints) -> bytearray\u000abytearray(string, encoding[, errors]) -> bytearray\u000abytearray(bytes_or_buffer) -> mutable copy of bytes_or_buffer\u000abytearray(int) -> bytes array of size given by the parameter initialized with null bytes\u000abytearray() -> empty bytes array\u000a\u000aConstruct a mutable bytearray object from:\u000a  - an iterable yielding integers in range(256)\u000a  - a text string encoded using the specified encoding\u000a  - a bytes or a buffer object\u000a  - any object implementing the buffer API.\u000a  - an integer
p3206
sa(dp3207
g1
(lp3208
(dp3209
g6
I01
sg7
g2882
sg9
L5L
sa(dp3210
g6
I01
sg7
g3017
sg9
L5L
sa(dp3211
g6
I01
sg7
g13
sg9
L5L
sa(dp3212
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3213
sa(dp3214
g6
I01
sg7
g21
sg9
L5L
sa(dp3215
g6
I01
sg7
g23
sg9
L5L
sa(dp3216
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3217
sa(dp3218
g6
I01
sg7
g28
sg9
L5L
sa(dp3219
g6
I01
sg7
g30
sg9
L5L
sa(dp3220
g6
I01
sg7
g3030
sg9
L5L
sa(dp3221
g6
I01
sg7
g2908
sg9
L2L
sg18
Nsa(dp3222
g6
I01
sg7
g32
sg9
L5L
sa(dp3223
g6
I01
sg7
g34
sg9
L5L
sa(dp3224
g6
I01
sg7
g36
sg9
L5L
sa(dp3225
g6
I01
sg7
g3039
sg9
L5L
sa(dp3226
g6
I01
sg7
g38
sg9
L5L
sa(dp3227
g6
I01
sg7
g3042
sg9
L5L
sa(dp3228
g6
I01
sg7
g40
sg9
L5L
sa(dp3229
g6
I01
sg7
g2923
sg9
L5L
sa(dp3230
g6
I01
sg7
g2925
sg9
L5L
sa(dp3231
g6
I01
sg7
g42
sg9
L5L
sa(dp3232
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3233
sa(dp3234
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p3235
sa(dp3236
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3237
sa(dp3238
g6
I01
sg7
g52
sg9
L5L
sa(dp3239
g6
I01
sg7
g2953
sg9
L5L
sa(dp3240
g6
I01
sg7
g2955
sg9
L5L
sa(dp3241
g6
I01
sg7
g54
sg9
L5L
sa(dp3242
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3243
sa(dp3244
g6
I01
sg7
g61
sg9
L5L
sa(dp3245
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3246
sa(dp3247
g6
I01
sg7
g3068
sg9
L2L
sg18
VB.capitalize() -> copy of B\u000a\u000aReturn a copy of B with only its first character capitalized (ASCII)\u000aand the rest lower-cased.
p3248
sa(dp3249
g6
I01
sg7
g3071
sg9
L2L
sg18
VB.center(width[, fillchar]) -> copy of B\u000a\u000aReturn B centered in a string of length width.  Padding is\u000adone using the specified fill character (default is a space).
p3250
sa(dp3251
g6
I01
sg7
g3080
sg9
L2L
sg18
VB.count(sub[, start[, end]]) -> int\u000a\u000aReturn the number of non-overlapping occurrences of substring sub in\u000astring B[start:end].  Optional arguments start and end are interpreted\u000aas in slice notation.
p3252
sa(dp3253
g6
I01
sg7
g3083
sg9
L2L
sg18
VDecode the bytes using the codec registered for encoding.\u000a\u000a  encoding\u000a    The encoding with which to decode the bytes.\u000a  errors\u000a    The error handling scheme to use for the handling of decoding errors.\u000a    The default is 'strict' meaning that decoding errors raise a\u000a    UnicodeDecodeError. Other possible values are 'ignore' and 'replace'\u000a    as well as any other name registered with codecs.register_error that\u000a    can handle UnicodeDecodeErrors.
p3254
sa(dp3255
g6
I01
sg7
g3086
sg9
L2L
sg18
VB.endswith(suffix[, start[, end]]) -> bool\u000a\u000aReturn True if B ends with the specified suffix, False otherwise.\u000aWith optional start, test B beginning at that position.\u000aWith optional end, stop comparing B at that position.\u000asuffix can also be a tuple of bytes to try.
p3256
sa(dp3257
g6
I01
sg7
g3089
sg9
L2L
sg18
VB.expandtabs(tabsize=8) -> copy of B\u000a\u000aReturn a copy of B where all tab characters are expanded using spaces.\u000aIf tabsize is not given, a tab size of 8 characters is assumed.
p3258
sa(dp3259
g6
I01
sg7
g3095
sg9
L2L
sg18
VB.find(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in B where substring sub is found,\u000asuch that sub is contained within B[start:end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p3260
sa(dp3261
g6
I01
sg7
g3098
sg9
L2L
sg18
VCreate a bytes object from a string of hexadecimal numbers.\u000a\u000aSpaces between two numbers are accepted.\u000aExample: bytes.fromhex('B9 01EF') -> b'\u005c\u005cxb9\u005c\u005cx01\u005c\u005cxef'.
p3262
sa(dp3263
g6
I01
sg7
g3101
sg9
L2L
sg18
VB.hex() -> string\u000a\u000aCreate a string of hexadecimal numbers from a bytes object.\u000aExample: b'\u005cxb9\u005cx01\u005cxef'.hex() -> 'b901ef'.
p3264
sa(dp3265
g6
I01
sg7
g3104
sg9
L2L
sg18
VB.index(sub[, start[, end]]) -> int\u000a\u000aLike B.find() but raise ValueError when the substring is not found.
p3266
sa(dp3267
g6
I01
sg7
g3110
sg9
L2L
sg18
VB.isalnum() -> bool\u000a\u000aReturn True if all characters in B are alphanumeric\u000aand there is at least one character in B, False otherwise.
p3268
sa(dp3269
g6
I01
sg7
g3113
sg9
L2L
sg18
VB.isalpha() -> bool\u000a\u000aReturn True if all characters in B are alphabetic\u000aand there is at least one character in B, False otherwise.
p3270
sa(dp3271
g6
I01
sg7
g3116
sg9
L2L
sg18
VB.isdigit() -> bool\u000a\u000aReturn True if all characters in B are digits\u000aand there is at least one character in B, False otherwise.
p3272
sa(dp3273
g6
I01
sg7
g3119
sg9
L2L
sg18
VB.islower() -> bool\u000a\u000aReturn True if all cased characters in B are lowercase and there is\u000aat least one cased character in B, False otherwise.
p3274
sa(dp3275
g6
I01
sg7
g3122
sg9
L2L
sg18
VB.isspace() -> bool\u000a\u000aReturn True if all characters in B are whitespace\u000aand there is at least one character in B, False otherwise.
p3276
sa(dp3277
g6
I01
sg7
g3125
sg9
L2L
sg18
VB.istitle() -> bool\u000a\u000aReturn True if B is a titlecased string and there is at least one\u000acharacter in B, i.e. uppercase characters may only follow uncased\u000acharacters and lowercase characters only cased ones. Return False\u000aotherwise.
p3278
sa(dp3279
g6
I01
sg7
g3128
sg9
L2L
sg18
VB.isupper() -> bool\u000a\u000aReturn True if all cased characters in B are uppercase and there is\u000aat least one cased character in B, False otherwise.
p3280
sa(dp3281
g6
I01
sg7
g3131
sg9
L2L
sg18
VConcatenate any number of bytes objects.\u000a\u000aThe bytes whose method is called is inserted in between each pair.\u000a\u000aThe result is returned as a new bytes object.\u000a\u000aExample: b'.'.join([b'ab', b'pq', b'rs']) -> b'ab.pq.rs'.
p3282
sa(dp3283
g6
I01
sg7
g3134
sg9
L2L
sg18
VB.ljust(width[, fillchar]) -> copy of B\u000a\u000aReturn B left justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space).
p3284
sa(dp3285
g6
I01
sg7
g3137
sg9
L2L
sg18
VB.lower() -> copy of B\u000a\u000aReturn a copy of B with all ASCII characters converted to lowercase.
p3286
sa(dp3287
g6
I01
sg7
g3140
sg9
L2L
sg18
VStrip leading bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip leading  ASCII whitespace.
p3288
sa(dp3289
g6
I01
sg7
g3143
sg9
L2L
sg18
VReturn a translation table useable for the bytes or bytearray translate method.\u000a\u000aThe returned table will be one where each byte in frm is mapped to the byte at\u000athe same position in to.\u000a\u000aThe bytes objects frm and to must be of the same length.
p3290
sa(dp3291
g6
I01
sg7
g3146
sg9
L2L
sg18
VPartition the bytes into three parts using the given separator.\u000a\u000aThis will search for the separator sep in the bytes. If the separator is found,\u000areturns a 3-tuple containing the part before the separator, the separator\u000aitself, and the part after it.\u000a\u000aIf the separator is not found, returns a 3-tuple containing the original bytes\u000aobject and two empty bytes objects.
p3292
sa(dp3293
g6
I01
sg7
g3155
sg9
L2L
sg18
VReturn a copy with all occurrences of substring old replaced by new.\u000a\u000a  count\u000a    Maximum number of occurrences to replace.\u000a    -1 (the default value) means replace all occurrences.\u000a\u000aIf the optional argument count is given, only the first count occurrences are\u000areplaced.
p3294
sa(dp3295
g6
I01
sg7
g3161
sg9
L2L
sg18
VB.rfind(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in B where substring sub is found,\u000asuch that sub is contained within B[start:end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p3296
sa(dp3297
g6
I01
sg7
g3164
sg9
L2L
sg18
VB.rindex(sub[, start[, end]]) -> int\u000a\u000aLike B.rfind() but raise ValueError when the substring is not found.
p3298
sa(dp3299
g6
I01
sg7
g3167
sg9
L2L
sg18
VB.rjust(width[, fillchar]) -> copy of B\u000a\u000aReturn B right justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space)
p3300
sa(dp3301
g6
I01
sg7
g3170
sg9
L2L
sg18
VPartition the bytes into three parts using the given separator.\u000a\u000aThis will search for the separator sep in the bytes, starting and the end. If\u000athe separator is found, returns a 3-tuple containing the part before the\u000aseparator, the separator itself, and the part after it.\u000a\u000aIf the separator is not found, returns a 3-tuple containing two empty bytes\u000aobjects and the original bytes object.
p3302
sa(dp3303
g6
I01
sg7
g3173
sg9
L2L
sg18
VReturn a list of the sections in the bytes, using sep as the delimiter.\u000a\u000a  sep\u000a    The delimiter according which to split the bytes.\u000a    None (the default value) means split on ASCII whitespace characters\u000a    (space, tab, return, newline, formfeed, vertical tab).\u000a  maxsplit\u000a    Maximum number of splits to do.\u000a    -1 (the default value) means no limit.\u000a\u000aSplitting is done starting at the end of the bytes and working to the front.
p3304
sa(dp3305
g6
I01
sg7
g3176
sg9
L2L
sg18
VStrip trailing bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip trailing ASCII whitespace.
p3306
sa(dp3307
g6
I01
sg7
g3179
sg9
L2L
sg18
VReturn a list of the sections in the bytes, using sep as the delimiter.\u000a\u000a  sep\u000a    The delimiter according which to split the bytes.\u000a    None (the default value) means split on ASCII whitespace characters\u000a    (space, tab, return, newline, formfeed, vertical tab).\u000a  maxsplit\u000a    Maximum number of splits to do.\u000a    -1 (the default value) means no limit.
p3308
sa(dp3309
g6
I01
sg7
g3182
sg9
L2L
sg18
VReturn a list of the lines in the bytes, breaking at line boundaries.\u000a\u000aLine breaks are not included in the resulting list unless keepends is given and\u000atrue.
p3310
sa(dp3311
g6
I01
sg7
g3185
sg9
L2L
sg18
VB.startswith(prefix[, start[, end]]) -> bool\u000a\u000aReturn True if B starts with the specified prefix, False otherwise.\u000aWith optional start, test B beginning at that position.\u000aWith optional end, stop comparing B at that position.\u000aprefix can also be a tuple of bytes to try.
p3312
sa(dp3313
g6
I01
sg7
g3188
sg9
L2L
sg18
VStrip leading and trailing bytes contained in the argument.\u000a\u000aIf the argument is omitted or None, strip leading and trailing ASCII whitespace.
p3314
sa(dp3315
g6
I01
sg7
g3191
sg9
L2L
sg18
VB.swapcase() -> copy of B\u000a\u000aReturn a copy of B with uppercase ASCII characters converted\u000ato lowercase ASCII and vice versa.
p3316
sa(dp3317
g6
I01
sg7
g3194
sg9
L2L
sg18
VB.title() -> copy of B\u000a\u000aReturn a titlecased version of B, i.e. ASCII words start with uppercase\u000acharacters, all remaining cased characters have lowercase.
p3318
sa(dp3319
g6
I01
sg7
g3197
sg9
L2L
sg18
Vtranslate(table, [deletechars])\u000aReturn a copy with each character mapped by the given translation table.\u000a\u000a  table\u000a    Translation table, which must be a bytes object of length 256.\u000a\u000aAll characters occurring in the optional argument deletechars are removed.\u000aThe remaining characters are mapped through the given translation table.
p3320
sa(dp3321
g6
I01
sg7
g3200
sg9
L2L
sg18
VB.upper() -> copy of B\u000a\u000aReturn a copy of B with all ASCII characters converted to uppercase.
p3322
sa(dp3323
g6
I01
sg7
g3203
sg9
L2L
sg18
VB.zfill(width) -> copy of B\u000a\u000aPad a numeric string B with zeros on the left, to fill a field\u000aof the specified width.  B is never truncated.
p3324
sasg6
I01
sg7
Vbytes
p3325
sg9
L3L
sg18
Vbytes(iterable_of_ints) -> bytes\u000abytes(string, encoding[, errors]) -> bytes\u000abytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer\u000abytes(int) -> bytes object of size given by the parameter initialized with null bytes\u000abytes() -> empty bytes object\u000a\u000aConstruct an immutable array of bytes from:\u000a  - an iterable yielding integers in range(256)\u000a  - a text string encoded using the specified encoding\u000a  - any object implementing the buffer API.\u000a  - an integer
p3326
sa(dp3327
g6
I01
sg7
Vcallable
p3328
sg9
L2L
sg18
VReturn whether the object is callable (i.e., some kind of function).\u000a\u000aNote that classes are callable, as are instances of classes with a\u000a__call__() method.
p3329
sa(dp3330
g6
I01
sg7
Vchr
p3331
sg9
L2L
sg18
VReturn a Unicode string of one character with ordinal i; 0 <= i <= 0x10ffff.
p3332
sa(dp3333
g1
(lp3334
(dp3335
g6
I01
sg7
g13
sg9
L5L
sa(dp3336
g6
I01
sg7
g15
sg9
L5L
sa(dp3337
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3338
sa(dp3339
g6
I01
sg7
g21
sg9
L5L
sa(dp3340
g6
I01
sg7
g23
sg9
L5L
sa(dp3341
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3342
sa(dp3343
g6
I01
sg7
V__func__
p3344
sg9
L5L
sa(dp3345
g6
I01
sg7
g28
sg9
L5L
sa(dp3346
g6
I01
sg7
V__get__
p3347
sg9
L5L
sa(dp3348
g6
I01
sg7
g30
sg9
L5L
sa(dp3349
g6
I01
sg7
g32
sg9
L5L
sa(dp3350
g6
I01
sg7
g34
sg9
L5L
sa(dp3351
g6
I01
sg7
g36
sg9
L5L
sa(dp3352
g6
I01
sg7
V__isabstractmethod__
p3353
sg9
L5L
sa(dp3354
g6
I01
sg7
g38
sg9
L5L
sa(dp3355
g6
I01
sg7
g40
sg9
L5L
sa(dp3356
g6
I01
sg7
g42
sg9
L5L
sa(dp3357
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3358
sa(dp3359
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p3360
sa(dp3361
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3362
sa(dp3363
g6
I01
sg7
g52
sg9
L5L
sa(dp3364
g6
I01
sg7
g54
sg9
L5L
sa(dp3365
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3366
sa(dp3367
g6
I01
sg7
g61
sg9
L5L
sa(dp3368
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3369
sasg6
I01
sg7
Vclassmethod
p3370
sg9
L3L
sg18
Vclassmethod(function) -> method\u000a\u000aConvert a function to be a class method.\u000a\u000aA class method receives the class as implicit first argument,\u000ajust like an instance method receives the instance.\u000aTo declare a class method, use this idiom:\u000a\u000a  class C:\u000a      def f(cls, arg1, arg2, ...): ...\u000a      f = classmethod(f)\u000a\u000aIt can be called either on the class (e.g. C.f()) or on an instance\u000a(e.g. C().f()).  The instance is ignored except for its class.\u000aIf a class method is called for a derived class, the derived class\u000aobject is passed as the implied first argument.\u000a\u000aClass methods are different than C++ or Java static methods.\u000aIf you want those, see the staticmethod builtin.
p3371
sa(dp3372
g6
I01
sg7
Vcompile
p3373
sg9
L2L
sg18
VCompile source into a code object that can be executed by exec() or eval().\u000a\u000aThe source code may represent a Python module, statement or expression.\u000aThe filename will be used for run-time error messages.\u000aThe mode must be 'exec' to compile a module, 'single' to compile a\u000asingle (interactive) statement, or 'eval' to compile an expression.\u000aThe flags argument, if present, controls which future statements influence\u000athe compilation of the code.\u000aThe dont_inherit argument, if true, stops the compilation inheriting\u000athe effects of any future statements in effect in the code calling\u000acompile; if absent or false these statements do influence the compilation,\u000ain addition to any features explicitly specified.
p3374
sa(dp3375
g1
(lp3376
(dp3377
g6
I01
sg7
g2880
sg9
L5L
sa(dp3378
g6
I01
sg7
g2882
sg9
L5L
sa(dp3379
g6
I01
sg7
g2886
sg9
L5L
sa(dp3380
g6
I01
sg7
g13
sg9
L5L
sa(dp3381
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3382
sa(dp3383
g6
I01
sg7
g2894
sg9
L5L
sa(dp3384
g6
I01
sg7
g21
sg9
L5L
sa(dp3385
g6
I01
sg7
g23
sg9
L5L
sa(dp3386
g6
I01
sg7
g2898
sg9
L5L
sa(dp3387
g6
I01
sg7
g2903
sg9
L5L
sa(dp3388
g6
I01
sg7
g25
sg9
L2L
sg18
Vcomplex.__format__() -> str\u000a\u000aConvert to a string according to format_spec.
p3389
sa(dp3390
g6
I01
sg7
g28
sg9
L5L
sa(dp3391
g6
I01
sg7
g30
sg9
L5L
sa(dp3392
g6
I01
sg7
g2908
sg9
L2L
sg18
Nsa(dp3393
g6
I01
sg7
g32
sg9
L5L
sa(dp3394
g6
I01
sg7
g34
sg9
L5L
sa(dp3395
g6
I01
sg7
g36
sg9
L5L
sa(dp3396
g6
I01
sg7
g2915
sg9
L5L
sa(dp3397
g6
I01
sg7
g38
sg9
L5L
sa(dp3398
g6
I01
sg7
g40
sg9
L5L
sa(dp3399
g6
I01
sg7
g2923
sg9
L5L
sa(dp3400
g6
I01
sg7
g2925
sg9
L5L
sa(dp3401
g6
I01
sg7
g42
sg9
L5L
sa(dp3402
g6
I01
sg7
g2928
sg9
L5L
sa(dp3403
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3404
sa(dp3405
g6
I01
sg7
g2934
sg9
L5L
sa(dp3406
g6
I01
sg7
g2936
sg9
L5L
sa(dp3407
g6
I01
sg7
g2938
sg9
L5L
sa(dp3408
g6
I01
sg7
g2942
sg9
L5L
sa(dp3409
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p3410
sa(dp3411
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3412
sa(dp3413
g6
I01
sg7
g52
sg9
L5L
sa(dp3414
g6
I01
sg7
g2949
sg9
L5L
sa(dp3415
g6
I01
sg7
g2953
sg9
L5L
sa(dp3416
g6
I01
sg7
g2955
sg9
L5L
sa(dp3417
g6
I01
sg7
g2962
sg9
L5L
sa(dp3418
g6
I01
sg7
g2968
sg9
L5L
sa(dp3419
g6
I01
sg7
g2970
sg9
L5L
sa(dp3420
g6
I01
sg7
g54
sg9
L5L
sa(dp3421
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3422
sa(dp3423
g6
I01
sg7
g61
sg9
L5L
sa(dp3424
g6
I01
sg7
g2978
sg9
L5L
sa(dp3425
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3426
sa(dp3427
g6
I01
sg7
g2982
sg9
L5L
sa(dp3428
g6
I01
sg7
g2992
sg9
L2L
sg18
Vcomplex.conjugate() -> complex\u000a\u000aReturn the complex conjugate of its argument. (3-4j).conjugate() == 3+4j.
p3429
sa(dp3430
g6
I01
sg7
g3000
sg9
L5L
sa(dp3431
g6
I01
sg7
g3004
sg9
L5L
sasg6
I01
sg7
Vcomplex
p3432
sg9
L3L
sg18
Vcomplex(real[, imag]) -> complex number\u000a\u000aCreate a complex number from a real part and an optional imaginary part.\u000aThis is equivalent to (real + imag*1j) where imag defaults to 0.
p3433
sa(dp3434
g6
I01
sg7
Vcopyright
p3435
sg9
L5L
sa(dp3436
g6
I01
sg7
Vcredits
p3437
sg9
L5L
sa(dp3438
g6
I01
sg7
Vdelattr
p3439
sg9
L2L
sg18
VDeletes the named attribute from the given object.\u000a\u000adelattr(x, 'y') is equivalent to ``del x.y''
p3440
sa(dp3441
g1
(lp3442
(dp3443
g6
I01
sg7
g3017
sg9
L2L
sg18
VTrue if D has a key k, else False.
p3444
sa(dp3445
g6
I01
sg7
g13
sg9
L5L
sa(dp3446
g6
I01
sg7
g3020
sg9
L5L
sa(dp3447
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3448
sa(dp3449
g6
I01
sg7
g21
sg9
L5L
sa(dp3450
g6
I01
sg7
g23
sg9
L5L
sa(dp3451
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3452
sa(dp3453
g6
I01
sg7
g28
sg9
L5L
sa(dp3454
g6
I01
sg7
g30
sg9
L5L
sa(dp3455
g6
I01
sg7
g3030
sg9
L2L
sg18
Vx.__getitem__(y) <==> x[y]
p3456
sa(dp3457
g6
I01
sg7
g32
sg9
L5L
sa(dp3458
g6
I01
sg7
g34
sg9
L5L
sa(dp3459
g6
I01
sg7
g36
sg9
L5L
sa(dp3460
g6
I01
sg7
g3039
sg9
L5L
sa(dp3461
g6
I01
sg7
g38
sg9
L5L
sa(dp3462
g6
I01
sg7
g3042
sg9
L5L
sa(dp3463
g6
I01
sg7
g40
sg9
L5L
sa(dp3464
g6
I01
sg7
g42
sg9
L5L
sa(dp3465
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3466
sa(dp3467
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p3468
sa(dp3469
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3470
sa(dp3471
g6
I01
sg7
g52
sg9
L5L
sa(dp3472
g6
I01
sg7
g54
sg9
L5L
sa(dp3473
g6
I01
sg7
g3058
sg9
L5L
sa(dp3474
g6
I01
sg7
g58
sg9
L2L
sg18
VD.__sizeof__() -> size of D in memory, in bytes
p3475
sa(dp3476
g6
I01
sg7
g61
sg9
L5L
sa(dp3477
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3478
sa(dp3479
g6
I01
sg7
g3074
sg9
L2L
sg18
VD.clear() -> None.  Remove all items from D.
p3480
sa(dp3481
g6
I01
sg7
g3077
sg9
L2L
sg18
VD.copy() -> a shallow copy of D
p3482
sa(dp3483
g6
I01
sg7
Vfromkeys
p3484
sg9
L2L
sg18
VReturns a new dict with keys from iterable and values equal to value.
p3485
sa(dp3486
g6
I01
sg7
Vget
p3487
sg9
L2L
sg18
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p3488
sa(dp3489
g6
I01
sg7
Vitems
p3490
sg9
L2L
sg18
VD.items() -> a set-like object providing a view on D's items
p3491
sa(dp3492
g6
I01
sg7
Vkeys
p3493
sg9
L2L
sg18
VD.keys() -> a set-like object providing a view on D's keys
p3494
sa(dp3495
g6
I01
sg7
g3149
sg9
L2L
sg18
VD.pop(k[,d]) -> v, remove specified key and return the corresponding value.\u000aIf key is not found, d is returned if given, otherwise KeyError is raised
p3496
sa(dp3497
g6
I01
sg7
Vpopitem
p3498
sg9
L2L
sg18
VD.popitem() -> (k, v), remove and return some (key, value) pair as a\u000a2-tuple; but raise KeyError if D is empty.
p3499
sa(dp3500
g6
I01
sg7
Vsetdefault
p3501
sg9
L2L
sg18
VD.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
p3502
sa(dp3503
g6
I01
sg7
Vupdate
p3504
sg9
L2L
sg18
VD.update([E, ]**F) -> None.  Update D from dict/iterable E and F.\u000aIf E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\u000aIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\u000aIn either case, this is followed by: for k in F:  D[k] = F[k]
p3505
sa(dp3506
g6
I01
sg7
Vvalues
p3507
sg9
L2L
sg18
VD.values() -> an object providing a view on D's values
p3508
sasg6
I01
sg7
Vdict
p3509
sg9
L3L
sg18
Vdict() -> new empty dictionary\u000adict(mapping) -> new dictionary initialized from a mapping object's\u000a    (key, value) pairs\u000adict(iterable) -> new dictionary initialized as if via:\u000a    d = {}\u000a    for k, v in iterable:\u000a        d[k] = v\u000adict(**kwargs) -> new dictionary initialized with the name=value pairs\u000a    in the keyword argument list.  For example:  dict(one=1, two=2)
p3510
sa(dp3511
g6
I01
sg7
Vdir
p3512
sg9
L2L
sg18
Vdir([object]) -> list of strings\u000a\u000aIf called without an argument, return the names in the current scope.\u000aElse, return an alphabetized list of names comprising (some of) the attributes\u000aof the given object, and of attributes reachable from it.\u000aIf the object supplies a method named __dir__, it will be used; otherwise\u000athe default dir() logic is used and returns:\u000a  for a module object: the module's attributes.\u000a  for a class object:  its attributes, and recursively the attributes\u000a    of its bases.\u000a  for any other object: its attributes, its class's attributes, and\u000a    recursively the attributes of its class's base classes.
p3513
sa(dp3514
g6
I01
sg7
Vdivmod
p3515
sg9
L2L
sg18
VReturn the tuple (x//y, x%y).  Invariant: div*y + mod == x.
p3516
sa(dp3517
g1
(lp3518
(dp3519
g6
I01
sg7
g13
sg9
L5L
sa(dp3520
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3521
sa(dp3522
g6
I01
sg7
g21
sg9
L5L
sa(dp3523
g6
I01
sg7
g23
sg9
L5L
sa(dp3524
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3525
sa(dp3526
g6
I01
sg7
g28
sg9
L5L
sa(dp3527
g6
I01
sg7
g30
sg9
L5L
sa(dp3528
g6
I01
sg7
g32
sg9
L5L
sa(dp3529
g6
I01
sg7
g34
sg9
L5L
sa(dp3530
g6
I01
sg7
g36
sg9
L5L
sa(dp3531
g6
I01
sg7
g3039
sg9
L5L
sa(dp3532
g6
I01
sg7
g38
sg9
L5L
sa(dp3533
g6
I01
sg7
g40
sg9
L5L
sa(dp3534
g6
I01
sg7
g42
sg9
L5L
sa(dp3535
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3536
sa(dp3537
g6
I01
sg7
V__next__
p3538
sg9
L5L
sa(dp3539
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p3540
sa(dp3541
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3542
sa(dp3543
g6
I01
sg7
g52
sg9
L5L
sa(dp3544
g6
I01
sg7
g54
sg9
L5L
sa(dp3545
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3546
sa(dp3547
g6
I01
sg7
g61
sg9
L5L
sa(dp3548
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3549
sasg6
I01
sg7
Venumerate
p3550
sg9
L3L
sg18
Venumerate(iterable[, start]) -> iterator for index, value of iterable\u000a\u000aReturn an enumerate object.  iterable must be another object that supports\u000aiteration.  The enumerate object yields pairs containing a count (from\u000astart, which defaults to zero) and a value yielded by the iterable argument.\u000aenumerate is useful for obtaining an indexed list:\u000a    (0, seq[0]), (1, seq[1]), (2, seq[2]), ...
p3551
sa(dp3552
g6
I01
sg7
Veval
p3553
sg9
L2L
sg18
VEvaluate the given source in the context of globals and locals.\u000a\u000aThe source may be a string representing a Python expression\u000aor a code object as returned by compile().\u000aThe globals must be a dictionary and locals can be any mapping,\u000adefaulting to the current globals and locals.\u000aIf only globals is given, locals defaults to it.
p3554
sa(dp3555
g6
I01
sg7
Vexec
p3556
sg9
L2L
sg18
VExecute the given source in the context of globals and locals.\u000a\u000aThe source may be a string representing one or more Python statements\u000aor a code object as returned by compile().\u000aThe globals must be a dictionary and locals can be any mapping,\u000adefaulting to the current globals and locals.\u000aIf only globals is given, locals defaults to it.
p3557
sa(dp3558
g6
I01
sg7
Vexit
p3559
sg9
L5L
sa(dp3560
g1
(lp3561
(dp3562
g6
I01
sg7
g13
sg9
L5L
sa(dp3563
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3564
sa(dp3565
g6
I01
sg7
g21
sg9
L5L
sa(dp3566
g6
I01
sg7
g23
sg9
L5L
sa(dp3567
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3568
sa(dp3569
g6
I01
sg7
g28
sg9
L5L
sa(dp3570
g6
I01
sg7
g30
sg9
L5L
sa(dp3571
g6
I01
sg7
g32
sg9
L5L
sa(dp3572
g6
I01
sg7
g34
sg9
L5L
sa(dp3573
g6
I01
sg7
g36
sg9
L5L
sa(dp3574
g6
I01
sg7
g3039
sg9
L5L
sa(dp3575
g6
I01
sg7
g38
sg9
L5L
sa(dp3576
g6
I01
sg7
g40
sg9
L5L
sa(dp3577
g6
I01
sg7
g42
sg9
L5L
sa(dp3578
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3579
sa(dp3580
g6
I01
sg7
g3538
sg9
L5L
sa(dp3581
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p3582
sa(dp3583
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3584
sa(dp3585
g6
I01
sg7
g52
sg9
L5L
sa(dp3586
g6
I01
sg7
g54
sg9
L5L
sa(dp3587
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3588
sa(dp3589
g6
I01
sg7
g61
sg9
L5L
sa(dp3590
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3591
sasg6
I01
sg7
Vfilter
p3592
sg9
L3L
sg18
Vfilter(function or None, iterable) --> filter object\u000a\u000aReturn an iterator yielding those items of iterable for which function(item)\u000ais true. If function is None, return the items that are true.
p3593
sa(dp3594
g1
(lp3595
(dp3596
g6
I01
sg7
g2880
sg9
L5L
sa(dp3597
g6
I01
sg7
g2882
sg9
L5L
sa(dp3598
g6
I01
sg7
g2886
sg9
L5L
sa(dp3599
g6
I01
sg7
g13
sg9
L5L
sa(dp3600
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3601
sa(dp3602
g6
I01
sg7
g2894
sg9
L5L
sa(dp3603
g6
I01
sg7
g21
sg9
L5L
sa(dp3604
g6
I01
sg7
g23
sg9
L5L
sa(dp3605
g6
I01
sg7
g2898
sg9
L5L
sa(dp3606
g6
I01
sg7
g2903
sg9
L5L
sa(dp3607
g6
I01
sg7
g25
sg9
L2L
sg18
Vfloat.__format__(format_spec) -> string\u000a\u000aFormats the float according to format_spec.
p3608
sa(dp3609
g6
I01
sg7
g28
sg9
L5L
sa(dp3610
g6
I01
sg7
g30
sg9
L5L
sa(dp3611
g6
I01
sg7
V__getformat__
p3612
sg9
L2L
sg18
Vfloat.__getformat__(typestr) -> string\u000a\u000aYou probably don't want to use this function.  It exists mainly to be\u000aused in Python's test suite.\u000a\u000atypestr must be 'double' or 'float'.  This function returns whichever of\u000a'unknown', 'IEEE, big-endian' or 'IEEE, little-endian' best describes the\u000aformat of floating point numbers used by the C type named by typestr.
p3613
sa(dp3614
g6
I01
sg7
g2908
sg9
L2L
sg18
Nsa(dp3615
g6
I01
sg7
g32
sg9
L5L
sa(dp3616
g6
I01
sg7
g34
sg9
L5L
sa(dp3617
g6
I01
sg7
g36
sg9
L5L
sa(dp3618
g6
I01
sg7
g2915
sg9
L5L
sa(dp3619
g6
I01
sg7
g38
sg9
L5L
sa(dp3620
g6
I01
sg7
g40
sg9
L5L
sa(dp3621
g6
I01
sg7
g2923
sg9
L5L
sa(dp3622
g6
I01
sg7
g2925
sg9
L5L
sa(dp3623
g6
I01
sg7
g42
sg9
L5L
sa(dp3624
g6
I01
sg7
g2928
sg9
L5L
sa(dp3625
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3626
sa(dp3627
g6
I01
sg7
g2934
sg9
L5L
sa(dp3628
g6
I01
sg7
g2936
sg9
L5L
sa(dp3629
g6
I01
sg7
g2938
sg9
L5L
sa(dp3630
g6
I01
sg7
g2942
sg9
L5L
sa(dp3631
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p3632
sa(dp3633
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3634
sa(dp3635
g6
I01
sg7
g52
sg9
L5L
sa(dp3636
g6
I01
sg7
g2949
sg9
L5L
sa(dp3637
g6
I01
sg7
g2953
sg9
L5L
sa(dp3638
g6
I01
sg7
g2955
sg9
L5L
sa(dp3639
g6
I01
sg7
g2959
sg9
L2L
sg18
VReturn the Integral closest to x, rounding half toward even.\u000aWhen an argument is passed, work like built-in round(x, ndigits).
p3640
sa(dp3641
g6
I01
sg7
g2962
sg9
L5L
sa(dp3642
g6
I01
sg7
g2968
sg9
L5L
sa(dp3643
g6
I01
sg7
g2970
sg9
L5L
sa(dp3644
g6
I01
sg7
g54
sg9
L5L
sa(dp3645
g6
I01
sg7
V__setformat__
p3646
sg9
L2L
sg18
Vfloat.__setformat__(typestr, fmt) -> None\u000a\u000aYou probably don't want to use this function.  It exists mainly to be\u000aused in Python's test suite.\u000a\u000atypestr must be 'double' or 'float'.  fmt must be one of 'unknown',\u000a'IEEE, big-endian' or 'IEEE, little-endian', and in addition can only be\u000aone of the latter two if it appears to match the underlying C reality.\u000a\u000aOverride the automatic determination of C-level floating point type.\u000aThis affects how floats are converted to and from binary strings.
p3647
sa(dp3648
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3649
sa(dp3650
g6
I01
sg7
g61
sg9
L5L
sa(dp3651
g6
I01
sg7
g2978
sg9
L5L
sa(dp3652
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3653
sa(dp3654
g6
I01
sg7
g2982
sg9
L5L
sa(dp3655
g6
I01
sg7
g2984
sg9
L2L
sg18
VReturn the Integral closest to x between 0 and x.
p3656
sa(dp3657
g6
I01
sg7
Vas_integer_ratio
p3658
sg9
L2L
sg18
Vfloat.as_integer_ratio() -> (int, int)\u000a\u000aReturn a pair of integers, whose ratio is exactly equal to the original\u000afloat and with a positive denominator.\u000aRaise OverflowError on infinities and a ValueError on NaNs.\u000a\u000a>>> (10.0).as_integer_ratio()\u000a(10, 1)\u000a>>> (0.0).as_integer_ratio()\u000a(0, 1)\u000a>>> (-.25).as_integer_ratio()\u000a(-1, 4)
p3659
sa(dp3660
g6
I01
sg7
g2992
sg9
L2L
sg18
VReturn self, the complex conjugate of any float.
p3661
sa(dp3662
g6
I01
sg7
g3098
sg9
L2L
sg18
Vfloat.fromhex(string) -> float\u000a\u000aCreate a floating-point number from a hexadecimal string.\u000a>>> float.fromhex('0x1.ffffp10')\u000a2047.984375\u000a>>> float.fromhex('-0x1p-1074')\u000a-5e-324
p3663
sa(dp3664
g6
I01
sg7
g3101
sg9
L2L
sg18
Vfloat.hex() -> string\u000a\u000aReturn a hexadecimal representation of a floating-point number.\u000a>>> (-0.1).hex()\u000a'-0x1.999999999999ap-4'\u000a>>> 3.14159.hex()\u000a'0x1.921f9f01b866ep+1'
p3665
sa(dp3666
g6
I01
sg7
g3000
sg9
L5L
sa(dp3667
g6
I01
sg7
Vis_integer
p3668
sg9
L2L
sg18
VReturn True if the float is an integer.
p3669
sa(dp3670
g6
I01
sg7
g3004
sg9
L5L
sasg6
I01
sg7
Vfloat
p3671
sg9
L3L
sg18
Vfloat(x) -> floating point number\u000a\u000aConvert a string or number to a floating point number, if possible.
p3672
sa(dp3673
g6
I01
sg7
Vformat
p3674
sg9
L2L
sg18
VReturn value.__format__(format_spec)\u000a\u000aformat_spec defaults to the empty string
p3675
sa(dp3676
g1
(lp3677
(dp3678
g6
I01
sg7
g2884
sg9
L5L
sa(dp3679
g6
I01
sg7
g3017
sg9
L2L
sg18
Vx.__contains__(y) <==> y in x.
p3680
sa(dp3681
g6
I01
sg7
g13
sg9
L5L
sa(dp3682
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3683
sa(dp3684
g6
I01
sg7
g21
sg9
L5L
sa(dp3685
g6
I01
sg7
g23
sg9
L5L
sa(dp3686
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3687
sa(dp3688
g6
I01
sg7
g28
sg9
L5L
sa(dp3689
g6
I01
sg7
g30
sg9
L5L
sa(dp3690
g6
I01
sg7
g32
sg9
L5L
sa(dp3691
g6
I01
sg7
g34
sg9
L5L
sa(dp3692
g6
I01
sg7
g36
sg9
L5L
sa(dp3693
g6
I01
sg7
g3039
sg9
L5L
sa(dp3694
g6
I01
sg7
g38
sg9
L5L
sa(dp3695
g6
I01
sg7
g3042
sg9
L5L
sa(dp3696
g6
I01
sg7
g40
sg9
L5L
sa(dp3697
g6
I01
sg7
g42
sg9
L5L
sa(dp3698
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3699
sa(dp3700
g6
I01
sg7
g2932
sg9
L5L
sa(dp3701
g6
I01
sg7
g2940
sg9
L5L
sa(dp3702
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p3703
sa(dp3704
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3705
sa(dp3706
g6
I01
sg7
g52
sg9
L5L
sa(dp3707
g6
I01
sg7
g2957
sg9
L5L
sa(dp3708
g6
I01
sg7
g2968
sg9
L5L
sa(dp3709
g6
I01
sg7
g2972
sg9
L5L
sa(dp3710
g6
I01
sg7
g54
sg9
L5L
sa(dp3711
g6
I01
sg7
g58
sg9
L2L
sg18
VS.__sizeof__() -> size of S in memory, in bytes
p3712
sa(dp3713
g6
I01
sg7
g61
sg9
L5L
sa(dp3714
g6
I01
sg7
g2978
sg9
L5L
sa(dp3715
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3716
sa(dp3717
g6
I01
sg7
g2987
sg9
L5L
sa(dp3718
g6
I01
sg7
g3077
sg9
L2L
sg18
VReturn a shallow copy of a set.
p3719
sa(dp3720
g6
I01
sg7
Vdifference
p3721
sg9
L2L
sg18
VReturn the difference of two or more sets as a new set.\u000a\u000a(i.e. all elements that are in this set but not the others.)
p3722
sa(dp3723
g6
I01
sg7
Vintersection
p3724
sg9
L2L
sg18
VReturn the intersection of two sets as a new set.\u000a\u000a(i.e. all elements that are in both sets.)
p3725
sa(dp3726
g6
I01
sg7
Visdisjoint
p3727
sg9
L2L
sg18
VReturn True if two sets have a null intersection.
p3728
sa(dp3729
g6
I01
sg7
Vissubset
p3730
sg9
L2L
sg18
VReport whether another set contains this set.
p3731
sa(dp3732
g6
I01
sg7
Vissuperset
p3733
sg9
L2L
sg18
VReport whether this set contains another set.
p3734
sa(dp3735
g6
I01
sg7
Vsymmetric_difference
p3736
sg9
L2L
sg18
VReturn the symmetric difference of two sets as a new set.\u000a\u000a(i.e. all elements that are in exactly one of the sets.)
p3737
sa(dp3738
g6
I01
sg7
Vunion
p3739
sg9
L2L
sg18
VReturn the union of sets as a new set.\u000a\u000a(i.e. all elements that are in either set.)
p3740
sasg6
I01
sg7
Vfrozenset
p3741
sg9
L3L
sg18
Vfrozenset() -> empty frozenset object\u000afrozenset(iterable) -> frozenset object\u000a\u000aBuild an immutable unordered collection of unique elements.
p3742
sa(dp3743
g6
I01
sg7
Vgetattr
p3744
sg9
L2L
sg18
Vgetattr(object, name[, default]) -> value\u000a\u000aGet a named attribute from an object; getattr(x, 'y') is equivalent to x.y.\u000aWhen a default argument is given, it is returned when the attribute doesn't\u000aexist; without it, an exception is raised in that case.
p3745
sa(dp3746
g6
I01
sg7
Vglobals
p3747
sg9
L2L
sg18
VReturn the dictionary containing the current scope's global variables.\u000a\u000aNOTE: Updates to this dictionary *will* affect name lookups in the current\u000aglobal scope and vice-versa.
p3748
sa(dp3749
g6
I01
sg7
Vhasattr
p3750
sg9
L2L
sg18
VReturn whether the object has an attribute with the given name.\u000a\u000aThis is done by calling getattr(obj, name) and catching AttributeError.
p3751
sa(dp3752
g6
I01
sg7
Vhash
p3753
sg9
L2L
sg18
VReturn the hash value for the given object.\u000a\u000aTwo objects that compare equal must also have the same hash value, but the\u000areverse is not necessarily true.
p3754
sa(dp3755
g6
I01
sg7
Vhelp
p3756
sg9
L5L
sa(dp3757
g6
I01
sg7
g3101
sg9
L2L
sg18
VReturn the hexadecimal representation of an integer.\u000a\u000a   >>> hex(12648430)\u000a   '0xc0ffee'
p3758
sa(dp3759
g6
I01
sg7
Vid
p3760
sg9
L2L
sg18
VReturn the identity of an object.\u000a\u000aThis is guaranteed to be unique among simultaneously existing objects.\u000a(CPython uses the object's memory address.)
p3761
sa(dp3762
g6
I01
sg7
Vinput
p3763
sg9
L2L
sg18
VRead a string from standard input.  The trailing newline is stripped.\u000a\u000aThe prompt string, if given, is printed to standard output without a\u000atrailing newline before reading input.\u000a\u000aIf the user hits EOF (*nix: Ctrl-D, Windows: Ctrl-Z+Return), raise EOFError.\u000aOn *nix systems, readline is used if available.
p3764
sa(dp3765
g1
(lp3766
(dp3767
g6
I01
sg7
g2880
sg9
L5L
sa(dp3768
g6
I01
sg7
g2882
sg9
L5L
sa(dp3769
g6
I01
sg7
g2884
sg9
L5L
sa(dp3770
g6
I01
sg7
g2886
sg9
L5L
sa(dp3771
g6
I01
sg7
g2888
sg9
L2L
sg18
VCeiling of an Integral returns itself.
p3772
sa(dp3773
g6
I01
sg7
g13
sg9
L5L
sa(dp3774
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3775
sa(dp3776
g6
I01
sg7
g2894
sg9
L5L
sa(dp3777
g6
I01
sg7
g21
sg9
L5L
sa(dp3778
g6
I01
sg7
g23
sg9
L5L
sa(dp3779
g6
I01
sg7
g2898
sg9
L5L
sa(dp3780
g6
I01
sg7
g2900
sg9
L2L
sg18
VFlooring an Integral returns itself.
p3781
sa(dp3782
g6
I01
sg7
g2903
sg9
L5L
sa(dp3783
g6
I01
sg7
g25
sg9
L2L
sg18
Nsa(dp3784
g6
I01
sg7
g28
sg9
L5L
sa(dp3785
g6
I01
sg7
g30
sg9
L5L
sa(dp3786
g6
I01
sg7
g2908
sg9
L2L
sg18
Nsa(dp3787
g6
I01
sg7
g32
sg9
L5L
sa(dp3788
g6
I01
sg7
g34
sg9
L5L
sa(dp3789
g6
I01
sg7
g2912
sg9
L5L
sa(dp3790
g6
I01
sg7
g36
sg9
L5L
sa(dp3791
g6
I01
sg7
g2915
sg9
L5L
sa(dp3792
g6
I01
sg7
g2917
sg9
L5L
sa(dp3793
g6
I01
sg7
g38
sg9
L5L
sa(dp3794
g6
I01
sg7
g2920
sg9
L5L
sa(dp3795
g6
I01
sg7
g40
sg9
L5L
sa(dp3796
g6
I01
sg7
g2923
sg9
L5L
sa(dp3797
g6
I01
sg7
g2925
sg9
L5L
sa(dp3798
g6
I01
sg7
g42
sg9
L5L
sa(dp3799
g6
I01
sg7
g2928
sg9
L5L
sa(dp3800
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3801
sa(dp3802
g6
I01
sg7
g2932
sg9
L5L
sa(dp3803
g6
I01
sg7
g2934
sg9
L5L
sa(dp3804
g6
I01
sg7
g2936
sg9
L5L
sa(dp3805
g6
I01
sg7
g2938
sg9
L5L
sa(dp3806
g6
I01
sg7
g2940
sg9
L5L
sa(dp3807
g6
I01
sg7
g2942
sg9
L5L
sa(dp3808
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p3809
sa(dp3810
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3811
sa(dp3812
g6
I01
sg7
g52
sg9
L5L
sa(dp3813
g6
I01
sg7
g2949
sg9
L5L
sa(dp3814
g6
I01
sg7
g2951
sg9
L5L
sa(dp3815
g6
I01
sg7
g2953
sg9
L5L
sa(dp3816
g6
I01
sg7
g2955
sg9
L5L
sa(dp3817
g6
I01
sg7
g2957
sg9
L5L
sa(dp3818
g6
I01
sg7
g2959
sg9
L2L
sg18
VRounding an Integral returns itself.\u000aRounding with an ndigits argument also returns an integer.
p3819
sa(dp3820
g6
I01
sg7
g2962
sg9
L5L
sa(dp3821
g6
I01
sg7
g2964
sg9
L5L
sa(dp3822
g6
I01
sg7
g2966
sg9
L5L
sa(dp3823
g6
I01
sg7
g2968
sg9
L5L
sa(dp3824
g6
I01
sg7
g2970
sg9
L5L
sa(dp3825
g6
I01
sg7
g2972
sg9
L5L
sa(dp3826
g6
I01
sg7
g54
sg9
L5L
sa(dp3827
g6
I01
sg7
g58
sg9
L2L
sg18
VReturns size in memory, in bytes
p3828
sa(dp3829
g6
I01
sg7
g61
sg9
L5L
sa(dp3830
g6
I01
sg7
g2978
sg9
L5L
sa(dp3831
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3832
sa(dp3833
g6
I01
sg7
g2982
sg9
L5L
sa(dp3834
g6
I01
sg7
g2984
sg9
L2L
sg18
VTruncating an Integral returns itself.
p3835
sa(dp3836
g6
I01
sg7
g2987
sg9
L5L
sa(dp3837
g6
I01
sg7
g2989
sg9
L2L
sg18
Vint.bit_length() -> int\u000a\u000aNumber of bits necessary to represent self in binary.\u000a>>> bin(37)\u000a'0b100101'\u000a>>> (37).bit_length()\u000a6
p3838
sa(dp3839
g6
I01
sg7
g2992
sg9
L2L
sg18
VReturns self, the complex conjugate of any int.
p3840
sa(dp3841
g6
I01
sg7
g2995
sg9
L5L
sa(dp3842
g6
I01
sg7
g2997
sg9
L2L
sg18
Vint.from_bytes(bytes, byteorder, *, signed=False) -> int\u000a\u000aReturn the integer represented by the given array of bytes.\u000a\u000aThe bytes argument must be a bytes-like object (e.g. bytes or bytearray).\u000a\u000aThe byteorder argument determines the byte order used to represent the\u000ainteger.  If byteorder is 'big', the most significant byte is at the\u000abeginning of the byte array.  If byteorder is 'little', the most\u000asignificant byte is at the end of the byte array.  To request the native\u000abyte order of the host system, use `sys.byteorder' as the byte order value.\u000a\u000aThe signed keyword-only argument indicates whether two's complement is\u000aused to represent the integer.
p3843
sa(dp3844
g6
I01
sg7
g3000
sg9
L5L
sa(dp3845
g6
I01
sg7
g3002
sg9
L5L
sa(dp3846
g6
I01
sg7
g3004
sg9
L5L
sa(dp3847
g6
I01
sg7
g3006
sg9
L2L
sg18
Vint.to_bytes(length, byteorder, *, signed=False) -> bytes\u000a\u000aReturn an array of bytes representing an integer.\u000a\u000aThe integer is represented using length bytes.  An OverflowError is\u000araised if the integer is not representable with the given number of\u000abytes.\u000a\u000aThe byteorder argument determines the byte order used to represent the\u000ainteger.  If byteorder is 'big', the most significant byte is at the\u000abeginning of the byte array.  If byteorder is 'little', the most\u000asignificant byte is at the end of the byte array.  To request the native\u000abyte order of the host system, use `sys.byteorder' as the byte order value.\u000a\u000aThe signed keyword-only argument determines whether two's complement is\u000aused to represent the integer.  If signed is False and a negative integer\u000ais given, an OverflowError is raised.
p3848
sasg6
I01
sg7
Vint
p3849
sg9
L3L
sg18
Vint(x=0) -> integer\u000aint(x, base=10) -> integer\u000a\u000aConvert a number or string to an integer, or return 0 if no arguments\u000aare given.  If x is a number, return x.__int__().  For floating point\u000anumbers, this truncates towards zero.\u000a\u000aIf x is not a number or if base is given, then x must be a string,\u000abytes, or bytearray instance representing an integer literal in the\u000agiven base.  The literal can be preceded by '+' or '-' and be surrounded\u000aby whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.\u000aBase 0 means to interpret the base from the string as an integer literal.\u000a>>> int('0b100', base=0)\u000a4
p3850
sa(dp3851
g6
I01
sg7
Visinstance
p3852
sg9
L2L
sg18
VReturn whether an object is an instance of a class or of a subclass thereof.\u000a\u000aA tuple, as in ``isinstance(x, (A, B, ...))``, may be given as the target to\u000acheck against. This is equivalent to ``isinstance(x, A) or isinstance(x, B)\u000aor ...`` etc.
p3853
sa(dp3854
g6
I01
sg7
Vissubclass
p3855
sg9
L2L
sg18
VReturn whether 'cls' is a derived from another class or is the same class.\u000a\u000aA tuple, as in ``issubclass(x, (A, B, ...))``, may be given as the target to\u000acheck against. This is equivalent to ``issubclass(x, A) or issubclass(x, B)\u000aor ...`` etc.
p3856
sa(dp3857
g6
I01
sg7
Viter
p3858
sg9
L2L
sg18
Viter(iterable) -> iterator\u000aiter(callable, sentinel) -> iterator\u000a\u000aGet an iterator from an object.  In the first form, the argument must\u000asupply its own iterator, or be a sequence.\u000aIn the second form, the callable is called until it returns the sentinel.
p3859
sa(dp3860
g6
I01
sg7
Vlen
p3861
sg9
L2L
sg18
VReturn the number of items in a container.
p3862
sa(dp3863
g6
I01
sg7
Vlicense
p3864
sg9
L5L
sa(dp3865
g1
(lp3866
(dp3867
g6
I01
sg7
g2882
sg9
L5L
sa(dp3868
g6
I01
sg7
g3017
sg9
L5L
sa(dp3869
g6
I01
sg7
g13
sg9
L5L
sa(dp3870
g6
I01
sg7
g3020
sg9
L5L
sa(dp3871
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3872
sa(dp3873
g6
I01
sg7
g21
sg9
L5L
sa(dp3874
g6
I01
sg7
g23
sg9
L5L
sa(dp3875
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3876
sa(dp3877
g6
I01
sg7
g28
sg9
L5L
sa(dp3878
g6
I01
sg7
g30
sg9
L5L
sa(dp3879
g6
I01
sg7
g3030
sg9
L2L
sg18
Vx.__getitem__(y) <==> x[y]
p3880
sa(dp3881
g6
I01
sg7
g32
sg9
L5L
sa(dp3882
g6
I01
sg7
g34
sg9
L5L
sa(dp3883
g6
I01
sg7
g3034
sg9
L5L
sa(dp3884
g6
I01
sg7
g3036
sg9
L5L
sa(dp3885
g6
I01
sg7
g36
sg9
L5L
sa(dp3886
g6
I01
sg7
g3039
sg9
L5L
sa(dp3887
g6
I01
sg7
g38
sg9
L5L
sa(dp3888
g6
I01
sg7
g3042
sg9
L5L
sa(dp3889
g6
I01
sg7
g40
sg9
L5L
sa(dp3890
g6
I01
sg7
g2925
sg9
L5L
sa(dp3891
g6
I01
sg7
g42
sg9
L5L
sa(dp3892
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3893
sa(dp3894
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p3895
sa(dp3896
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3897
sa(dp3898
g6
I01
sg7
g52
sg9
L5L
sa(dp3899
g6
I01
sg7
V__reversed__
p3900
sg9
L2L
sg18
VL.__reversed__() -- return a reverse iterator over the list
p3901
sa(dp3902
g6
I01
sg7
g2955
sg9
L5L
sa(dp3903
g6
I01
sg7
g54
sg9
L5L
sa(dp3904
g6
I01
sg7
g3058
sg9
L5L
sa(dp3905
g6
I01
sg7
g58
sg9
L2L
sg18
VL.__sizeof__() -- size of L in memory, in bytes
p3906
sa(dp3907
g6
I01
sg7
g61
sg9
L5L
sa(dp3908
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3909
sa(dp3910
g6
I01
sg7
g3065
sg9
L2L
sg18
VL.append(object) -> None -- append object to end
p3911
sa(dp3912
g6
I01
sg7
g3074
sg9
L2L
sg18
VL.clear() -> None -- remove all items from L
p3913
sa(dp3914
g6
I01
sg7
g3077
sg9
L2L
sg18
VL.copy() -> list -- a shallow copy of L
p3915
sa(dp3916
g6
I01
sg7
g3080
sg9
L2L
sg18
VL.count(value) -> integer -- return number of occurrences of value
p3917
sa(dp3918
g6
I01
sg7
g3092
sg9
L2L
sg18
VL.extend(iterable) -> None -- extend list by appending elements from the iterable
p3919
sa(dp3920
g6
I01
sg7
g3104
sg9
L2L
sg18
VL.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p3921
sa(dp3922
g6
I01
sg7
g3107
sg9
L2L
sg18
VL.insert(index, object) -- insert object before index
p3923
sa(dp3924
g6
I01
sg7
g3149
sg9
L2L
sg18
VL.pop([index]) -> item -- remove and return item at index (default last).\u000aRaises IndexError if list is empty or index is out of range.
p3925
sa(dp3926
g6
I01
sg7
g3152
sg9
L2L
sg18
VL.remove(value) -> None -- remove first occurrence of value.\u000aRaises ValueError if the value is not present.
p3927
sa(dp3928
g6
I01
sg7
g3158
sg9
L2L
sg18
VL.reverse() -- reverse *IN PLACE*
p3929
sa(dp3930
g6
I01
sg7
Vsort
p3931
sg9
L2L
sg18
VL.sort(key=None, reverse=False) -> None -- stable sort *IN PLACE*
p3932
sasg6
I01
sg7
Vlist
p3933
sg9
L3L
sg18
Vlist() -> new empty list\u000alist(iterable) -> new list initialized from iterable's items
p3934
sa(dp3935
g6
I01
sg7
Vlocals
p3936
sg9
L2L
sg18
VReturn a dictionary containing the current scope's local variables.\u000a\u000aNOTE: Whether or not updates to this dictionary will affect name lookups in\u000athe local scope and vice-versa is *implementation dependent* and not\u000acovered by any backwards compatibility guarantees.
p3937
sa(dp3938
g1
(lp3939
(dp3940
g6
I01
sg7
g13
sg9
L5L
sa(dp3941
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3942
sa(dp3943
g6
I01
sg7
g21
sg9
L5L
sa(dp3944
g6
I01
sg7
g23
sg9
L5L
sa(dp3945
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3946
sa(dp3947
g6
I01
sg7
g28
sg9
L5L
sa(dp3948
g6
I01
sg7
g30
sg9
L5L
sa(dp3949
g6
I01
sg7
g32
sg9
L5L
sa(dp3950
g6
I01
sg7
g34
sg9
L5L
sa(dp3951
g6
I01
sg7
g36
sg9
L5L
sa(dp3952
g6
I01
sg7
g3039
sg9
L5L
sa(dp3953
g6
I01
sg7
g38
sg9
L5L
sa(dp3954
g6
I01
sg7
g40
sg9
L5L
sa(dp3955
g6
I01
sg7
g42
sg9
L5L
sa(dp3956
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p3957
sa(dp3958
g6
I01
sg7
g3538
sg9
L5L
sa(dp3959
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p3960
sa(dp3961
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p3962
sa(dp3963
g6
I01
sg7
g52
sg9
L5L
sa(dp3964
g6
I01
sg7
g54
sg9
L5L
sa(dp3965
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p3966
sa(dp3967
g6
I01
sg7
g61
sg9
L5L
sa(dp3968
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p3969
sasg6
I01
sg7
Vmap
p3970
sg9
L3L
sg18
Vmap(func, *iterables) --> map object\u000a\u000aMake an iterator that computes the function using arguments from\u000aeach of the iterables.  Stops when the shortest iterable is exhausted.
p3971
sa(dp3972
g6
I01
sg7
Vmax
p3973
sg9
L2L
sg18
Vmax(iterable, *[, default=obj, key=func]) -> value\u000amax(arg1, arg2, *args, *[, key=func]) -> value\u000a\u000aWith a single iterable argument, return its biggest item. The\u000adefault keyword-only argument specifies an object to return if\u000athe provided iterable is empty.\u000aWith two or more arguments, return the largest argument.
p3974
sa(dp3975
g1
(lp3976
(dp3977
g6
I01
sg7
g13
sg9
L5L
sa(dp3978
g6
I01
sg7
g3020
sg9
L5L
sa(dp3979
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p3980
sa(dp3981
g6
I01
sg7
g21
sg9
L5L
sa(dp3982
g6
I01
sg7
V__enter__
p3983
sg9
L2L
sg18
Nsa(dp3984
g6
I01
sg7
g23
sg9
L5L
sa(dp3985
g6
I01
sg7
V__exit__
p3986
sg9
L2L
sg18
Nsa(dp3987
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p3988
sa(dp3989
g6
I01
sg7
g28
sg9
L5L
sa(dp3990
g6
I01
sg7
g30
sg9
L5L
sa(dp3991
g6
I01
sg7
g3030
sg9
L5L
sa(dp3992
g6
I01
sg7
g32
sg9
L5L
sa(dp3993
g6
I01
sg7
g34
sg9
L5L
sa(dp3994
g6
I01
sg7
g36
sg9
L5L
sa(dp3995
g6
I01
sg7
g38
sg9
L5L
sa(dp3996
g6
I01
sg7
g3042
sg9
L5L
sa(dp3997
g6
I01
sg7
g40
sg9
L5L
sa(dp3998
g6
I01
sg7
g42
sg9
L5L
sa(dp3999
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4000
sa(dp4001
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p4002
sa(dp4003
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4004
sa(dp4005
g6
I01
sg7
g52
sg9
L5L
sa(dp4006
g6
I01
sg7
g54
sg9
L5L
sa(dp4007
g6
I01
sg7
g3058
sg9
L5L
sa(dp4008
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4009
sa(dp4010
g6
I01
sg7
g61
sg9
L5L
sa(dp4011
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4012
sa(dp4013
g6
I01
sg7
Vc_contiguous
p4014
sg9
L5L
sa(dp4015
g6
I01
sg7
Vcast
p4016
sg9
L2L
sg18
VCast a memoryview to a new format or shape.
p4017
sa(dp4018
g6
I01
sg7
Vcontiguous
p4019
sg9
L5L
sa(dp4020
g6
I01
sg7
Vf_contiguous
p4021
sg9
L5L
sa(dp4022
g6
I01
sg7
g3674
sg9
L5L
sa(dp4023
g6
I01
sg7
g3101
sg9
L2L
sg18
VReturn the data in the buffer as a string of hexadecimal numbers.
p4024
sa(dp4025
g6
I01
sg7
Vitemsize
p4026
sg9
L5L
sa(dp4027
g6
I01
sg7
Vnbytes
p4028
sg9
L5L
sa(dp4029
g6
I01
sg7
Vndim
p4030
sg9
L5L
sa(dp4031
g6
I01
sg7
Vobj
p4032
sg9
L5L
sa(dp4033
g6
I01
sg7
Vreadonly
p4034
sg9
L5L
sa(dp4035
g6
I01
sg7
Vrelease
p4036
sg9
L2L
sg18
VRelease the underlying buffer exposed by the memoryview object.
p4037
sa(dp4038
g6
I01
sg7
Vshape
p4039
sg9
L5L
sa(dp4040
g6
I01
sg7
Vstrides
p4041
sg9
L5L
sa(dp4042
g6
I01
sg7
Vsuboffsets
p4043
sg9
L5L
sa(dp4044
g6
I01
sg7
Vtobytes
p4045
sg9
L2L
sg18
VReturn the data in the buffer as a byte string.
p4046
sa(dp4047
g6
I01
sg7
Vtolist
p4048
sg9
L2L
sg18
VReturn the data in the buffer as a list of elements.
p4049
sasg6
I01
sg7
Vmemoryview
p4050
sg9
L3L
sg18
VCreate a new memoryview object which references the given object.
p4051
sa(dp4052
g6
I01
sg7
Vmin
p4053
sg9
L2L
sg18
Vmin(iterable, *[, default=obj, key=func]) -> value\u000amin(arg1, arg2, *args, *[, key=func]) -> value\u000a\u000aWith a single iterable argument, return its smallest item. The\u000adefault keyword-only argument specifies an object to return if\u000athe provided iterable is empty.\u000aWith two or more arguments, return the smallest argument.
p4054
sa(dp4055
g6
I01
sg7
Vnext
p4056
sg9
L2L
sg18
Vnext(iterator[, default])\u000a\u000aReturn the next item from the iterator. If default is given and the iterator\u000ais exhausted, it is returned instead of raising StopIteration.
p4057
sa(dp4058
g1
(lp4059
(dp4060
g6
I01
sg7
g13
sg9
L5L
sa(dp4061
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4062
sa(dp4063
g6
I01
sg7
g21
sg9
L5L
sa(dp4064
g6
I01
sg7
g23
sg9
L5L
sa(dp4065
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4066
sa(dp4067
g6
I01
sg7
g28
sg9
L5L
sa(dp4068
g6
I01
sg7
g30
sg9
L5L
sa(dp4069
g6
I01
sg7
g32
sg9
L5L
sa(dp4070
g6
I01
sg7
g34
sg9
L5L
sa(dp4071
g6
I01
sg7
g36
sg9
L5L
sa(dp4072
g6
I01
sg7
g38
sg9
L5L
sa(dp4073
g6
I01
sg7
g40
sg9
L5L
sa(dp4074
g6
I01
sg7
g42
sg9
L5L
sa(dp4075
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4076
sa(dp4077
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p4078
sa(dp4079
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4080
sa(dp4081
g6
I01
sg7
g52
sg9
L5L
sa(dp4082
g6
I01
sg7
g54
sg9
L5L
sa(dp4083
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4084
sa(dp4085
g6
I01
sg7
g61
sg9
L5L
sa(dp4086
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4087
sasg6
I01
sg7
g2453
sg9
L3L
sg18
VThe most base type
p4088
sa(dp4089
g6
I01
sg7
Voct
p4090
sg9
L2L
sg18
VReturn the octal representation of an integer.\u000a\u000a   >>> oct(342391)\u000a   '0o1234567'
p4091
sa(dp4092
g6
I01
sg7
Vopen
p4093
sg9
L2L
sg18
VOpen file and return a stream.  Raise IOError upon failure.\u000a\u000afile is either a text or byte string giving the name (and the path\u000aif the file isn't in the current working directory) of the file to\u000abe opened or an integer file descriptor of the file to be\u000awrapped. (If a file descriptor is given, it is closed when the\u000areturned I/O object is closed, unless closefd is set to False.)\u000a\u000amode is an optional string that specifies the mode in which the file\u000ais opened. It defaults to 'r' which means open for reading in text\u000amode.  Other common values are 'w' for writing (truncating the file if\u000ait already exists), 'x' for creating and writing to a new file, and\u000a'a' for appending (which on some Unix systems, means that all writes\u000aappend to the end of the file regardless of the current seek position).\u000aIn text mode, if encoding is not specified the encoding used is platform\u000adependent: locale.getpreferredencoding(False) is called to get the\u000acurrent locale encoding. (For reading and writing raw bytes use binary\u000amode and leave encoding unspecified.) The available modes are:\u000a\u000a========= ===============================================================\u000aCharacter Meaning\u000a--------- ---------------------------------------------------------------\u000a'r'       open for reading (default)\u000a'w'       open for writing, truncating the file first\u000a'x'       create a new file and open it for writing\u000a'a'       open for writing, appending to the end of the file if it exists\u000a'b'       binary mode\u000a't'       text mode (default)\u000a'+'       open a disk file for updating (reading and writing)\u000a'U'       universal newline mode (deprecated)\u000a========= ===============================================================\u000a\u000aThe default mode is 'rt' (open for reading text). For binary random\u000aaccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\u000a'r+b' opens the file without truncation. The 'x' mode implies 'w' and\u000araises an `FileExistsError` if the file already exists.\u000a\u000aPython distinguishes between files opened in binary and text modes,\u000aeven when the underlying operating system doesn't. Files opened in\u000abinary mode (appending 'b' to the mode argument) return contents as\u000abytes objects without any decoding. In text mode (the default, or when\u000a't' is appended to the mode argument), the contents of the file are\u000areturned as strings, the bytes having been first decoded using a\u000aplatform-dependent encoding or using the specified encoding if given.\u000a\u000a'U' mode is deprecated and will raise an exception in future versions\u000aof Python.  It has no effect in Python 3.  Use newline to control\u000auniversal newlines mode.\u000a\u000abuffering is an optional integer used to set the buffering policy.\u000aPass 0 to switch buffering off (only allowed in binary mode), 1 to select\u000aline buffering (only usable in text mode), and an integer > 1 to indicate\u000athe size of a fixed-size chunk buffer.  When no buffering argument is\u000agiven, the default buffering policy works as follows:\u000a\u000a* Binary files are buffered in fixed-size chunks; the size of the buffer\u000a  is chosen using a heuristic trying to determine the underlying device's\u000a  "block size" and falling back on `io.DEFAULT_BUFFER_SIZE`.\u000a  On many systems, the buffer will typically be 4096 or 8192 bytes long.\u000a\u000a* "Interactive" text files (files for which isatty() returns True)\u000a  use line buffering.  Other text files use the policy described above\u000a  for binary files.\u000a\u000aencoding is the name of the encoding used to decode or encode the\u000afile. This should only be used in text mode. The default encoding is\u000aplatform dependent, but any encoding supported by Python can be\u000apassed.  See the codecs module for the list of supported encodings.\u000a\u000aerrors is an optional string that specifies how encoding errors are to\u000abe handled---this argument should not be used in binary mode. Pass\u000a'strict' to raise a ValueError exception if there is an encoding error\u000a(the default of None has the same effect), or pass 'ignore' to ignore\u000aerrors. (Note that ignoring encoding errors can lead to data loss.)\u000aSee the documentation for codecs.register or run 'help(codecs.Codec)'\u000afor a list of the permitted encoding error strings.\u000a\u000anewline controls how universal newlines works (it only applies to text\u000amode). It can be None, '', '\u005cn', '\u005cr', and '\u005cr\u005cn'.  It works as\u000afollows:\u000a\u000a* On input, if newline is None, universal newlines mode is\u000a  enabled. Lines in the input can end in '\u005cn', '\u005cr', or '\u005cr\u005cn', and\u000a  these are translated into '\u005cn' before being returned to the\u000a  caller. If it is '', universal newline mode is enabled, but line\u000a  endings are returned to the caller untranslated. If it has any of\u000a  the other legal values, input lines are only terminated by the given\u000a  string, and the line ending is returned to the caller untranslated.\u000a\u000a* On output, if newline is None, any '\u005cn' characters written are\u000a  translated to the system default line separator, os.linesep. If\u000a  newline is '' or '\u005cn', no translation takes place. If newline is any\u000a  of the other legal values, any '\u005cn' characters written are translated\u000a  to the given string.\u000a\u000aIf closefd is False, the underlying file descriptor will be kept open\u000awhen the file is closed. This does not work when a file name is given\u000aand must be True in that case.\u000a\u000aA custom opener can be used by passing a callable as *opener*. The\u000aunderlying file descriptor for the file object is then obtained by\u000acalling *opener* with (*file*, *flags*). *opener* must return an open\u000afile descriptor (passing os.open as *opener* results in functionality\u000asimilar to passing None).\u000a\u000aopen() returns a file object whose type depends on the mode, and\u000athrough which the standard file operations such as reading and writing\u000aare performed. When open() is used to open a file in a text mode ('w',\u000a'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\u000aa file in a binary mode, the returned class varies: in read binary\u000amode, it returns a BufferedReader; in write binary and append binary\u000amodes, it returns a BufferedWriter, and in read/write mode, it returns\u000aa BufferedRandom.\u000a\u000aIt is also possible to use a string or bytearray as a file for both\u000areading and writing. For strings StringIO can be used like a file\u000aopened in a text mode, and for bytes a BytesIO can be used like a file\u000aopened in a binary mode.
p4094
sa(dp4095
g6
I01
sg7
Vord
p4096
sg9
L2L
sg18
VReturn the Unicode code point for a one-character string.
p4097
sa(dp4098
g6
I01
sg7
Vpow
p4099
sg9
L2L
sg18
VEquivalent to x**y (with two arguments) or x**y % z (with three arguments)\u000a\u000aSome types, such as ints, are able to use a more efficient algorithm when\u000ainvoked using the three argument form.
p4100
sa(dp4101
g6
I01
sg7
Vprint
p4102
sg9
L2L
sg18
Vprint(value, ..., sep=' ', end='\u005cn', file=sys.stdout, flush=False)\u000a\u000aPrints the values to a stream, or to sys.stdout by default.\u000aOptional keyword arguments:\u000afile:  a file-like object (stream); defaults to the current sys.stdout.\u000asep:   string inserted between values, default a space.\u000aend:   string appended after the last value, default a newline.\u000aflush: whether to forcibly flush the stream.
p4103
sa(dp4104
g1
(lp4105
(dp4106
g6
I01
sg7
g13
sg9
L5L
sa(dp4107
g6
I01
sg7
V__delete__
p4108
sg9
L5L
sa(dp4109
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4110
sa(dp4111
g6
I01
sg7
g21
sg9
L5L
sa(dp4112
g6
I01
sg7
g23
sg9
L5L
sa(dp4113
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4114
sa(dp4115
g6
I01
sg7
g28
sg9
L5L
sa(dp4116
g6
I01
sg7
g3347
sg9
L5L
sa(dp4117
g6
I01
sg7
g30
sg9
L5L
sa(dp4118
g6
I01
sg7
g32
sg9
L5L
sa(dp4119
g6
I01
sg7
g34
sg9
L5L
sa(dp4120
g6
I01
sg7
g36
sg9
L5L
sa(dp4121
g6
I01
sg7
g3353
sg9
L5L
sa(dp4122
g6
I01
sg7
g38
sg9
L5L
sa(dp4123
g6
I01
sg7
g40
sg9
L5L
sa(dp4124
g6
I01
sg7
g42
sg9
L5L
sa(dp4125
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4126
sa(dp4127
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p4128
sa(dp4129
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4130
sa(dp4131
g6
I01
sg7
g52
sg9
L5L
sa(dp4132
g6
I01
sg7
V__set__
p4133
sg9
L5L
sa(dp4134
g6
I01
sg7
g54
sg9
L5L
sa(dp4135
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4136
sa(dp4137
g6
I01
sg7
g61
sg9
L5L
sa(dp4138
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4139
sa(dp4140
g6
I01
sg7
Vdeleter
p4141
sg9
L2L
sg18
VDescriptor to change the deleter on a property.
p4142
sa(dp4143
g6
I01
sg7
Vfdel
p4144
sg9
L5L
sa(dp4145
g6
I01
sg7
Vfget
p4146
sg9
L5L
sa(dp4147
g6
I01
sg7
Vfset
p4148
sg9
L5L
sa(dp4149
g6
I01
sg7
Vgetter
p4150
sg9
L2L
sg18
VDescriptor to change the getter on a property.
p4151
sa(dp4152
g6
I01
sg7
Vsetter
p4153
sg9
L2L
sg18
VDescriptor to change the setter on a property.
p4154
sasg6
I01
sg7
Vproperty
p4155
sg9
L3L
sg18
Vproperty(fget=None, fset=None, fdel=None, doc=None) -> property attribute\u000a\u000afget is a function to be used for getting an attribute value, and likewise\u000afset is a function for setting, and fdel a function for del'ing, an\u000aattribute.  Typical use is to define a managed attribute x:\u000a\u000aclass C(object):\u000a    def getx(self): return self._x\u000a    def setx(self, value): self._x = value\u000a    def delx(self): del self._x\u000a    x = property(getx, setx, delx, "I'm the 'x' property.")\u000a\u000aDecorators make defining new properties or modifying existing ones easy:\u000a\u000aclass C(object):\u000a    @property\u000a    def x(self):\u000a        "I am the 'x' property."\u000a        return self._x\u000a    @x.setter\u000a    def x(self, value):\u000a        self._x = value\u000a    @x.deleter\u000a    def x(self):\u000a        del self._x\u000a
p4156
sa(dp4157
g6
I01
sg7
Vquit
p4158
sg9
L5L
sa(dp4159
g1
(lp4160
(dp4161
g6
I01
sg7
g3017
sg9
L5L
sa(dp4162
g6
I01
sg7
g13
sg9
L5L
sa(dp4163
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4164
sa(dp4165
g6
I01
sg7
g21
sg9
L5L
sa(dp4166
g6
I01
sg7
g23
sg9
L5L
sa(dp4167
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4168
sa(dp4169
g6
I01
sg7
g28
sg9
L5L
sa(dp4170
g6
I01
sg7
g30
sg9
L5L
sa(dp4171
g6
I01
sg7
g3030
sg9
L5L
sa(dp4172
g6
I01
sg7
g32
sg9
L5L
sa(dp4173
g6
I01
sg7
g34
sg9
L5L
sa(dp4174
g6
I01
sg7
g36
sg9
L5L
sa(dp4175
g6
I01
sg7
g3039
sg9
L5L
sa(dp4176
g6
I01
sg7
g38
sg9
L5L
sa(dp4177
g6
I01
sg7
g3042
sg9
L5L
sa(dp4178
g6
I01
sg7
g40
sg9
L5L
sa(dp4179
g6
I01
sg7
g42
sg9
L5L
sa(dp4180
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4181
sa(dp4182
g6
I01
sg7
g47
sg9
L2L
sg18
Nsa(dp4183
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4184
sa(dp4185
g6
I01
sg7
g52
sg9
L5L
sa(dp4186
g6
I01
sg7
g3900
sg9
L2L
sg18
VReturn a reverse iterator.
p4187
sa(dp4188
g6
I01
sg7
g54
sg9
L5L
sa(dp4189
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4190
sa(dp4191
g6
I01
sg7
g61
sg9
L5L
sa(dp4192
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4193
sa(dp4194
g6
I01
sg7
g3080
sg9
L2L
sg18
Vrangeobject.count(value) -> integer -- return number of occurrences of value
p4195
sa(dp4196
g6
I01
sg7
g3104
sg9
L2L
sg18
Vrangeobject.index(value, [start, [stop]]) -> integer -- return index of value.\u000aRaise ValueError if the value is not present.
p4197
sa(dp4198
g6
I01
sg7
g2457
sg9
L5L
sa(dp4199
g6
I01
sg7
Vstep
p4200
sg9
L5L
sa(dp4201
g6
I01
sg7
Vstop
p4202
sg9
L5L
sasg6
I01
sg7
Vrange
p4203
sg9
L3L
sg18
Vrange(stop) -> range object\u000arange(start, stop[, step]) -> range object\u000a\u000aReturn an object that produces a sequence of integers from start (inclusive)\u000ato stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\u000astart defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\u000aThese are exactly the valid indices for a list of 4 elements.\u000aWhen step is given, it specifies the increment (or decrement).
p4204
sa(dp4205
g6
I01
sg7
Vrepr
p4206
sg9
L2L
sg18
VReturn the canonical string representation of the object.\u000a\u000aFor many object types, including most builtins, eval(repr(obj)) == obj.
p4207
sa(dp4208
g1
(lp4209
(dp4210
g6
I01
sg7
g13
sg9
L5L
sa(dp4211
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4212
sa(dp4213
g6
I01
sg7
g21
sg9
L5L
sa(dp4214
g6
I01
sg7
g23
sg9
L5L
sa(dp4215
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4216
sa(dp4217
g6
I01
sg7
g28
sg9
L5L
sa(dp4218
g6
I01
sg7
g30
sg9
L5L
sa(dp4219
g6
I01
sg7
g32
sg9
L5L
sa(dp4220
g6
I01
sg7
g34
sg9
L5L
sa(dp4221
g6
I01
sg7
g36
sg9
L5L
sa(dp4222
g6
I01
sg7
g3039
sg9
L5L
sa(dp4223
g6
I01
sg7
g38
sg9
L5L
sa(dp4224
g6
I01
sg7
V__length_hint__
p4225
sg9
L2L
sg18
VPrivate method returning an estimate of len(list(it)).
p4226
sa(dp4227
g6
I01
sg7
g40
sg9
L5L
sa(dp4228
g6
I01
sg7
g42
sg9
L5L
sa(dp4229
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4230
sa(dp4231
g6
I01
sg7
g3538
sg9
L5L
sa(dp4232
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p4233
sa(dp4234
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4235
sa(dp4236
g6
I01
sg7
g52
sg9
L5L
sa(dp4237
g6
I01
sg7
g54
sg9
L5L
sa(dp4238
g6
I01
sg7
g56
sg9
L2L
sg18
VSet state information for unpickling.
p4239
sa(dp4240
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4241
sa(dp4242
g6
I01
sg7
g61
sg9
L5L
sa(dp4243
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4244
sasg6
I01
sg7
Vreversed
p4245
sg9
L3L
sg18
Vreversed(sequence) -> reverse iterator over values of the sequence\u000a\u000aReturn a reverse iterator
p4246
sa(dp4247
g6
I01
sg7
Vround
p4248
sg9
L2L
sg18
Vround(number[, ndigits]) -> number\u000a\u000aRound a number to a given precision in decimal digits (default 0 digits).\u000aThis returns an int when called with one argument, otherwise the\u000asame type as the number. ndigits may be negative.
p4249
sa(dp4250
g1
(lp4251
(dp4252
g6
I01
sg7
g2884
sg9
L5L
sa(dp4253
g6
I01
sg7
g3017
sg9
L2L
sg18
Vx.__contains__(y) <==> y in x.
p4254
sa(dp4255
g6
I01
sg7
g13
sg9
L5L
sa(dp4256
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4257
sa(dp4258
g6
I01
sg7
g21
sg9
L5L
sa(dp4259
g6
I01
sg7
g23
sg9
L5L
sa(dp4260
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4261
sa(dp4262
g6
I01
sg7
g28
sg9
L5L
sa(dp4263
g6
I01
sg7
g30
sg9
L5L
sa(dp4264
g6
I01
sg7
g32
sg9
L5L
sa(dp4265
g6
I01
sg7
g34
sg9
L5L
sa(dp4266
g6
I01
sg7
V__iand__
p4267
sg9
L5L
sa(dp4268
g6
I01
sg7
g36
sg9
L5L
sa(dp4269
g6
I01
sg7
V__ior__
p4270
sg9
L5L
sa(dp4271
g6
I01
sg7
V__isub__
p4272
sg9
L5L
sa(dp4273
g6
I01
sg7
g3039
sg9
L5L
sa(dp4274
g6
I01
sg7
V__ixor__
p4275
sg9
L5L
sa(dp4276
g6
I01
sg7
g38
sg9
L5L
sa(dp4277
g6
I01
sg7
g3042
sg9
L5L
sa(dp4278
g6
I01
sg7
g40
sg9
L5L
sa(dp4279
g6
I01
sg7
g42
sg9
L5L
sa(dp4280
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4281
sa(dp4282
g6
I01
sg7
g2932
sg9
L5L
sa(dp4283
g6
I01
sg7
g2940
sg9
L5L
sa(dp4284
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p4285
sa(dp4286
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4287
sa(dp4288
g6
I01
sg7
g52
sg9
L5L
sa(dp4289
g6
I01
sg7
g2957
sg9
L5L
sa(dp4290
g6
I01
sg7
g2968
sg9
L5L
sa(dp4291
g6
I01
sg7
g2972
sg9
L5L
sa(dp4292
g6
I01
sg7
g54
sg9
L5L
sa(dp4293
g6
I01
sg7
g58
sg9
L2L
sg18
VS.__sizeof__() -> size of S in memory, in bytes
p4294
sa(dp4295
g6
I01
sg7
g61
sg9
L5L
sa(dp4296
g6
I01
sg7
g2978
sg9
L5L
sa(dp4297
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4298
sa(dp4299
g6
I01
sg7
g2987
sg9
L5L
sa(dp4300
g6
I01
sg7
Vadd
p4301
sg9
L2L
sg18
VAdd an element to a set.\u000a\u000aThis has no effect if the element is already present.
p4302
sa(dp4303
g6
I01
sg7
g3074
sg9
L2L
sg18
VRemove all elements from this set.
p4304
sa(dp4305
g6
I01
sg7
g3077
sg9
L2L
sg18
VReturn a shallow copy of a set.
p4306
sa(dp4307
g6
I01
sg7
g3721
sg9
L2L
sg18
VReturn the difference of two or more sets as a new set.\u000a\u000a(i.e. all elements that are in this set but not the others.)
p4308
sa(dp4309
g6
I01
sg7
Vdifference_update
p4310
sg9
L2L
sg18
VRemove all elements of another set from this set.
p4311
sa(dp4312
g6
I01
sg7
Vdiscard
p4313
sg9
L2L
sg18
VRemove an element from a set if it is a member.\u000a\u000aIf the element is not a member, do nothing.
p4314
sa(dp4315
g6
I01
sg7
g3724
sg9
L2L
sg18
VReturn the intersection of two sets as a new set.\u000a\u000a(i.e. all elements that are in both sets.)
p4316
sa(dp4317
g6
I01
sg7
Vintersection_update
p4318
sg9
L2L
sg18
VUpdate a set with the intersection of itself and another.
p4319
sa(dp4320
g6
I01
sg7
g3727
sg9
L2L
sg18
VReturn True if two sets have a null intersection.
p4321
sa(dp4322
g6
I01
sg7
g3730
sg9
L2L
sg18
VReport whether another set contains this set.
p4323
sa(dp4324
g6
I01
sg7
g3733
sg9
L2L
sg18
VReport whether this set contains another set.
p4325
sa(dp4326
g6
I01
sg7
g3149
sg9
L2L
sg18
VRemove and return an arbitrary set element.\u000aRaises KeyError if the set is empty.
p4327
sa(dp4328
g6
I01
sg7
g3152
sg9
L2L
sg18
VRemove an element from a set; it must be a member.\u000a\u000aIf the element is not a member, raise a KeyError.
p4329
sa(dp4330
g6
I01
sg7
g3736
sg9
L2L
sg18
VReturn the symmetric difference of two sets as a new set.\u000a\u000a(i.e. all elements that are in exactly one of the sets.)
p4331
sa(dp4332
g6
I01
sg7
Vsymmetric_difference_update
p4333
sg9
L2L
sg18
VUpdate a set with the symmetric difference of itself and another.
p4334
sa(dp4335
g6
I01
sg7
g3739
sg9
L2L
sg18
VReturn the union of sets as a new set.\u000a\u000a(i.e. all elements that are in either set.)
p4336
sa(dp4337
g6
I01
sg7
g3504
sg9
L2L
sg18
VUpdate a set with the union of itself and others.
p4338
sasg6
I01
sg7
Vset
p4339
sg9
L3L
sg18
Vset() -> new empty set object\u000aset(iterable) -> new set object\u000a\u000aBuild an unordered collection of unique elements.
p4340
sa(dp4341
g6
I01
sg7
Vsetattr
p4342
sg9
L2L
sg18
VSets the named attribute on the given object to the specified value.\u000a\u000asetattr(x, 'y', v) is equivalent to ``x.y = v''
p4343
sa(dp4344
g1
(lp4345
(dp4346
g6
I01
sg7
g13
sg9
L5L
sa(dp4347
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4348
sa(dp4349
g6
I01
sg7
g21
sg9
L5L
sa(dp4350
g6
I01
sg7
g23
sg9
L5L
sa(dp4351
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4352
sa(dp4353
g6
I01
sg7
g28
sg9
L5L
sa(dp4354
g6
I01
sg7
g30
sg9
L5L
sa(dp4355
g6
I01
sg7
g32
sg9
L5L
sa(dp4356
g6
I01
sg7
g34
sg9
L5L
sa(dp4357
g6
I01
sg7
g36
sg9
L5L
sa(dp4358
g6
I01
sg7
g38
sg9
L5L
sa(dp4359
g6
I01
sg7
g40
sg9
L5L
sa(dp4360
g6
I01
sg7
g42
sg9
L5L
sa(dp4361
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4362
sa(dp4363
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p4364
sa(dp4365
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4366
sa(dp4367
g6
I01
sg7
g52
sg9
L5L
sa(dp4368
g6
I01
sg7
g54
sg9
L5L
sa(dp4369
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4370
sa(dp4371
g6
I01
sg7
g61
sg9
L5L
sa(dp4372
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4373
sa(dp4374
g6
I01
sg7
Vindices
p4375
sg9
L2L
sg18
VS.indices(len) -> (start, stop, stride)\u000a\u000aAssuming a sequence of length len, calculate the start and stop\u000aindices, and the stride length of the extended slice described by\u000aS. Out of bounds indices are clipped in a manner consistent with the\u000ahandling of normal slices.
p4376
sa(dp4377
g6
I01
sg7
g2457
sg9
L5L
sa(dp4378
g6
I01
sg7
g4200
sg9
L5L
sa(dp4379
g6
I01
sg7
g4202
sg9
L5L
sasg6
I01
sg7
Vslice
p4380
sg9
L3L
sg18
Vslice(stop)\u000aslice(start, stop[, step])\u000a\u000aCreate a slice object.  This is used for extended slicing (e.g. a[0:10:2]).
p4381
sa(dp4382
g6
I01
sg7
Vsorted
p4383
sg9
L2L
sg18
VReturn a new list containing all items from the iterable in ascending order.\u000a\u000aA custom key function can be supplied to customise the sort order, and the\u000areverse flag can be set to request the result in descending order.
p4384
sa(dp4385
g1
(lp4386
(dp4387
g6
I01
sg7
g13
sg9
L5L
sa(dp4388
g6
I01
sg7
g15
sg9
L5L
sa(dp4389
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4390
sa(dp4391
g6
I01
sg7
g21
sg9
L5L
sa(dp4392
g6
I01
sg7
g23
sg9
L5L
sa(dp4393
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4394
sa(dp4395
g6
I01
sg7
g3344
sg9
L5L
sa(dp4396
g6
I01
sg7
g28
sg9
L5L
sa(dp4397
g6
I01
sg7
g3347
sg9
L5L
sa(dp4398
g6
I01
sg7
g30
sg9
L5L
sa(dp4399
g6
I01
sg7
g32
sg9
L5L
sa(dp4400
g6
I01
sg7
g34
sg9
L5L
sa(dp4401
g6
I01
sg7
g36
sg9
L5L
sa(dp4402
g6
I01
sg7
g3353
sg9
L5L
sa(dp4403
g6
I01
sg7
g38
sg9
L5L
sa(dp4404
g6
I01
sg7
g40
sg9
L5L
sa(dp4405
g6
I01
sg7
g42
sg9
L5L
sa(dp4406
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4407
sa(dp4408
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p4409
sa(dp4410
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4411
sa(dp4412
g6
I01
sg7
g52
sg9
L5L
sa(dp4413
g6
I01
sg7
g54
sg9
L5L
sa(dp4414
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4415
sa(dp4416
g6
I01
sg7
g61
sg9
L5L
sa(dp4417
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4418
sasg6
I01
sg7
Vstaticmethod
p4419
sg9
L3L
sg18
Vstaticmethod(function) -> method\u000a\u000aConvert a function to be a static method.\u000a\u000aA static method does not receive an implicit first argument.\u000aTo declare a static method, use this idiom:\u000a\u000a     class C:\u000a     def f(arg1, arg2, ...): ...\u000a     f = staticmethod(f)\u000a\u000aIt can be called either on the class (e.g. C.f()) or on an instance\u000a(e.g. C().f()).  The instance is ignored except for its class.\u000a\u000aStatic methods in Python are similar to those found in Java or C++.\u000aFor a more advanced concept, see the classmethod builtin.
p4420
sa(dp4421
g1
(lp4422
(dp4423
g6
I01
sg7
g2882
sg9
L5L
sa(dp4424
g6
I01
sg7
g3017
sg9
L5L
sa(dp4425
g6
I01
sg7
g13
sg9
L5L
sa(dp4426
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4427
sa(dp4428
g6
I01
sg7
g21
sg9
L5L
sa(dp4429
g6
I01
sg7
g23
sg9
L5L
sa(dp4430
g6
I01
sg7
g25
sg9
L2L
sg18
VS.__format__(format_spec) -> str\u000a\u000aReturn a formatted version of S as described by format_spec.
p4431
sa(dp4432
g6
I01
sg7
g28
sg9
L5L
sa(dp4433
g6
I01
sg7
g30
sg9
L5L
sa(dp4434
g6
I01
sg7
g3030
sg9
L5L
sa(dp4435
g6
I01
sg7
g2908
sg9
L2L
sg18
Nsa(dp4436
g6
I01
sg7
g32
sg9
L5L
sa(dp4437
g6
I01
sg7
g34
sg9
L5L
sa(dp4438
g6
I01
sg7
g36
sg9
L5L
sa(dp4439
g6
I01
sg7
g3039
sg9
L5L
sa(dp4440
g6
I01
sg7
g38
sg9
L5L
sa(dp4441
g6
I01
sg7
g3042
sg9
L5L
sa(dp4442
g6
I01
sg7
g40
sg9
L5L
sa(dp4443
g6
I01
sg7
g2923
sg9
L5L
sa(dp4444
g6
I01
sg7
g2925
sg9
L5L
sa(dp4445
g6
I01
sg7
g42
sg9
L5L
sa(dp4446
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4447
sa(dp4448
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p4449
sa(dp4450
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4451
sa(dp4452
g6
I01
sg7
g52
sg9
L5L
sa(dp4453
g6
I01
sg7
g2953
sg9
L5L
sa(dp4454
g6
I01
sg7
g2955
sg9
L5L
sa(dp4455
g6
I01
sg7
g54
sg9
L5L
sa(dp4456
g6
I01
sg7
g58
sg9
L2L
sg18
VS.__sizeof__() -> size of S in memory, in bytes
p4457
sa(dp4458
g6
I01
sg7
g61
sg9
L5L
sa(dp4459
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4460
sa(dp4461
g6
I01
sg7
g3068
sg9
L2L
sg18
VS.capitalize() -> str\u000a\u000aReturn a capitalized version of S, i.e. make the first character\u000ahave upper case and the rest lower case.
p4462
sa(dp4463
g6
I01
sg7
Vcasefold
p4464
sg9
L2L
sg18
VS.casefold() -> str\u000a\u000aReturn a version of S suitable for caseless comparisons.
p4465
sa(dp4466
g6
I01
sg7
g3071
sg9
L2L
sg18
VS.center(width[, fillchar]) -> str\u000a\u000aReturn S centered in a string of length width. Padding is\u000adone using the specified fill character (default is a space)
p4467
sa(dp4468
g6
I01
sg7
g3080
sg9
L2L
sg18
VS.count(sub[, start[, end]]) -> int\u000a\u000aReturn the number of non-overlapping occurrences of substring sub in\u000astring S[start:end].  Optional arguments start and end are\u000ainterpreted as in slice notation.
p4469
sa(dp4470
g6
I01
sg7
Vencode
p4471
sg9
L2L
sg18
VS.encode(encoding='utf-8', errors='strict') -> bytes\u000a\u000aEncode S using the codec registered for encoding. Default encoding\u000ais 'utf-8'. errors may be given to set a different error\u000ahandling scheme. Default is 'strict' meaning that encoding errors raise\u000aa UnicodeEncodeError. Other possible values are 'ignore', 'replace' and\u000a'xmlcharrefreplace' as well as any other name registered with\u000acodecs.register_error that can handle UnicodeEncodeErrors.
p4472
sa(dp4473
g6
I01
sg7
g3086
sg9
L2L
sg18
VS.endswith(suffix[, start[, end]]) -> bool\u000a\u000aReturn True if S ends with the specified suffix, False otherwise.\u000aWith optional start, test S beginning at that position.\u000aWith optional end, stop comparing S at that position.\u000asuffix can also be a tuple of strings to try.
p4474
sa(dp4475
g6
I01
sg7
g3089
sg9
L2L
sg18
VS.expandtabs(tabsize=8) -> str\u000a\u000aReturn a copy of S where all tab characters are expanded using spaces.\u000aIf tabsize is not given, a tab size of 8 characters is assumed.
p4476
sa(dp4477
g6
I01
sg7
g3095
sg9
L2L
sg18
VS.find(sub[, start[, end]]) -> int\u000a\u000aReturn the lowest index in S where substring sub is found,\u000asuch that sub is contained within S[start:end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p4478
sa(dp4479
g6
I01
sg7
g3674
sg9
L2L
sg18
VS.format(*args, **kwargs) -> str\u000a\u000aReturn a formatted version of S, using substitutions from args and kwargs.\u000aThe substitutions are identified by braces ('{' and '}').
p4480
sa(dp4481
g6
I01
sg7
Vformat_map
p4482
sg9
L2L
sg18
VS.format_map(mapping) -> str\u000a\u000aReturn a formatted version of S, using substitutions from mapping.\u000aThe substitutions are identified by braces ('{' and '}').
p4483
sa(dp4484
g6
I01
sg7
g3104
sg9
L2L
sg18
VS.index(sub[, start[, end]]) -> int\u000a\u000aLike S.find() but raise ValueError when the substring is not found.
p4485
sa(dp4486
g6
I01
sg7
g3110
sg9
L2L
sg18
VS.isalnum() -> bool\u000a\u000aReturn True if all characters in S are alphanumeric\u000aand there is at least one character in S, False otherwise.
p4487
sa(dp4488
g6
I01
sg7
g3113
sg9
L2L
sg18
VS.isalpha() -> bool\u000a\u000aReturn True if all characters in S are alphabetic\u000aand there is at least one character in S, False otherwise.
p4489
sa(dp4490
g6
I01
sg7
Visdecimal
p4491
sg9
L2L
sg18
VS.isdecimal() -> bool\u000a\u000aReturn True if there are only decimal characters in S,\u000aFalse otherwise.
p4492
sa(dp4493
g6
I01
sg7
g3116
sg9
L2L
sg18
VS.isdigit() -> bool\u000a\u000aReturn True if all characters in S are digits\u000aand there is at least one character in S, False otherwise.
p4494
sa(dp4495
g6
I01
sg7
Visidentifier
p4496
sg9
L2L
sg18
VS.isidentifier() -> bool\u000a\u000aReturn True if S is a valid identifier according\u000ato the language definition.\u000a\u000aUse keyword.iskeyword() to test for reserved identifiers\u000asuch as "def" and "class".\u000a
p4497
sa(dp4498
g6
I01
sg7
g3119
sg9
L2L
sg18
VS.islower() -> bool\u000a\u000aReturn True if all cased characters in S are lowercase and there is\u000aat least one cased character in S, False otherwise.
p4499
sa(dp4500
g6
I01
sg7
Visnumeric
p4501
sg9
L2L
sg18
VS.isnumeric() -> bool\u000a\u000aReturn True if there are only numeric characters in S,\u000aFalse otherwise.
p4502
sa(dp4503
g6
I01
sg7
Visprintable
p4504
sg9
L2L
sg18
VS.isprintable() -> bool\u000a\u000aReturn True if all characters in S are considered\u000aprintable in repr() or S is empty, False otherwise.
p4505
sa(dp4506
g6
I01
sg7
g3122
sg9
L2L
sg18
VS.isspace() -> bool\u000a\u000aReturn True if all characters in S are whitespace\u000aand there is at least one character in S, False otherwise.
p4507
sa(dp4508
g6
I01
sg7
g3125
sg9
L2L
sg18
VS.istitle() -> bool\u000a\u000aReturn True if S is a titlecased string and there is at least one\u000acharacter in S, i.e. upper- and titlecase characters may only\u000afollow uncased characters and lowercase characters only cased ones.\u000aReturn False otherwise.
p4509
sa(dp4510
g6
I01
sg7
g3128
sg9
L2L
sg18
VS.isupper() -> bool\u000a\u000aReturn True if all cased characters in S are uppercase and there is\u000aat least one cased character in S, False otherwise.
p4511
sa(dp4512
g6
I01
sg7
g3131
sg9
L2L
sg18
VS.join(iterable) -> str\u000a\u000aReturn a string which is the concatenation of the strings in the\u000aiterable.  The separator between elements is S.
p4513
sa(dp4514
g6
I01
sg7
g3134
sg9
L2L
sg18
VS.ljust(width[, fillchar]) -> str\u000a\u000aReturn S left-justified in a Unicode string of length width. Padding is\u000adone using the specified fill character (default is a space).
p4515
sa(dp4516
g6
I01
sg7
g3137
sg9
L2L
sg18
VS.lower() -> str\u000a\u000aReturn a copy of the string S converted to lowercase.
p4517
sa(dp4518
g6
I01
sg7
g3140
sg9
L2L
sg18
VS.lstrip([chars]) -> str\u000a\u000aReturn a copy of the string S with leading whitespace removed.\u000aIf chars is given and not None, remove characters in chars instead.
p4519
sa(dp4520
g6
I01
sg7
g3143
sg9
L2L
sg18
VReturn a translation table usable for str.translate().\u000a\u000aIf there is only one argument, it must be a dictionary mapping Unicode\u000aordinals (integers) or characters to Unicode ordinals, strings or None.\u000aCharacter keys will be then converted to ordinals.\u000aIf there are two arguments, they must be strings of equal length, and\u000ain the resulting dictionary, each character in x will be mapped to the\u000acharacter at the same position in y. If there is a third argument, it\u000amust be a string, whose characters will be mapped to None in the result.
p4521
sa(dp4522
g6
I01
sg7
g3146
sg9
L2L
sg18
VS.partition(sep) -> (head, sep, tail)\u000a\u000aSearch for the separator sep in S, and return the part before it,\u000athe separator itself, and the part after it.  If the separator is not\u000afound, return S and two empty strings.
p4523
sa(dp4524
g6
I01
sg7
g3155
sg9
L2L
sg18
VS.replace(old, new[, count]) -> str\u000a\u000aReturn a copy of S with all occurrences of substring\u000aold replaced by new.  If the optional argument count is\u000agiven, only the first count occurrences are replaced.
p4525
sa(dp4526
g6
I01
sg7
g3161
sg9
L2L
sg18
VS.rfind(sub[, start[, end]]) -> int\u000a\u000aReturn the highest index in S where substring sub is found,\u000asuch that sub is contained within S[start:end].  Optional\u000aarguments start and end are interpreted as in slice notation.\u000a\u000aReturn -1 on failure.
p4527
sa(dp4528
g6
I01
sg7
g3164
sg9
L2L
sg18
VS.rindex(sub[, start[, end]]) -> int\u000a\u000aLike S.rfind() but raise ValueError when the substring is not found.
p4529
sa(dp4530
g6
I01
sg7
g3167
sg9
L2L
sg18
VS.rjust(width[, fillchar]) -> str\u000a\u000aReturn S right-justified in a string of length width. Padding is\u000adone using the specified fill character (default is a space).
p4531
sa(dp4532
g6
I01
sg7
g3170
sg9
L2L
sg18
VS.rpartition(sep) -> (head, sep, tail)\u000a\u000aSearch for the separator sep in S, starting at the end of S, and return\u000athe part before it, the separator itself, and the part after it.  If the\u000aseparator is not found, return two empty strings and S.
p4533
sa(dp4534
g6
I01
sg7
g3173
sg9
L2L
sg18
VS.rsplit(sep=None, maxsplit=-1) -> list of strings\u000a\u000aReturn a list of the words in S, using sep as the\u000adelimiter string, starting at the end of the string and\u000aworking to the front.  If maxsplit is given, at most maxsplit\u000asplits are done. If sep is not specified, any whitespace string\u000ais a separator.
p4535
sa(dp4536
g6
I01
sg7
g3176
sg9
L2L
sg18
VS.rstrip([chars]) -> str\u000a\u000aReturn a copy of the string S with trailing whitespace removed.\u000aIf chars is given and not None, remove characters in chars instead.
p4537
sa(dp4538
g6
I01
sg7
g3179
sg9
L2L
sg18
VS.split(sep=None, maxsplit=-1) -> list of strings\u000a\u000aReturn a list of the words in S, using sep as the\u000adelimiter string.  If maxsplit is given, at most maxsplit\u000asplits are done. If sep is not specified or is None, any\u000awhitespace string is a separator and empty strings are\u000aremoved from the result.
p4539
sa(dp4540
g6
I01
sg7
g3182
sg9
L2L
sg18
VS.splitlines([keepends]) -> list of strings\u000a\u000aReturn a list of the lines in S, breaking at line boundaries.\u000aLine breaks are not included in the resulting list unless keepends\u000ais given and true.
p4541
sa(dp4542
g6
I01
sg7
g3185
sg9
L2L
sg18
VS.startswith(prefix[, start[, end]]) -> bool\u000a\u000aReturn True if S starts with the specified prefix, False otherwise.\u000aWith optional start, test S beginning at that position.\u000aWith optional end, stop comparing S at that position.\u000aprefix can also be a tuple of strings to try.
p4543
sa(dp4544
g6
I01
sg7
g3188
sg9
L2L
sg18
VS.strip([chars]) -> str\u000a\u000aReturn a copy of the string S with leading and trailing\u000awhitespace removed.\u000aIf chars is given and not None, remove characters in chars instead.
p4545
sa(dp4546
g6
I01
sg7
g3191
sg9
L2L
sg18
VS.swapcase() -> str\u000a\u000aReturn a copy of S with uppercase characters converted to lowercase\u000aand vice versa.
p4547
sa(dp4548
g6
I01
sg7
g3194
sg9
L2L
sg18
VS.title() -> str\u000a\u000aReturn a titlecased version of S, i.e. words start with title case\u000acharacters, all remaining cased characters have lower case.
p4549
sa(dp4550
g6
I01
sg7
g3197
sg9
L2L
sg18
VS.translate(table) -> str\u000a\u000aReturn a copy of the string S in which each character has been mapped\u000athrough the given translation table. The table must implement\u000alookup/indexing via __getitem__, for instance a dictionary or list,\u000amapping Unicode ordinals to Unicode ordinals, strings, or None. If\u000athis operation raises LookupError, the character is left untouched.\u000aCharacters mapped to None are deleted.
p4551
sa(dp4552
g6
I01
sg7
g3200
sg9
L2L
sg18
VS.upper() -> str\u000a\u000aReturn a copy of S converted to uppercase.
p4553
sa(dp4554
g6
I01
sg7
g3203
sg9
L2L
sg18
VS.zfill(width) -> str\u000a\u000aPad a numeric string S with zeros on the left, to fill a field\u000aof the specified width. The string S is never truncated.
p4555
sasg6
I01
sg7
Vstr
p4556
sg9
L3L
sg18
Vstr(object='') -> str\u000astr(bytes_or_buffer[, encoding[, errors]]) -> str\u000a\u000aCreate a new string object from the given object. If encoding or\u000aerrors is specified, then the object must expose a data buffer\u000athat will be decoded using the given encoding and error handler.\u000aOtherwise, returns the result of object.__str__() (if defined)\u000aor repr(object).\u000aencoding defaults to sys.getdefaultencoding().\u000aerrors defaults to 'strict'.
p4557
sa(dp4558
g6
I01
sg7
Vsum
p4559
sg9
L2L
sg18
VReturn the sum of a 'start' value (default: 0) plus an iterable of numbers\u000a\u000aWhen the iterable is empty, return the start value.\u000aThis function is intended specifically for use with numeric values and may\u000areject non-numeric types.
p4560
sa(dp4561
g1
(lp4562
(dp4563
g6
I01
sg7
g13
sg9
L5L
sa(dp4564
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4565
sa(dp4566
g6
I01
sg7
g21
sg9
L5L
sa(dp4567
g6
I01
sg7
g23
sg9
L5L
sa(dp4568
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4569
sa(dp4570
g6
I01
sg7
g28
sg9
L5L
sa(dp4571
g6
I01
sg7
g3347
sg9
L5L
sa(dp4572
g6
I01
sg7
g30
sg9
L5L
sa(dp4573
g6
I01
sg7
g32
sg9
L5L
sa(dp4574
g6
I01
sg7
g34
sg9
L5L
sa(dp4575
g6
I01
sg7
g36
sg9
L5L
sa(dp4576
g6
I01
sg7
g38
sg9
L5L
sa(dp4577
g6
I01
sg7
g40
sg9
L5L
sa(dp4578
g6
I01
sg7
g42
sg9
L5L
sa(dp4579
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4580
sa(dp4581
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p4582
sa(dp4583
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4584
sa(dp4585
g6
I01
sg7
g52
sg9
L5L
sa(dp4586
g6
I01
sg7
V__self__
p4587
sg9
L5L
sa(dp4588
g6
I01
sg7
V__self_class__
p4589
sg9
L5L
sa(dp4590
g6
I01
sg7
g54
sg9
L5L
sa(dp4591
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4592
sa(dp4593
g6
I01
sg7
g61
sg9
L5L
sa(dp4594
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4595
sa(dp4596
g6
I01
sg7
V__thisclass__
p4597
sg9
L5L
sasg6
I01
sg7
Vsuper
p4598
sg9
L3L
sg18
Vsuper() -> same as super(__class__, <first argument>)\u000asuper(type) -> unbound super object\u000asuper(type, obj) -> bound super object; requires isinstance(obj, type)\u000asuper(type, type2) -> bound super object; requires issubclass(type2, type)\u000aTypical use to call a cooperative superclass method:\u000aclass C(B):\u000a    def meth(self, arg):\u000a        super().meth(arg)\u000aThis works for class methods too:\u000aclass C(B):\u000a    @classmethod\u000a    def cmeth(cls, arg):\u000a        super().cmeth(arg)\u000a
p4599
sa(dp4600
g1
(lp4601
(dp4602
g6
I01
sg7
g2882
sg9
L5L
sa(dp4603
g6
I01
sg7
g3017
sg9
L5L
sa(dp4604
g6
I01
sg7
g13
sg9
L5L
sa(dp4605
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4606
sa(dp4607
g6
I01
sg7
g21
sg9
L5L
sa(dp4608
g6
I01
sg7
g23
sg9
L5L
sa(dp4609
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4610
sa(dp4611
g6
I01
sg7
g28
sg9
L5L
sa(dp4612
g6
I01
sg7
g30
sg9
L5L
sa(dp4613
g6
I01
sg7
g3030
sg9
L5L
sa(dp4614
g6
I01
sg7
g2908
sg9
L2L
sg18
Nsa(dp4615
g6
I01
sg7
g32
sg9
L5L
sa(dp4616
g6
I01
sg7
g34
sg9
L5L
sa(dp4617
g6
I01
sg7
g36
sg9
L5L
sa(dp4618
g6
I01
sg7
g3039
sg9
L5L
sa(dp4619
g6
I01
sg7
g38
sg9
L5L
sa(dp4620
g6
I01
sg7
g3042
sg9
L5L
sa(dp4621
g6
I01
sg7
g40
sg9
L5L
sa(dp4622
g6
I01
sg7
g2925
sg9
L5L
sa(dp4623
g6
I01
sg7
g42
sg9
L5L
sa(dp4624
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4625
sa(dp4626
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p4627
sa(dp4628
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4629
sa(dp4630
g6
I01
sg7
g52
sg9
L5L
sa(dp4631
g6
I01
sg7
g2955
sg9
L5L
sa(dp4632
g6
I01
sg7
g54
sg9
L5L
sa(dp4633
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4634
sa(dp4635
g6
I01
sg7
g61
sg9
L5L
sa(dp4636
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4637
sa(dp4638
g6
I01
sg7
g3080
sg9
L2L
sg18
VT.count(value) -> integer -- return number of occurrences of value
p4639
sa(dp4640
g6
I01
sg7
g3104
sg9
L2L
sg18
VT.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p4641
sasg6
I01
sg7
Vtuple
p4642
sg9
L3L
sg18
Vtuple() -> empty tuple\u000atuple(iterable) -> tuple initialized from iterable's items\u000a\u000aIf the argument is a tuple, the return value is the same object.
p4643
sa(dp4644
g1
(lp4645
(dp4646
g6
I01
sg7
V__bases__
p4647
sg9
L5L
sa(dp4648
g6
I01
sg7
V__basicsize__
p4649
sg9
L5L
sa(dp4650
g6
I01
sg7
V__call__
p4651
sg9
L5L
sa(dp4652
g6
I01
sg7
g13
sg9
L5L
sa(dp4653
g6
I01
sg7
g15
sg9
L5L
sa(dp4654
g6
I01
sg7
V__dictoffset__
p4655
sg9
L5L
sa(dp4656
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000aspecialized __dir__ implementation for types
p4657
sa(dp4658
g6
I01
sg7
g21
sg9
L5L
sa(dp4659
g6
I01
sg7
g23
sg9
L5L
sa(dp4660
g6
I01
sg7
V__flags__
p4661
sg9
L5L
sa(dp4662
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4663
sa(dp4664
g6
I01
sg7
g28
sg9
L5L
sa(dp4665
g6
I01
sg7
g30
sg9
L5L
sa(dp4666
g6
I01
sg7
g32
sg9
L5L
sa(dp4667
g6
I01
sg7
g34
sg9
L5L
sa(dp4668
g6
I01
sg7
g36
sg9
L5L
sa(dp4669
g6
I01
sg7
V__instancecheck__
p4670
sg9
L2L
sg18
V__instancecheck__() -> bool\u000acheck if an object is an instance
p4671
sa(dp4672
g6
I01
sg7
V__itemsize__
p4673
sg9
L5L
sa(dp4674
g6
I01
sg7
g38
sg9
L5L
sa(dp4675
g6
I01
sg7
g40
sg9
L5L
sa(dp4676
g6
I01
sg7
g2819
sg9
L5L
sa(dp4677
g6
I01
sg7
V__mro__
p4678
sg9
L5L
sa(dp4679
g6
I01
sg7
g2857
sg9
L5L
sa(dp4680
g6
I01
sg7
g42
sg9
L5L
sa(dp4681
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4682
sa(dp4683
g6
I01
sg7
V__prepare__
p4684
sg9
L2L
sg18
V__prepare__() -> dict\u000aused to create the namespace for the class statement
p4685
sa(dp4686
g6
I01
sg7
V__qualname__
p4687
sg9
L5L
sa(dp4688
g6
I01
sg7
g47
sg9
L2L
sg18
Vhelper for pickle
p4689
sa(dp4690
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4691
sa(dp4692
g6
I01
sg7
g52
sg9
L5L
sa(dp4693
g6
I01
sg7
g54
sg9
L5L
sa(dp4694
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000areturn memory consumption of the type object
p4695
sa(dp4696
g6
I01
sg7
g61
sg9
L5L
sa(dp4697
g6
I01
sg7
V__subclasscheck__
p4698
sg9
L2L
sg18
V__subclasscheck__() -> bool\u000acheck if a class is a subclass
p4699
sa(dp4700
g6
I01
sg7
V__subclasses__
p4701
sg9
L2L
sg18
V__subclasses__() -> list of immediate subclasses
p4702
sa(dp4703
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4704
sa(dp4705
g6
I01
sg7
V__text_signature__
p4706
sg9
L5L
sa(dp4707
g6
I01
sg7
V__weakrefoffset__
p4708
sg9
L5L
sa(dp4709
g6
I01
sg7
Vmro
p4710
sg9
L2L
sg18
Vmro() -> list\u000areturn a type's method resolution order
p4711
sasg6
I01
sg7
g9
sg9
L3L
sg18
Vtype(object_or_name, bases, dict)\u000atype(object) -> the object's type\u000atype(name, bases, dict) -> a new type
p4712
sa(dp4713
g6
I01
sg7
Vvars
p4714
sg9
L2L
sg18
Vvars([object]) -> dictionary\u000a\u000aWithout arguments, equivalent to locals().\u000aWith an argument, equivalent to object.__dict__.
p4715
sa(dp4716
g1
(lp4717
(dp4718
g6
I01
sg7
g13
sg9
L5L
sa(dp4719
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p4720
sa(dp4721
g6
I01
sg7
g21
sg9
L5L
sa(dp4722
g6
I01
sg7
g23
sg9
L5L
sa(dp4723
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p4724
sa(dp4725
g6
I01
sg7
g28
sg9
L5L
sa(dp4726
g6
I01
sg7
g30
sg9
L5L
sa(dp4727
g6
I01
sg7
g32
sg9
L5L
sa(dp4728
g6
I01
sg7
g34
sg9
L5L
sa(dp4729
g6
I01
sg7
g36
sg9
L5L
sa(dp4730
g6
I01
sg7
g3039
sg9
L5L
sa(dp4731
g6
I01
sg7
g38
sg9
L5L
sa(dp4732
g6
I01
sg7
g40
sg9
L5L
sa(dp4733
g6
I01
sg7
g42
sg9
L5L
sa(dp4734
g6
I01
sg7
g44
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p4735
sa(dp4736
g6
I01
sg7
g3538
sg9
L5L
sa(dp4737
g6
I01
sg7
g47
sg9
L2L
sg18
VReturn state information for pickling.
p4738
sa(dp4739
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p4740
sa(dp4741
g6
I01
sg7
g52
sg9
L5L
sa(dp4742
g6
I01
sg7
g54
sg9
L5L
sa(dp4743
g6
I01
sg7
g58
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p4744
sa(dp4745
g6
I01
sg7
g61
sg9
L5L
sa(dp4746
g6
I01
sg7
g63
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p4747
sasg6
I01
sg7
Vzip
p4748
sg9
L3L
sg18
Vzip(iter1 [,iter2 [...]]) --> zip object\u000a\u000aReturn a zip object whose .__next__() method returns a tuple where\u000athe i-th element comes from the i-th iterable argument.  The .__next__()\u000amethod continues until the shortest iterable in the argument sequence\u000ais exhausted and then it raises StopIteration.
p4749
sasg6
I01
sg7
Vbuiltins
p4750
sg18
VBuilt-in functions, exceptions, and other objects.\u000a\u000aNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.
p4751
s.