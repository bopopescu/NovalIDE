(dp0
Vchilds
p1
(lp2
(dp3
g1
(lp4
(dp5
Vis_builtin
p6
I01
sVname
p7
V__contains__
p8
sVtype
p9
L2L
sVdoc
p10
VTrue if D has a key k, else False.
p11
sa(dp12
g6
I01
sg7
V__delattr__
p13
sg9
L5L
sa(dp14
g6
I01
sg7
V__delitem__
p15
sg9
L5L
sa(dp16
g6
I01
sg7
V__dict__
p17
sg9
L5L
sa(dp18
g6
I01
sg7
V__dir__
p19
sg9
L2L
sg10
V__dir__() -> list\u000adefault dir() implementation
p20
sa(dp21
g6
I01
sg7
V__doc__
p22
sg9
L5L
sa(dp23
g6
I01
sg7
V__eq__
p24
sg9
L5L
sa(dp25
g6
I01
sg7
V__format__
p26
sg9
L2L
sg10
Vdefault object formatter
p27
sa(dp28
g6
I01
sg7
V__ge__
p29
sg9
L5L
sa(dp30
g6
I01
sg7
V__getattribute__
p31
sg9
L5L
sa(dp32
g6
I01
sg7
V__getitem__
p33
sg9
L2L
sg10
Vx.__getitem__(y) <==> x[y]
p34
sa(dp35
g6
I01
sg7
V__gt__
p36
sg9
L5L
sa(dp37
g6
I01
sg7
V__hash__
p38
sg9
L5L
sa(dp39
g6
I01
sg7
V__init__
p40
sg9
L5L
sa(dp41
g6
I01
sg7
V__iter__
p42
sg9
L5L
sa(dp43
g6
I01
sg7
V__le__
p44
sg9
L5L
sa(dp45
g6
I01
sg7
V__len__
p46
sg9
L5L
sa(dp47
g6
I01
sg7
V__lt__
p48
sg9
L5L
sa(dp49
g6
I01
sg7
V__ne__
p50
sg9
L5L
sa(dp51
g6
I01
sg7
V__new__
p52
sg9
L2L
sg10
VCreate and return a new object.  See help(type) for accurate signature.
p53
sa(dp54
g6
I01
sg7
V__reduce__
p55
sg9
L2L
sg10
VReturn state information for pickling
p56
sa(dp57
g6
I01
sg7
V__reduce_ex__
p58
sg9
L2L
sg10
Vhelper for pickle
p59
sa(dp60
g6
I01
sg7
V__repr__
p61
sg9
L5L
sa(dp62
g6
I01
sg7
V__reversed__
p63
sg9
L2L
sg10
Vod.__reversed__() <==> reversed(od)
p64
sa(dp65
g6
I01
sg7
V__setattr__
p66
sg9
L5L
sa(dp67
g6
I01
sg7
V__setitem__
p68
sg9
L5L
sa(dp69
g6
I01
sg7
V__sizeof__
p70
sg9
L2L
sg10
Nsa(dp71
g6
I01
sg7
V__str__
p72
sg9
L5L
sa(dp73
g6
I01
sg7
V__subclasshook__
p74
sg9
L2L
sg10
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p75
sa(dp76
g6
I01
sg7
Vclear
p77
sg9
L2L
sg10
Vod.clear() -> None.  Remove all items from od.
p78
sa(dp79
g6
I01
sg7
Vcopy
p80
sg9
L2L
sg10
Vod.copy() -> a shallow copy of od
p81
sa(dp82
g6
I01
sg7
Vfromkeys
p83
sg9
L2L
sg10
VOD.fromkeys(S[, v]) -> New ordered dictionary with keys from S.\u000a        If not specified, the value defaults to None.\u000a\u000a        
p84
sa(dp85
g6
I01
sg7
Vget
p86
sg9
L2L
sg10
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p87
sa(dp88
g6
I01
sg7
Vitems
p89
sg9
L2L
sg10
Nsa(dp90
g6
I01
sg7
Vkeys
p91
sg9
L2L
sg10
Nsa(dp92
g6
I01
sg7
Vmove_to_end
p93
sg9
L2L
sg10
VMove an existing element to the end (or beginning if last==False).\u000a\u000a        Raises KeyError if the element does not exist.\u000a        When last=True, acts like a fast version of self[key]=self.pop(key).\u000a\u000a        
p94
sa(dp95
g6
I01
sg7
Vpop
p96
sg9
L2L
sg10
Vod.pop(k[,d]) -> v, remove specified key and return the corresponding\u000a        value.  If key is not found, d is returned if given, otherwise KeyError\u000a        is raised.\u000a\u000a        
p97
sa(dp98
g6
I01
sg7
Vpopitem
p99
sg9
L2L
sg10
Vod.popitem() -> (k, v), return and remove a (key, value) pair.\u000a        Pairs are returned in LIFO order if last is true or FIFO order if false.\u000a\u000a        
p100
sa(dp101
g6
I01
sg7
Vsetdefault
p102
sg9
L2L
sg10
Vod.setdefault(k[,d]) -> od.get(k,d), also set od[k]=d if k not in od
p103
sa(dp104
g6
I01
sg7
Vupdate
p105
sg9
L2L
sg10
Nsa(dp106
g6
I01
sg7
Vvalues
p107
sg9
L2L
sg10
Nsasg6
I01
sg7
VOrderedDict
p108
sg9
L3L
sg10
VDictionary that remembers insertion order
p109
sa(dp110
g6
I01
sg7
g22
sg9
L5L
sa(dp111
g1
(lp112
(dp113
g6
I01
sg7
g13
sg9
L5L
sa(dp114
g6
I01
sg7
g17
sg9
L5L
sa(dp115
g6
I01
sg7
g19
sg9
L2L
sg10
V__dir__() -> list\u000adefault dir() implementation
p116
sa(dp117
g6
I01
sg7
g22
sg9
L5L
sa(dp118
g6
I01
sg7
g24
sg9
L5L
sa(dp119
g6
I01
sg7
g26
sg9
L2L
sg10
Vdefault object formatter
p120
sa(dp121
g6
I01
sg7
g29
sg9
L5L
sa(dp122
g6
I01
sg7
g31
sg9
L5L
sa(dp123
g6
I01
sg7
g36
sg9
L5L
sa(dp124
g6
I01
sg7
g38
sg9
L5L
sa(dp125
g6
I01
sg7
g40
sg9
L5L
sa(dp126
g6
I01
sg7
g44
sg9
L5L
sa(dp127
g6
I01
sg7
g48
sg9
L5L
sa(dp128
g6
I01
sg7
V__module__
p129
sg9
L5L
sa(dp130
g6
I01
sg7
g50
sg9
L5L
sa(dp131
g6
I01
sg7
g52
sg9
L2L
sg10
VCreate and return a new object.  See help(type) for accurate signature.
p132
sa(dp133
g6
I01
sg7
g55
sg9
L2L
sg10
Vhelper for pickle
p134
sa(dp135
g6
I01
sg7
g58
sg9
L2L
sg10
Vhelper for pickle
p136
sa(dp137
g6
I01
sg7
g61
sg9
L5L
sa(dp138
g6
I01
sg7
g66
sg9
L5L
sa(dp139
g6
I01
sg7
g70
sg9
L2L
sg10
V__sizeof__() -> int\u000asize of object in memory, in bytes
p140
sa(dp141
g6
I01
sg7
g72
sg9
L5L
sa(dp142
g6
I01
sg7
g74
sg9
L2L
sg10
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p143
sa(dp144
g6
I01
sg7
V__weakref__
p145
sg9
L5L
sa(dp146
g6
I01
sg7
Vcreate_module
p147
sg9
L5L
sa(dp148
g6
I01
sg7
Vexec_module
p149
sg9
L5L
sa(dp150
g6
I01
sg7
Vfind_module
p151
sg9
L5L
sa(dp152
g6
I01
sg7
Vfind_spec
p153
sg9
L5L
sa(dp154
g6
I01
sg7
Vget_code
p155
sg9
L5L
sa(dp156
g6
I01
sg7
Vget_source
p157
sg9
L5L
sa(dp158
g6
I01
sg7
Vis_package
p159
sg9
L5L
sa(dp160
g6
I01
sg7
Vload_module
p161
sg9
L5L
sa(dp162
g6
I01
sg7
Vmodule_repr
p163
sg9
L5L
sasg6
I01
sg7
V__loader__
p164
sg9
L3L
sg10
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p165
sa(dp166
g6
I01
sg7
V__name__
p167
sg9
L5L
sa(dp168
g6
I01
sg7
V__package__
p169
sg9
L5L
sa(dp170
g6
I01
sg7
V__spec__
p171
sg9
L5L
sa(dp172
g6
I01
sg7
V_count_elements
p173
sg9
L2L
sg10
V_count_elements(mapping, iterable) -> None\u000a\u000aCount elements in the iterable, updating the mappping
p174
sa(dp175
g1
(lp176
(dp177
g6
I01
sg7
g13
sg9
L5L
sa(dp178
g6
I01
sg7
g19
sg9
L2L
sg10
V__dir__() -> list\u000adefault dir() implementation
p179
sa(dp180
g6
I01
sg7
g22
sg9
L5L
sa(dp181
g6
I01
sg7
g24
sg9
L5L
sa(dp182
g6
I01
sg7
g26
sg9
L2L
sg10
Vdefault object formatter
p183
sa(dp184
g6
I01
sg7
g29
sg9
L5L
sa(dp185
g6
I01
sg7
g31
sg9
L5L
sa(dp186
g6
I01
sg7
g36
sg9
L5L
sa(dp187
g6
I01
sg7
g38
sg9
L5L
sa(dp188
g6
I01
sg7
g40
sg9
L5L
sa(dp189
g6
I01
sg7
g42
sg9
L5L
sa(dp190
g6
I01
sg7
g44
sg9
L5L
sa(dp191
g6
I01
sg7
V__length_hint__
p192
sg9
L2L
sg10
VPrivate method returning an estimate of len(list(it)).
p193
sa(dp194
g6
I01
sg7
g48
sg9
L5L
sa(dp195
g6
I01
sg7
g50
sg9
L5L
sa(dp196
g6
I01
sg7
g52
sg9
L2L
sg10
VCreate and return a new object.  See help(type) for accurate signature.
p197
sa(dp198
g6
I01
sg7
V__next__
p199
sg9
L5L
sa(dp200
g6
I01
sg7
g55
sg9
L2L
sg10
VReturn state information for pickling.
p201
sa(dp202
g6
I01
sg7
g58
sg9
L2L
sg10
Vhelper for pickle
p203
sa(dp204
g6
I01
sg7
g61
sg9
L5L
sa(dp205
g6
I01
sg7
g66
sg9
L5L
sa(dp206
g6
I01
sg7
g70
sg9
L2L
sg10
V__sizeof__() -> int\u000asize of object in memory, in bytes
p207
sa(dp208
g6
I01
sg7
g72
sg9
L5L
sa(dp209
g6
I01
sg7
g74
sg9
L2L
sg10
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p210
sasg6
I01
sg7
V_deque_iterator
p211
sg9
L3L
sg10
Nsa(dp212
g1
(lp213
(dp214
g6
I01
sg7
g13
sg9
L5L
sa(dp215
g6
I01
sg7
g19
sg9
L2L
sg10
V__dir__() -> list\u000adefault dir() implementation
p216
sa(dp217
g6
I01
sg7
g22
sg9
L5L
sa(dp218
g6
I01
sg7
g24
sg9
L5L
sa(dp219
g6
I01
sg7
g26
sg9
L2L
sg10
Vdefault object formatter
p220
sa(dp221
g6
I01
sg7
g29
sg9
L5L
sa(dp222
g6
I01
sg7
g31
sg9
L5L
sa(dp223
g6
I01
sg7
g36
sg9
L5L
sa(dp224
g6
I01
sg7
g38
sg9
L5L
sa(dp225
g6
I01
sg7
g40
sg9
L5L
sa(dp226
g6
I01
sg7
g42
sg9
L5L
sa(dp227
g6
I01
sg7
g44
sg9
L5L
sa(dp228
g6
I01
sg7
g192
sg9
L2L
sg10
VPrivate method returning an estimate of len(list(it)).
p229
sa(dp230
g6
I01
sg7
g48
sg9
L5L
sa(dp231
g6
I01
sg7
g50
sg9
L5L
sa(dp232
g6
I01
sg7
g52
sg9
L2L
sg10
VCreate and return a new object.  See help(type) for accurate signature.
p233
sa(dp234
g6
I01
sg7
g199
sg9
L5L
sa(dp235
g6
I01
sg7
g55
sg9
L2L
sg10
VReturn state information for pickling.
p236
sa(dp237
g6
I01
sg7
g58
sg9
L2L
sg10
Vhelper for pickle
p238
sa(dp239
g6
I01
sg7
g61
sg9
L5L
sa(dp240
g6
I01
sg7
g66
sg9
L5L
sa(dp241
g6
I01
sg7
g70
sg9
L2L
sg10
V__sizeof__() -> int\u000asize of object in memory, in bytes
p242
sa(dp243
g6
I01
sg7
g72
sg9
L5L
sa(dp244
g6
I01
sg7
g74
sg9
L2L
sg10
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p245
sasg6
I01
sg7
V_deque_reverse_iterator
p246
sg9
L3L
sg10
Nsa(dp247
g1
(lp248
(dp249
g6
I01
sg7
g8
sg9
L2L
sg10
VTrue if D has a key k, else False.
p250
sa(dp251
g6
I01
sg7
V__copy__
p252
sg9
L2L
sg10
VD.copy() -> a shallow copy of D.
p253
sa(dp254
g6
I01
sg7
g13
sg9
L5L
sa(dp255
g6
I01
sg7
g15
sg9
L5L
sa(dp256
g6
I01
sg7
g19
sg9
L2L
sg10
V__dir__() -> list\u000adefault dir() implementation
p257
sa(dp258
g6
I01
sg7
g22
sg9
L5L
sa(dp259
g6
I01
sg7
g24
sg9
L5L
sa(dp260
g6
I01
sg7
g26
sg9
L2L
sg10
Vdefault object formatter
p261
sa(dp262
g6
I01
sg7
g29
sg9
L5L
sa(dp263
g6
I01
sg7
g31
sg9
L5L
sa(dp264
g6
I01
sg7
g33
sg9
L2L
sg10
Vx.__getitem__(y) <==> x[y]
p265
sa(dp266
g6
I01
sg7
g36
sg9
L5L
sa(dp267
g6
I01
sg7
g38
sg9
L5L
sa(dp268
g6
I01
sg7
g40
sg9
L5L
sa(dp269
g6
I01
sg7
g42
sg9
L5L
sa(dp270
g6
I01
sg7
g44
sg9
L5L
sa(dp271
g6
I01
sg7
g46
sg9
L5L
sa(dp272
g6
I01
sg7
g48
sg9
L5L
sa(dp273
g6
I01
sg7
V__missing__
p274
sg9
L2L
sg10
V__missing__(key) # Called by __getitem__ for missing key; pseudo-code:\u000a  if self.default_factory is None: raise KeyError((key,))\u000a  self[key] = value = self.default_factory()\u000a  return value\u000a
p275
sa(dp276
g6
I01
sg7
g50
sg9
L5L
sa(dp277
g6
I01
sg7
g52
sg9
L2L
sg10
VCreate and return a new object.  See help(type) for accurate signature.
p278
sa(dp279
g6
I01
sg7
g55
sg9
L2L
sg10
VReturn state information for pickling.
p280
sa(dp281
g6
I01
sg7
g58
sg9
L2L
sg10
Vhelper for pickle
p282
sa(dp283
g6
I01
sg7
g61
sg9
L5L
sa(dp284
g6
I01
sg7
g66
sg9
L5L
sa(dp285
g6
I01
sg7
g68
sg9
L5L
sa(dp286
g6
I01
sg7
g70
sg9
L2L
sg10
VD.__sizeof__() -> size of D in memory, in bytes
p287
sa(dp288
g6
I01
sg7
g72
sg9
L5L
sa(dp289
g6
I01
sg7
g74
sg9
L2L
sg10
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p290
sa(dp291
g6
I01
sg7
g77
sg9
L2L
sg10
VD.clear() -> None.  Remove all items from D.
p292
sa(dp293
g6
I01
sg7
g80
sg9
L2L
sg10
VD.copy() -> a shallow copy of D.
p294
sa(dp295
g6
I01
sg7
Vdefault_factory
p296
sg9
L5L
sa(dp297
g6
I01
sg7
g83
sg9
L2L
sg10
VReturns a new dict with keys from iterable and values equal to value.
p298
sa(dp299
g6
I01
sg7
g86
sg9
L2L
sg10
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p300
sa(dp301
g6
I01
sg7
g89
sg9
L2L
sg10
VD.items() -> a set-like object providing a view on D's items
p302
sa(dp303
g6
I01
sg7
g91
sg9
L2L
sg10
VD.keys() -> a set-like object providing a view on D's keys
p304
sa(dp305
g6
I01
sg7
g96
sg9
L2L
sg10
VD.pop(k[,d]) -> v, remove specified key and return the corresponding value.\u000aIf key is not found, d is returned if given, otherwise KeyError is raised
p306
sa(dp307
g6
I01
sg7
g99
sg9
L2L
sg10
VD.popitem() -> (k, v), remove and return some (key, value) pair as a\u000a2-tuple; but raise KeyError if D is empty.
p308
sa(dp309
g6
I01
sg7
g102
sg9
L2L
sg10
VD.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
p310
sa(dp311
g6
I01
sg7
g105
sg9
L2L
sg10
VD.update([E, ]**F) -> None.  Update D from dict/iterable E and F.\u000aIf E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\u000aIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\u000aIn either case, this is followed by: for k in F:  D[k] = F[k]
p312
sa(dp313
g6
I01
sg7
g107
sg9
L2L
sg10
VD.values() -> an object providing a view on D's values
p314
sasg6
I01
sg7
Vdefaultdict
p315
sg9
L3L
sg10
Vdefaultdict(default_factory[, ...]) --> dict with default factory\u000a\u000aThe default factory is called without arguments to produce\u000aa new value when a key is not present, in __getitem__ only.\u000aA defaultdict compares equal to a dict with the same items.\u000aAll remaining arguments are treated the same as if they were\u000apassed to the dict constructor, including keyword arguments.\u000a
p316
sa(dp317
g1
(lp318
(dp319
g6
I01
sg7
V__add__
p320
sg9
L5L
sa(dp321
g6
I01
sg7
V__bool__
p322
sg9
L5L
sa(dp323
g6
I01
sg7
g8
sg9
L5L
sa(dp324
g6
I01
sg7
g252
sg9
L2L
sg10
VReturn a shallow copy of a deque.
p325
sa(dp326
g6
I01
sg7
g13
sg9
L5L
sa(dp327
g6
I01
sg7
g15
sg9
L5L
sa(dp328
g6
I01
sg7
g19
sg9
L2L
sg10
V__dir__() -> list\u000adefault dir() implementation
p329
sa(dp330
g6
I01
sg7
g22
sg9
L5L
sa(dp331
g6
I01
sg7
g24
sg9
L5L
sa(dp332
g6
I01
sg7
g26
sg9
L2L
sg10
Vdefault object formatter
p333
sa(dp334
g6
I01
sg7
g29
sg9
L5L
sa(dp335
g6
I01
sg7
g31
sg9
L5L
sa(dp336
g6
I01
sg7
g33
sg9
L5L
sa(dp337
g6
I01
sg7
g36
sg9
L5L
sa(dp338
g6
I01
sg7
g38
sg9
L5L
sa(dp339
g6
I01
sg7
V__iadd__
p340
sg9
L5L
sa(dp341
g6
I01
sg7
V__imul__
p342
sg9
L5L
sa(dp343
g6
I01
sg7
g40
sg9
L5L
sa(dp344
g6
I01
sg7
g42
sg9
L5L
sa(dp345
g6
I01
sg7
g44
sg9
L5L
sa(dp346
g6
I01
sg7
g46
sg9
L5L
sa(dp347
g6
I01
sg7
g48
sg9
L5L
sa(dp348
g6
I01
sg7
V__mul__
p349
sg9
L5L
sa(dp350
g6
I01
sg7
g50
sg9
L5L
sa(dp351
g6
I01
sg7
g52
sg9
L2L
sg10
VCreate and return a new object.  See help(type) for accurate signature.
p352
sa(dp353
g6
I01
sg7
g55
sg9
L2L
sg10
VReturn state information for pickling.
p354
sa(dp355
g6
I01
sg7
g58
sg9
L2L
sg10
Vhelper for pickle
p356
sa(dp357
g6
I01
sg7
g61
sg9
L5L
sa(dp358
g6
I01
sg7
g63
sg9
L2L
sg10
VD.__reversed__() -- return a reverse iterator over the deque
p359
sa(dp360
g6
I01
sg7
V__rmul__
p361
sg9
L5L
sa(dp362
g6
I01
sg7
g66
sg9
L5L
sa(dp363
g6
I01
sg7
g68
sg9
L5L
sa(dp364
g6
I01
sg7
g70
sg9
L2L
sg10
VD.__sizeof__() -- size of D in memory, in bytes
p365
sa(dp366
g6
I01
sg7
g72
sg9
L5L
sa(dp367
g6
I01
sg7
g74
sg9
L2L
sg10
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p368
sa(dp369
g6
I01
sg7
Vappend
p370
sg9
L2L
sg10
VAdd an element to the right side of the deque.
p371
sa(dp372
g6
I01
sg7
Vappendleft
p373
sg9
L2L
sg10
VAdd an element to the left side of the deque.
p374
sa(dp375
g6
I01
sg7
g77
sg9
L2L
sg10
VRemove all elements from the deque.
p376
sa(dp377
g6
I01
sg7
g80
sg9
L2L
sg10
VReturn a shallow copy of a deque.
p378
sa(dp379
g6
I01
sg7
Vcount
p380
sg9
L2L
sg10
VD.count(value) -> integer -- return number of occurrences of value
p381
sa(dp382
g6
I01
sg7
Vextend
p383
sg9
L2L
sg10
VExtend the right side of the deque with elements from the iterable
p384
sa(dp385
g6
I01
sg7
Vextendleft
p386
sg9
L2L
sg10
VExtend the left side of the deque with elements from the iterable
p387
sa(dp388
g6
I01
sg7
Vindex
p389
sg9
L2L
sg10
VD.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p390
sa(dp391
g6
I01
sg7
Vinsert
p392
sg9
L2L
sg10
VD.insert(index, object) -- insert object before index
p393
sa(dp394
g6
I01
sg7
Vmaxlen
p395
sg9
L5L
sa(dp396
g6
I01
sg7
g96
sg9
L2L
sg10
VRemove and return the rightmost element.
p397
sa(dp398
g6
I01
sg7
Vpopleft
p399
sg9
L2L
sg10
VRemove and return the leftmost element.
p400
sa(dp401
g6
I01
sg7
Vremove
p402
sg9
L2L
sg10
VD.remove(value) -- remove first occurrence of value.
p403
sa(dp404
g6
I01
sg7
Vreverse
p405
sg9
L2L
sg10
VD.reverse() -- reverse *IN PLACE*
p406
sa(dp407
g6
I01
sg7
Vrotate
p408
sg9
L2L
sg10
VRotate the deque n steps to the right (default n=1).  If n is negative, rotates left.
p409
sasg6
I01
sg7
Vdeque
p410
sg9
L3L
sg10
Vdeque([iterable[, maxlen]]) --> deque object\u000a\u000aA list-like sequence optimized for data accesses near its endpoints.
p411
sasg6
I01
sg7
V_collections
p412
sg10
VHigh performance data structures.\u000a- deque:        ordered collection accessible from endpoints only\u000a- defaultdict:  dict subclass with a default value factory\u000a
p413
s.