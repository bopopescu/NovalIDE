(dp0
Vname
p1
Vfaulthandler
p2
sVis_builtin
p3
I01
sVdoc
p4
Vfaulthandler module.
p5
sVchilds
p6
(lp7
(dp8
g1
V_EXCEPTION_ACCESS_VIOLATION
p9
sg3
I01
sVtype
p10
L5L
sa(dp11
g1
V_EXCEPTION_INT_DIVIDE_BY_ZERO
p12
sg3
I01
sg10
L5L
sa(dp13
g1
V_EXCEPTION_NONCONTINUABLE
p14
sg3
I01
sg10
L5L
sa(dp15
g1
V_EXCEPTION_NONCONTINUABLE_EXCEPTION
p16
sg3
I01
sg10
L5L
sa(dp17
g1
V_EXCEPTION_STACK_OVERFLOW
p18
sg3
I01
sg10
L5L
sa(dp19
g1
V__doc__
p20
sg3
I01
sg10
L5L
sa(dp21
g1
V__loader__
p22
sg3
I01
sg10
L3L
sg6
(lp23
(dp24
g1
V__delattr__
p25
sg3
I01
sg10
L5L
sa(dp26
g1
V__dict__
p27
sg3
I01
sg10
L5L
sa(dp28
g1
V__dir__
p29
sg3
I01
sg10
L2L
sg4
V__dir__() -> list\u000adefault dir() implementation
p30
sa(dp31
g1
g20
sg3
I01
sg10
L5L
sa(dp32
g1
V__eq__
p33
sg3
I01
sg10
L5L
sa(dp34
g1
V__format__
p35
sg3
I01
sg10
L2L
sg4
Vdefault object formatter
p36
sa(dp37
g1
V__ge__
p38
sg3
I01
sg10
L5L
sa(dp39
g1
V__getattribute__
p40
sg3
I01
sg10
L5L
sa(dp41
g1
V__gt__
p42
sg3
I01
sg10
L5L
sa(dp43
g1
V__hash__
p44
sg3
I01
sg10
L5L
sa(dp45
g1
V__init__
p46
sg3
I01
sg10
L5L
sa(dp47
g1
V__init_subclass__
p48
sg3
I01
sg10
L2L
sg4
VThis method is called when a class is subclassed.\u000a\u000aThe default implementation does nothing. It may be\u000aoverridden to extend subclasses.\u000a
p49
sa(dp50
g1
V__le__
p51
sg3
I01
sg10
L5L
sa(dp52
g1
V__lt__
p53
sg3
I01
sg10
L5L
sa(dp54
g1
V__module__
p55
sg3
I01
sg10
L5L
sa(dp56
g1
V__ne__
p57
sg3
I01
sg10
L5L
sa(dp58
g1
V__new__
p59
sg3
I01
sg10
L2L
sg4
VCreate and return a new object.  See help(type) for accurate signature.
p60
sa(dp61
g1
V__reduce__
p62
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p63
sa(dp64
g1
V__reduce_ex__
p65
sg3
I01
sg10
L2L
sg4
Vhelper for pickle
p66
sa(dp67
g1
V__repr__
p68
sg3
I01
sg10
L5L
sa(dp69
g1
V__setattr__
p70
sg3
I01
sg10
L5L
sa(dp71
g1
V__sizeof__
p72
sg3
I01
sg10
L2L
sg4
V__sizeof__() -> int\u000asize of object in memory, in bytes
p73
sa(dp74
g1
V__str__
p75
sg3
I01
sg10
L5L
sa(dp76
g1
V__subclasshook__
p77
sg3
I01
sg10
L2L
sg4
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p78
sa(dp79
g1
V__weakref__
p80
sg3
I01
sg10
L5L
sa(dp81
g1
Vcreate_module
p82
sg3
I01
sg10
L5L
sa(dp83
g1
Vexec_module
p84
sg3
I01
sg10
L5L
sa(dp85
g1
Vfind_module
p86
sg3
I01
sg10
L5L
sa(dp87
g1
Vfind_spec
p88
sg3
I01
sg10
L5L
sa(dp89
g1
Vget_code
p90
sg3
I01
sg10
L5L
sa(dp91
g1
Vget_source
p92
sg3
I01
sg10
L5L
sa(dp93
g1
Vis_package
p94
sg3
I01
sg10
L5L
sa(dp95
g1
Vload_module
p96
sg3
I01
sg10
L5L
sa(dp97
g1
Vmodule_repr
p98
sg3
I01
sg10
L5L
sasg4
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p99
sa(dp100
g1
V__name__
p101
sg3
I01
sg10
L5L
sa(dp102
g1
V__package__
p103
sg3
I01
sg10
L5L
sa(dp104
g1
V__spec__
p105
sg3
I01
sg10
L5L
sa(dp106
g1
V_fatal_error
p107
sg3
I01
sg10
L2L
sg4
V_fatal_error(message): call Py_FatalError(message)
p108
sa(dp109
g1
V_fatal_error_c_thread
p110
sg3
I01
sg10
L2L
sg4
Vfatal_error_c_thread(): call Py_FatalError() in a new C thread.
p111
sa(dp112
g1
V_raise_exception
p113
sg3
I01
sg10
L2L
sg4
Vraise_exception(code, flags=0): Call RaiseException(code, flags).
p114
sa(dp115
g1
V_read_null
p116
sg3
I01
sg10
L2L
sg4
V_read_null(): read from NULL, raise a SIGSEGV or SIGBUS signal depending on the platform
p117
sa(dp118
g1
V_sigabrt
p119
sg3
I01
sg10
L2L
sg4
V_sigabrt(): raise a SIGABRT signal
p120
sa(dp121
g1
V_sigfpe
p122
sg3
I01
sg10
L2L
sg4
V_sigfpe(): raise a SIGFPE signal
p123
sa(dp124
g1
V_sigsegv
p125
sg3
I01
sg10
L2L
sg4
V_sigsegv(release_gil=False): raise a SIGSEGV signal
p126
sa(dp127
g1
Vcancel_dump_traceback_later
p128
sg3
I01
sg10
L2L
sg4
Vcancel_dump_traceback_later():\u000acancel the previous call to dump_traceback_later().
p129
sa(dp130
g1
Vdisable
p131
sg3
I01
sg10
L2L
sg4
Vdisable(): disable the fault handler
p132
sa(dp133
g1
Vdump_traceback
p134
sg3
I01
sg10
L2L
sg4
Vdump_traceback(file=sys.stderr, all_threads=True): dump the traceback of the current thread, or of all threads if all_threads is True, into file
p135
sa(dp136
g1
Vdump_traceback_later
p137
sg3
I01
sg10
L2L
sg4
Vdump_traceback_later(timeout, repeat=False, file=sys.stderrn, exit=False):\u000adump the traceback of all threads in timeout seconds,\u000aor each timeout seconds if repeat is True. If exit is True, call _exit(1) which is not safe.
p138
sa(dp139
g1
Venable
p140
sg3
I01
sg10
L2L
sg4
Venable(file=sys.stderr, all_threads=True): enable the fault handler
p141
sa(dp142
g1
Vis_enabled
p143
sg3
I01
sg10
L2L
sg4
Vis_enabled()->bool: check if the handler is enabled
p144
sasg10
L1L
s.