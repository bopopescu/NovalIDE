(dp0
Vchilds
p1
(lp2
(dp3
Vis_builtin
p4
I01
sVname
p5
VEPOLLERR
p6
sVtype
p7
L5L
sa(dp8
g4
I01
sg5
VEPOLLET
p9
sg7
L5L
sa(dp10
g4
I01
sg5
VEPOLLHUP
p11
sg7
L5L
sa(dp12
g4
I01
sg5
VEPOLLIN
p13
sg7
L5L
sa(dp14
g4
I01
sg5
VEPOLLMSG
p15
sg7
L5L
sa(dp16
g4
I01
sg5
VEPOLLONESHOT
p17
sg7
L5L
sa(dp18
g4
I01
sg5
VEPOLLOUT
p19
sg7
L5L
sa(dp20
g4
I01
sg5
VEPOLLPRI
p21
sg7
L5L
sa(dp22
g4
I01
sg5
VEPOLLRDBAND
p23
sg7
L5L
sa(dp24
g4
I01
sg5
VEPOLLRDNORM
p25
sg7
L5L
sa(dp26
g4
I01
sg5
VEPOLLWRBAND
p27
sg7
L5L
sa(dp28
g4
I01
sg5
VEPOLLWRNORM
p29
sg7
L5L
sa(dp30
g4
I01
sg5
VEPOLL_CLOEXEC
p31
sg7
L5L
sa(dp32
g4
I01
sg5
VPIPE_BUF
p33
sg7
L5L
sa(dp34
g4
I01
sg5
VPOLLERR
p35
sg7
L5L
sa(dp36
g4
I01
sg5
VPOLLHUP
p37
sg7
L5L
sa(dp38
g4
I01
sg5
VPOLLIN
p39
sg7
L5L
sa(dp40
g4
I01
sg5
VPOLLMSG
p41
sg7
L5L
sa(dp42
g4
I01
sg5
VPOLLNVAL
p43
sg7
L5L
sa(dp44
g4
I01
sg5
VPOLLOUT
p45
sg7
L5L
sa(dp46
g4
I01
sg5
VPOLLPRI
p47
sg7
L5L
sa(dp48
g4
I01
sg5
VPOLLRDBAND
p49
sg7
L5L
sa(dp50
g4
I01
sg5
VPOLLRDNORM
p51
sg7
L5L
sa(dp52
g4
I01
sg5
VPOLLWRBAND
p53
sg7
L5L
sa(dp54
g4
I01
sg5
VPOLLWRNORM
p55
sg7
L5L
sa(dp56
g4
I01
sg5
V__doc__
p57
sg7
L5L
sa(dp58
g1
(lp59
(dp60
g4
I01
sg5
V__delattr__
p61
sg7
L5L
sa(dp62
g4
I01
sg5
V__dict__
p63
sg7
L5L
sa(dp64
g4
I01
sg5
V__dir__
p65
sg7
L2L
sVdoc
p66
V__dir__() -> list\u000adefault dir() implementation
p67
sa(dp68
g4
I01
sg5
g57
sg7
L5L
sa(dp69
g4
I01
sg5
V__eq__
p70
sg7
L5L
sa(dp71
g4
I01
sg5
V__format__
p72
sg7
L2L
sg66
Vdefault object formatter
p73
sa(dp74
g4
I01
sg5
V__ge__
p75
sg7
L5L
sa(dp76
g4
I01
sg5
V__getattribute__
p77
sg7
L5L
sa(dp78
g4
I01
sg5
V__gt__
p79
sg7
L5L
sa(dp80
g4
I01
sg5
V__hash__
p81
sg7
L5L
sa(dp82
g4
I01
sg5
V__init__
p83
sg7
L5L
sa(dp84
g4
I01
sg5
V__le__
p85
sg7
L5L
sa(dp86
g4
I01
sg5
V__lt__
p87
sg7
L5L
sa(dp88
g4
I01
sg5
V__module__
p89
sg7
L5L
sa(dp90
g4
I01
sg5
V__ne__
p91
sg7
L5L
sa(dp92
g4
I01
sg5
V__new__
p93
sg7
L2L
sg66
VCreate and return a new object.  See help(type) for accurate signature.
p94
sa(dp95
g4
I01
sg5
V__reduce__
p96
sg7
L2L
sg66
Vhelper for pickle
p97
sa(dp98
g4
I01
sg5
V__reduce_ex__
p99
sg7
L2L
sg66
Vhelper for pickle
p100
sa(dp101
g4
I01
sg5
V__repr__
p102
sg7
L5L
sa(dp103
g4
I01
sg5
V__setattr__
p104
sg7
L5L
sa(dp105
g4
I01
sg5
V__sizeof__
p106
sg7
L2L
sg66
V__sizeof__() -> int\u000asize of object in memory, in bytes
p107
sa(dp108
g4
I01
sg5
V__str__
p109
sg7
L5L
sa(dp110
g4
I01
sg5
V__subclasshook__
p111
sg7
L2L
sg66
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p112
sa(dp113
g4
I01
sg5
V__weakref__
p114
sg7
L5L
sa(dp115
g4
I01
sg5
Vcreate_module
p116
sg7
L5L
sa(dp117
g4
I01
sg5
Vexec_module
p118
sg7
L5L
sa(dp119
g4
I01
sg5
Vfind_module
p120
sg7
L5L
sa(dp121
g4
I01
sg5
Vfind_spec
p122
sg7
L5L
sa(dp123
g4
I01
sg5
Vget_code
p124
sg7
L5L
sa(dp125
g4
I01
sg5
Vget_source
p126
sg7
L5L
sa(dp127
g4
I01
sg5
Vis_package
p128
sg7
L5L
sa(dp129
g4
I01
sg5
Vload_module
p130
sg7
L5L
sa(dp131
g4
I01
sg5
Vmodule_repr
p132
sg7
L5L
sasg4
I01
sg5
V__loader__
p133
sg7
L3L
sg66
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p134
sa(dp135
g4
I01
sg5
V__name__
p136
sg7
L5L
sa(dp137
g4
I01
sg5
V__package__
p138
sg7
L5L
sa(dp139
g4
I01
sg5
V__spec__
p140
sg7
L5L
sa(dp141
g1
(lp142
(dp143
g4
I01
sg5
g61
sg7
L5L
sa(dp144
g4
I01
sg5
g65
sg7
L2L
sg66
V__dir__() -> list\u000adefault dir() implementation
p145
sa(dp146
g4
I01
sg5
g57
sg7
L5L
sa(dp147
g4
I01
sg5
V__enter__
p148
sg7
L2L
sg66
Nsa(dp149
g4
I01
sg5
g70
sg7
L5L
sa(dp150
g4
I01
sg5
V__exit__
p151
sg7
L2L
sg66
Nsa(dp152
g4
I01
sg5
g72
sg7
L2L
sg66
Vdefault object formatter
p153
sa(dp154
g4
I01
sg5
g75
sg7
L5L
sa(dp155
g4
I01
sg5
g77
sg7
L5L
sa(dp156
g4
I01
sg5
g79
sg7
L5L
sa(dp157
g4
I01
sg5
g81
sg7
L5L
sa(dp158
g4
I01
sg5
g83
sg7
L5L
sa(dp159
g4
I01
sg5
g85
sg7
L5L
sa(dp160
g4
I01
sg5
g87
sg7
L5L
sa(dp161
g4
I01
sg5
g91
sg7
L5L
sa(dp162
g4
I01
sg5
g93
sg7
L2L
sg66
VCreate and return a new object.  See help(type) for accurate signature.
p163
sa(dp164
g4
I01
sg5
g96
sg7
L2L
sg66
Vhelper for pickle
p165
sa(dp166
g4
I01
sg5
g99
sg7
L2L
sg66
Vhelper for pickle
p167
sa(dp168
g4
I01
sg5
g102
sg7
L5L
sa(dp169
g4
I01
sg5
g104
sg7
L5L
sa(dp170
g4
I01
sg5
g106
sg7
L2L
sg66
V__sizeof__() -> int\u000asize of object in memory, in bytes
p171
sa(dp172
g4
I01
sg5
g109
sg7
L5L
sa(dp173
g4
I01
sg5
g111
sg7
L2L
sg66
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p174
sa(dp175
g4
I01
sg5
Vclose
p176
sg7
L2L
sg66
Vclose() -> None\u000a\u000aClose the epoll control file descriptor. Further operations on the epoll\u000aobject will raise an exception.
p177
sa(dp178
g4
I01
sg5
Vclosed
p179
sg7
L5L
sa(dp180
g4
I01
sg5
Vfileno
p181
sg7
L2L
sg66
Vfileno() -> int\u000a\u000aReturn the epoll control file descriptor.
p182
sa(dp183
g4
I01
sg5
Vfromfd
p184
sg7
L2L
sg66
Vfromfd(fd) -> epoll\u000a\u000aCreate an epoll object from a given control fd.
p185
sa(dp186
g4
I01
sg5
Vmodify
p187
sg7
L2L
sg66
Vmodify(fd, eventmask) -> None\u000a\u000afd is the target file descriptor of the operation\u000aevents is a bit set composed of the various EPOLL constants
p188
sa(dp189
g4
I01
sg5
Vpoll
p190
sg7
L2L
sg66
Vpoll([timeout=-1[, maxevents=-1]]) -> [(fd, events), (...)]\u000a\u000aWait for events on the epoll file descriptor for a maximum time of timeout\u000ain seconds (as float). -1 makes poll wait indefinitely.\u000aUp to maxevents are returned to the caller.
p191
sa(dp192
g4
I01
sg5
Vregister
p193
sg7
L2L
sg66
Vregister(fd[, eventmask]) -> None\u000a\u000aRegisters a new fd or raises an OSError if the fd is already registered.\u000afd is the target file descriptor of the operation.\u000aevents is a bit set composed of the various EPOLL constants; the default\u000ais EPOLLIN | EPOLLOUT | EPOLLPRI.\u000a\u000aThe epoll interface supports all file descriptors that support poll.
p194
sa(dp195
g4
I01
sg5
Vunregister
p196
sg7
L2L
sg66
Vunregister(fd) -> None\u000a\u000afd is the target file descriptor of the operation.
p197
sasg4
I01
sg5
Vepoll
p198
sg7
L3L
sg66
Vselect.epoll(sizehint=-1, flags=0)\u000a\u000aReturns an epolling object\u000a\u000asizehint must be a positive integer or -1 for the default size. The\u000asizehint is used to optimize internal data structures. It doesn't limit\u000athe maximum number of monitored events.
p199
sa(dp200
g1
(lp201
(dp202
g4
I01
sg5
V__cause__
p203
sg7
L5L
sa(dp204
g4
I01
sg5
V__context__
p205
sg7
L5L
sa(dp206
g4
I01
sg5
g61
sg7
L5L
sa(dp207
g4
I01
sg5
g63
sg7
L5L
sa(dp208
g4
I01
sg5
g65
sg7
L2L
sg66
V__dir__() -> list\u000adefault dir() implementation
p209
sa(dp210
g4
I01
sg5
g57
sg7
L5L
sa(dp211
g4
I01
sg5
g70
sg7
L5L
sa(dp212
g4
I01
sg5
g72
sg7
L2L
sg66
Vdefault object formatter
p213
sa(dp214
g4
I01
sg5
g75
sg7
L5L
sa(dp215
g4
I01
sg5
g77
sg7
L5L
sa(dp216
g4
I01
sg5
g79
sg7
L5L
sa(dp217
g4
I01
sg5
g81
sg7
L5L
sa(dp218
g4
I01
sg5
g83
sg7
L5L
sa(dp219
g4
I01
sg5
g85
sg7
L5L
sa(dp220
g4
I01
sg5
g87
sg7
L5L
sa(dp221
g4
I01
sg5
g91
sg7
L5L
sa(dp222
g4
I01
sg5
g93
sg7
L2L
sg66
VCreate and return a new object.  See help(type) for accurate signature.
p223
sa(dp224
g4
I01
sg5
g96
sg7
L2L
sg66
Nsa(dp225
g4
I01
sg5
g99
sg7
L2L
sg66
Vhelper for pickle
p226
sa(dp227
g4
I01
sg5
g102
sg7
L5L
sa(dp228
g4
I01
sg5
g104
sg7
L5L
sa(dp229
g4
I01
sg5
V__setstate__
p230
sg7
L2L
sg66
Nsa(dp231
g4
I01
sg5
g106
sg7
L2L
sg66
V__sizeof__() -> int\u000asize of object in memory, in bytes
p232
sa(dp233
g4
I01
sg5
g109
sg7
L5L
sa(dp234
g4
I01
sg5
g111
sg7
L2L
sg66
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p235
sa(dp236
g4
I01
sg5
V__suppress_context__
p237
sg7
L5L
sa(dp238
g4
I01
sg5
V__traceback__
p239
sg7
L5L
sa(dp240
g4
I01
sg5
Vargs
p241
sg7
L5L
sa(dp242
g4
I01
sg5
Vcharacters_written
p243
sg7
L5L
sa(dp244
g4
I01
sg5
Verrno
p245
sg7
L5L
sa(dp246
g4
I01
sg5
Vfilename
p247
sg7
L5L
sa(dp248
g4
I01
sg5
Vfilename2
p249
sg7
L5L
sa(dp250
g4
I01
sg5
Vstrerror
p251
sg7
L5L
sa(dp252
g4
I01
sg5
Vwith_traceback
p253
sg7
L2L
sg66
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p254
sasg4
I01
sg5
Verror
p255
sg7
L3L
sg66
VBase class for I/O related errors.
p256
sa(dp257
g4
I01
sg5
g190
sg7
L2L
sg66
VReturns a polling object, which supports registering and\u000aunregistering file descriptors, and then polling them for I/O events.
p258
sa(dp259
g4
I01
sg5
Vselect
p260
sg7
L2L
sg66
Vselect(rlist, wlist, xlist[, timeout]) -> (rlist, wlist, xlist)\u000a\u000aWait until one or more file descriptors are ready for some kind of I/O.\u000aThe first three arguments are sequences of file descriptors to be waited for:\u000arlist -- wait until ready for reading\u000awlist -- wait until ready for writing\u000axlist -- wait for an ``exceptional condition''\u000aIf only one kind of condition is required, pass [] for the other lists.\u000aA file descriptor is either a socket or file object, or a small integer\u000agotten from a fileno() method call on one of those.\u000a\u000aThe optional 4th argument specifies a timeout in seconds; it may be\u000aa floating point number to specify fractions of seconds.  If it is absent\u000aor None, the call will never time out.\u000a\u000aThe return value is a tuple of three lists corresponding to the first three\u000aarguments; each contains the subset of the corresponding file descriptors\u000athat are ready.\u000a\u000a*** IMPORTANT NOTICE ***\u000aOn Windows, only sockets are supported; on Unix, all file\u000adescriptors can be used.
p261
sasg4
I01
sg5
Vselect
p262
sg66
VThis module supports asynchronous I/O on multiple file descriptors.\u000a\u000a*** IMPORTANT NOTICE ***\u000aOn Windows, only sockets are supported; on Unix, all file descriptors.
p263
s.