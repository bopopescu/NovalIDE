(dp0
Vchilds
p1
(lp2
(dp3
g1
(lp4
(dp5
Vis_builtin
p6
I01
sVname
p7
V__cause__
p8
sVtype
p9
L5L
sa(dp10
g6
I01
sg7
V__context__
p11
sg9
L5L
sa(dp12
g6
I01
sg7
V__delattr__
p13
sg9
L5L
sa(dp14
g6
I01
sg7
V__dict__
p15
sg9
L5L
sa(dp16
g6
I01
sg7
V__dir__
p17
sg9
L2L
sVdoc
p18
V__dir__() -> list\u000adefault dir() implementation
p19
sa(dp20
g6
I01
sg7
V__doc__
p21
sg9
L5L
sa(dp22
g6
I01
sg7
V__eq__
p23
sg9
L5L
sa(dp24
g6
I01
sg7
V__format__
p25
sg9
L2L
sg18
Vdefault object formatter
p26
sa(dp27
g6
I01
sg7
V__ge__
p28
sg9
L5L
sa(dp29
g6
I01
sg7
V__getattribute__
p30
sg9
L5L
sa(dp31
g6
I01
sg7
V__gt__
p32
sg9
L5L
sa(dp33
g6
I01
sg7
V__hash__
p34
sg9
L5L
sa(dp35
g6
I01
sg7
V__init__
p36
sg9
L5L
sa(dp37
g6
I01
sg7
V__le__
p38
sg9
L5L
sa(dp39
g6
I01
sg7
V__lt__
p40
sg9
L5L
sa(dp41
g6
I01
sg7
V__module__
p42
sg9
L5L
sa(dp43
g6
I01
sg7
V__ne__
p44
sg9
L5L
sa(dp45
g6
I01
sg7
V__new__
p46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p47
sa(dp48
g6
I01
sg7
V__reduce__
p49
sg9
L2L
sg18
Nsa(dp50
g6
I01
sg7
V__reduce_ex__
p51
sg9
L2L
sg18
Vhelper for pickle
p52
sa(dp53
g6
I01
sg7
V__repr__
p54
sg9
L5L
sa(dp55
g6
I01
sg7
V__setattr__
p56
sg9
L5L
sa(dp57
g6
I01
sg7
V__setstate__
p58
sg9
L2L
sg18
Nsa(dp59
g6
I01
sg7
V__sizeof__
p60
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p61
sa(dp62
g6
I01
sg7
V__str__
p63
sg9
L5L
sa(dp64
g6
I01
sg7
V__subclasshook__
p65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p66
sa(dp67
g6
I01
sg7
V__suppress_context__
p68
sg9
L5L
sa(dp69
g6
I01
sg7
V__traceback__
p70
sg9
L5L
sa(dp71
g6
I01
sg7
V__weakref__
p72
sg9
L5L
sa(dp73
g6
I01
sg7
Vargs
p74
sg9
L5L
sa(dp75
g6
I01
sg7
Vwith_traceback
p76
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p77
sasg6
I01
sg7
VPickleError
p78
sg9
L3L
sg18
Nsa(dp79
g1
(lp80
(dp81
g6
I01
sg7
g13
sg9
L5L
sa(dp82
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p83
sa(dp84
g6
I01
sg7
g21
sg9
L5L
sa(dp85
g6
I01
sg7
g23
sg9
L5L
sa(dp86
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p87
sa(dp88
g6
I01
sg7
g28
sg9
L5L
sa(dp89
g6
I01
sg7
g30
sg9
L5L
sa(dp90
g6
I01
sg7
g32
sg9
L5L
sa(dp91
g6
I01
sg7
g34
sg9
L5L
sa(dp92
g6
I01
sg7
g36
sg9
L5L
sa(dp93
g6
I01
sg7
g38
sg9
L5L
sa(dp94
g6
I01
sg7
g40
sg9
L5L
sa(dp95
g6
I01
sg7
g44
sg9
L5L
sa(dp96
g6
I01
sg7
g46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p97
sa(dp98
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p99
sa(dp100
g6
I01
sg7
g51
sg9
L2L
sg18
Vhelper for pickle
p101
sa(dp102
g6
I01
sg7
g54
sg9
L5L
sa(dp103
g6
I01
sg7
g56
sg9
L5L
sa(dp104
g6
I01
sg7
g60
sg9
L2L
sg18
VReturns size in memory, in bytes.
p105
sa(dp106
g6
I01
sg7
g63
sg9
L5L
sa(dp107
g6
I01
sg7
g65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p108
sa(dp109
g6
I01
sg7
Vbin
p110
sg9
L5L
sa(dp111
g6
I01
sg7
Vclear_memo
p112
sg9
L2L
sg18
VClears the pickler's "memo".\u000a\u000aThe memo is the data structure that remembers which objects the\u000apickler has already seen, so that shared or recursive objects are\u000apickled by reference and not by value.  This method is useful when\u000are-using picklers.
p113
sa(dp114
g6
I01
sg7
Vdispatch_table
p115
sg9
L5L
sa(dp116
g6
I01
sg7
Vdump
p117
sg9
L2L
sg18
VWrite a pickled representation of the given object to the open file.
p118
sa(dp119
g6
I01
sg7
Vfast
p120
sg9
L5L
sa(dp121
g6
I01
sg7
Vmemo
p122
sg9
L5L
sa(dp123
g6
I01
sg7
Vpersistent_id
p124
sg9
L5L
sasg6
I01
sg7
VPickler
p125
sg9
L3L
sg18
VThis takes a binary file for writing a pickle data stream.\u000a\u000aThe optional *protocol* argument tells the pickler to use the given\u000aprotocol; supported protocols are 0, 1, 2, 3 and 4.  The default\u000aprotocol is 3; a backward-incompatible protocol designed for Python 3.\u000a\u000aSpecifying a negative protocol version selects the highest protocol\u000aversion supported.  The higher the protocol used, the more recent the\u000aversion of Python needed to read the pickle produced.\u000a\u000aThe *file* argument must have a write() method that accepts a single\u000abytes argument. It can thus be a file object opened for binary\u000awriting, an io.BytesIO instance, or any other custom object that meets\u000athis interface.\u000a\u000aIf *fix_imports* is True and protocol is less than 3, pickle will try\u000ato map the new Python 3 names to the old module names used in Python\u000a2, so that the pickle data stream is readable with Python 2.
p126
sa(dp127
g1
(lp128
(dp129
g6
I01
sg7
g8
sg9
L5L
sa(dp130
g6
I01
sg7
g11
sg9
L5L
sa(dp131
g6
I01
sg7
g13
sg9
L5L
sa(dp132
g6
I01
sg7
g15
sg9
L5L
sa(dp133
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p134
sa(dp135
g6
I01
sg7
g21
sg9
L5L
sa(dp136
g6
I01
sg7
g23
sg9
L5L
sa(dp137
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p138
sa(dp139
g6
I01
sg7
g28
sg9
L5L
sa(dp140
g6
I01
sg7
g30
sg9
L5L
sa(dp141
g6
I01
sg7
g32
sg9
L5L
sa(dp142
g6
I01
sg7
g34
sg9
L5L
sa(dp143
g6
I01
sg7
g36
sg9
L5L
sa(dp144
g6
I01
sg7
g38
sg9
L5L
sa(dp145
g6
I01
sg7
g40
sg9
L5L
sa(dp146
g6
I01
sg7
g42
sg9
L5L
sa(dp147
g6
I01
sg7
g44
sg9
L5L
sa(dp148
g6
I01
sg7
g46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p149
sa(dp150
g6
I01
sg7
g49
sg9
L2L
sg18
Nsa(dp151
g6
I01
sg7
g51
sg9
L2L
sg18
Vhelper for pickle
p152
sa(dp153
g6
I01
sg7
g54
sg9
L5L
sa(dp154
g6
I01
sg7
g56
sg9
L5L
sa(dp155
g6
I01
sg7
g58
sg9
L2L
sg18
Nsa(dp156
g6
I01
sg7
g60
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p157
sa(dp158
g6
I01
sg7
g63
sg9
L5L
sa(dp159
g6
I01
sg7
g65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p160
sa(dp161
g6
I01
sg7
g68
sg9
L5L
sa(dp162
g6
I01
sg7
g70
sg9
L5L
sa(dp163
g6
I01
sg7
g72
sg9
L5L
sa(dp164
g6
I01
sg7
g74
sg9
L5L
sa(dp165
g6
I01
sg7
g76
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p166
sasg6
I01
sg7
VPicklingError
p167
sg9
L3L
sg18
Nsa(dp168
g1
(lp169
(dp170
g6
I01
sg7
g13
sg9
L5L
sa(dp171
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p172
sa(dp173
g6
I01
sg7
g21
sg9
L5L
sa(dp174
g6
I01
sg7
g23
sg9
L5L
sa(dp175
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p176
sa(dp177
g6
I01
sg7
g28
sg9
L5L
sa(dp178
g6
I01
sg7
g30
sg9
L5L
sa(dp179
g6
I01
sg7
g32
sg9
L5L
sa(dp180
g6
I01
sg7
g34
sg9
L5L
sa(dp181
g6
I01
sg7
g36
sg9
L5L
sa(dp182
g6
I01
sg7
g38
sg9
L5L
sa(dp183
g6
I01
sg7
g40
sg9
L5L
sa(dp184
g6
I01
sg7
g44
sg9
L5L
sa(dp185
g6
I01
sg7
g46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p186
sa(dp187
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p188
sa(dp189
g6
I01
sg7
g51
sg9
L2L
sg18
Vhelper for pickle
p190
sa(dp191
g6
I01
sg7
g54
sg9
L5L
sa(dp192
g6
I01
sg7
g56
sg9
L5L
sa(dp193
g6
I01
sg7
g60
sg9
L2L
sg18
VReturns size in memory, in bytes.
p194
sa(dp195
g6
I01
sg7
g63
sg9
L5L
sa(dp196
g6
I01
sg7
g65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p197
sa(dp198
g6
I01
sg7
Vfind_class
p199
sg9
L2L
sg18
VReturn an object from a specified module.\u000a\u000aIf necessary, the module will be imported. Subclasses may override\u000athis method (e.g. to restrict unpickling of arbitrary classes and\u000afunctions).\u000a\u000aThis method is called whenever a class or a function object is\u000aneeded.  Both arguments passed are str objects.
p200
sa(dp201
g6
I01
sg7
Vload
p202
sg9
L2L
sg18
VLoad a pickle.\u000a\u000aRead a pickled object representation from the open file object given\u000ain the constructor, and return the reconstituted object hierarchy\u000aspecified therein.
p203
sa(dp204
g6
I01
sg7
g122
sg9
L5L
sa(dp205
g6
I01
sg7
Vpersistent_load
p206
sg9
L5L
sasg6
I01
sg7
VUnpickler
p207
sg9
L3L
sg18
VThis takes a binary file for reading a pickle data stream.\u000a\u000aThe protocol version of the pickle is detected automatically, so no\u000aprotocol argument is needed.  Bytes past the pickled object's\u000arepresentation are ignored.\u000a\u000aThe argument *file* must have two methods, a read() method that takes\u000aan integer argument, and a readline() method that requires no\u000aarguments.  Both methods should return bytes.  Thus *file* can be a\u000abinary file object opened for reading, an io.BytesIO object, or any\u000aother custom object that meets this interface.\u000a\u000aOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\u000awhich are used to control compatibility support for pickle stream\u000agenerated by Python 2.  If *fix_imports* is True, pickle will try to\u000amap the old Python 2 names to the new names used in Python 3.  The\u000a*encoding* and *errors* tell pickle how to decode 8-bit string\u000ainstances pickled by Python 2; these default to 'ASCII' and 'strict',\u000arespectively.  The *encoding* can be 'bytes' to read these 8-bit\u000astring instances as bytes objects.
p208
sa(dp209
g1
(lp210
(dp211
g6
I01
sg7
g8
sg9
L5L
sa(dp212
g6
I01
sg7
g11
sg9
L5L
sa(dp213
g6
I01
sg7
g13
sg9
L5L
sa(dp214
g6
I01
sg7
g15
sg9
L5L
sa(dp215
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p216
sa(dp217
g6
I01
sg7
g21
sg9
L5L
sa(dp218
g6
I01
sg7
g23
sg9
L5L
sa(dp219
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p220
sa(dp221
g6
I01
sg7
g28
sg9
L5L
sa(dp222
g6
I01
sg7
g30
sg9
L5L
sa(dp223
g6
I01
sg7
g32
sg9
L5L
sa(dp224
g6
I01
sg7
g34
sg9
L5L
sa(dp225
g6
I01
sg7
g36
sg9
L5L
sa(dp226
g6
I01
sg7
g38
sg9
L5L
sa(dp227
g6
I01
sg7
g40
sg9
L5L
sa(dp228
g6
I01
sg7
g42
sg9
L5L
sa(dp229
g6
I01
sg7
g44
sg9
L5L
sa(dp230
g6
I01
sg7
g46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p231
sa(dp232
g6
I01
sg7
g49
sg9
L2L
sg18
Nsa(dp233
g6
I01
sg7
g51
sg9
L2L
sg18
Vhelper for pickle
p234
sa(dp235
g6
I01
sg7
g54
sg9
L5L
sa(dp236
g6
I01
sg7
g56
sg9
L5L
sa(dp237
g6
I01
sg7
g58
sg9
L2L
sg18
Nsa(dp238
g6
I01
sg7
g60
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p239
sa(dp240
g6
I01
sg7
g63
sg9
L5L
sa(dp241
g6
I01
sg7
g65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p242
sa(dp243
g6
I01
sg7
g68
sg9
L5L
sa(dp244
g6
I01
sg7
g70
sg9
L5L
sa(dp245
g6
I01
sg7
g72
sg9
L5L
sa(dp246
g6
I01
sg7
g74
sg9
L5L
sa(dp247
g6
I01
sg7
g76
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p248
sasg6
I01
sg7
VUnpicklingError
p249
sg9
L3L
sg18
Nsa(dp250
g6
I01
sg7
g21
sg9
L5L
sa(dp251
g1
(lp252
(dp253
g6
I01
sg7
g13
sg9
L5L
sa(dp254
g6
I01
sg7
g15
sg9
L5L
sa(dp255
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p256
sa(dp257
g6
I01
sg7
g21
sg9
L5L
sa(dp258
g6
I01
sg7
g23
sg9
L5L
sa(dp259
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p260
sa(dp261
g6
I01
sg7
g28
sg9
L5L
sa(dp262
g6
I01
sg7
g30
sg9
L5L
sa(dp263
g6
I01
sg7
g32
sg9
L5L
sa(dp264
g6
I01
sg7
g34
sg9
L5L
sa(dp265
g6
I01
sg7
g36
sg9
L5L
sa(dp266
g6
I01
sg7
g38
sg9
L5L
sa(dp267
g6
I01
sg7
g40
sg9
L5L
sa(dp268
g6
I01
sg7
g42
sg9
L5L
sa(dp269
g6
I01
sg7
g44
sg9
L5L
sa(dp270
g6
I01
sg7
g46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p271
sa(dp272
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p273
sa(dp274
g6
I01
sg7
g51
sg9
L2L
sg18
Vhelper for pickle
p275
sa(dp276
g6
I01
sg7
g54
sg9
L5L
sa(dp277
g6
I01
sg7
g56
sg9
L5L
sa(dp278
g6
I01
sg7
g60
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p279
sa(dp280
g6
I01
sg7
g63
sg9
L5L
sa(dp281
g6
I01
sg7
g65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p282
sa(dp283
g6
I01
sg7
g72
sg9
L5L
sa(dp284
g6
I01
sg7
Vcreate_module
p285
sg9
L5L
sa(dp286
g6
I01
sg7
Vexec_module
p287
sg9
L5L
sa(dp288
g6
I01
sg7
Vfind_module
p289
sg9
L5L
sa(dp290
g6
I01
sg7
Vfind_spec
p291
sg9
L5L
sa(dp292
g6
I01
sg7
Vget_code
p293
sg9
L5L
sa(dp294
g6
I01
sg7
Vget_source
p295
sg9
L5L
sa(dp296
g6
I01
sg7
Vis_package
p297
sg9
L5L
sa(dp298
g6
I01
sg7
Vload_module
p299
sg9
L5L
sa(dp300
g6
I01
sg7
Vmodule_repr
p301
sg9
L5L
sasg6
I01
sg7
V__loader__
p302
sg9
L3L
sg18
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p303
sa(dp304
g6
I01
sg7
V__name__
p305
sg9
L5L
sa(dp306
g6
I01
sg7
V__package__
p307
sg9
L5L
sa(dp308
g6
I01
sg7
V__spec__
p309
sg9
L5L
sa(dp310
g6
I01
sg7
g117
sg9
L2L
sg18
VWrite a pickled representation of obj to the open file object file.\u000a\u000aThis is equivalent to ``Pickler(file, protocol).dump(obj)``, but may\u000abe more efficient.\u000a\u000aThe optional *protocol* argument tells the pickler to use the given\u000aprotocol supported protocols are 0, 1, 2, 3 and 4.  The default\u000aprotocol is 3; a backward-incompatible protocol designed for Python 3.\u000a\u000aSpecifying a negative protocol version selects the highest protocol\u000aversion supported.  The higher the protocol used, the more recent the\u000aversion of Python needed to read the pickle produced.\u000a\u000aThe *file* argument must have a write() method that accepts a single\u000abytes argument.  It can thus be a file object opened for binary\u000awriting, an io.BytesIO instance, or any other custom object that meets\u000athis interface.\u000a\u000aIf *fix_imports* is True and protocol is less than 3, pickle will try\u000ato map the new Python 3 names to the old module names used in Python\u000a2, so that the pickle data stream is readable with Python 2.
p311
sa(dp312
g6
I01
sg7
Vdumps
p313
sg9
L2L
sg18
VReturn the pickled representation of the object as a bytes object.\u000a\u000aThe optional *protocol* argument tells the pickler to use the given\u000aprotocol; supported protocols are 0, 1, 2, 3 and 4.  The default\u000aprotocol is 3; a backward-incompatible protocol designed for Python 3.\u000a\u000aSpecifying a negative protocol version selects the highest protocol\u000aversion supported.  The higher the protocol used, the more recent the\u000aversion of Python needed to read the pickle produced.\u000a\u000aIf *fix_imports* is True and *protocol* is less than 3, pickle will\u000atry to map the new Python 3 names to the old module names used in\u000aPython 2, so that the pickle data stream is readable with Python 2.
p314
sa(dp315
g6
I01
sg7
g202
sg9
L2L
sg18
VRead and return an object from the pickle data stored in a file.\u000a\u000aThis is equivalent to ``Unpickler(file).load()``, but may be more\u000aefficient.\u000a\u000aThe protocol version of the pickle is detected automatically, so no\u000aprotocol argument is needed.  Bytes past the pickled object's\u000arepresentation are ignored.\u000a\u000aThe argument *file* must have two methods, a read() method that takes\u000aan integer argument, and a readline() method that requires no\u000aarguments.  Both methods should return bytes.  Thus *file* can be a\u000abinary file object opened for reading, an io.BytesIO object, or any\u000aother custom object that meets this interface.\u000a\u000aOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\u000awhich are used to control compatibility support for pickle stream\u000agenerated by Python 2.  If *fix_imports* is True, pickle will try to\u000amap the old Python 2 names to the new names used in Python 3.  The\u000a*encoding* and *errors* tell pickle how to decode 8-bit string\u000ainstances pickled by Python 2; these default to 'ASCII' and 'strict',\u000arespectively.  The *encoding* can be 'bytes' to read these 8-bit\u000astring instances as bytes objects.
p316
sa(dp317
g6
I01
sg7
Vloads
p318
sg9
L2L
sg18
VRead and return an object from the given pickle data.\u000a\u000aThe protocol version of the pickle is detected automatically, so no\u000aprotocol argument is needed.  Bytes past the pickled object's\u000arepresentation are ignored.\u000a\u000aOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\u000awhich are used to control compatibility support for pickle stream\u000agenerated by Python 2.  If *fix_imports* is True, pickle will try to\u000amap the old Python 2 names to the new names used in Python 3.  The\u000a*encoding* and *errors* tell pickle how to decode 8-bit string\u000ainstances pickled by Python 2; these default to 'ASCII' and 'strict',\u000arespectively.  The *encoding* can be 'bytes' to read these 8-bit\u000astring instances as bytes objects.
p319
sasg6
I01
sg7
V_pickle
p320
sg18
VOptimized C implementation for the Python pickle module.
p321
s.