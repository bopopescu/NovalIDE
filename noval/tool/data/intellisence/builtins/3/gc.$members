(dp0
Vchilds
p1
(lp2
(dp3
Vis_builtin
p4
I01
sVname
p5
VDEBUG_COLLECTABLE
p6
sVtype
p7
L5L
sa(dp8
g4
I01
sg5
VDEBUG_LEAK
p9
sg7
L5L
sa(dp10
g4
I01
sg5
VDEBUG_SAVEALL
p11
sg7
L5L
sa(dp12
g4
I01
sg5
VDEBUG_STATS
p13
sg7
L5L
sa(dp14
g4
I01
sg5
VDEBUG_UNCOLLECTABLE
p15
sg7
L5L
sa(dp16
g4
I01
sg5
V__doc__
p17
sg7
L5L
sa(dp18
g1
(lp19
(dp20
g4
I01
sg5
V__delattr__
p21
sg7
L5L
sa(dp22
g4
I01
sg5
V__dict__
p23
sg7
L5L
sa(dp24
g4
I01
sg5
V__dir__
p25
sg7
L2L
sVdoc
p26
V__dir__() -> list\u000adefault dir() implementation
p27
sa(dp28
g4
I01
sg5
g17
sg7
L5L
sa(dp29
g4
I01
sg5
V__eq__
p30
sg7
L5L
sa(dp31
g4
I01
sg5
V__format__
p32
sg7
L2L
sg26
Vdefault object formatter
p33
sa(dp34
g4
I01
sg5
V__ge__
p35
sg7
L5L
sa(dp36
g4
I01
sg5
V__getattribute__
p37
sg7
L5L
sa(dp38
g4
I01
sg5
V__gt__
p39
sg7
L5L
sa(dp40
g4
I01
sg5
V__hash__
p41
sg7
L5L
sa(dp42
g4
I01
sg5
V__init__
p43
sg7
L5L
sa(dp44
g4
I01
sg5
V__le__
p45
sg7
L5L
sa(dp46
g4
I01
sg5
V__lt__
p47
sg7
L5L
sa(dp48
g4
I01
sg5
V__module__
p49
sg7
L5L
sa(dp50
g4
I01
sg5
V__ne__
p51
sg7
L5L
sa(dp52
g4
I01
sg5
V__new__
p53
sg7
L2L
sg26
VCreate and return a new object.  See help(type) for accurate signature.
p54
sa(dp55
g4
I01
sg5
V__reduce__
p56
sg7
L2L
sg26
Vhelper for pickle
p57
sa(dp58
g4
I01
sg5
V__reduce_ex__
p59
sg7
L2L
sg26
Vhelper for pickle
p60
sa(dp61
g4
I01
sg5
V__repr__
p62
sg7
L5L
sa(dp63
g4
I01
sg5
V__setattr__
p64
sg7
L5L
sa(dp65
g4
I01
sg5
V__sizeof__
p66
sg7
L2L
sg26
V__sizeof__() -> int\u000asize of object in memory, in bytes
p67
sa(dp68
g4
I01
sg5
V__str__
p69
sg7
L5L
sa(dp70
g4
I01
sg5
V__subclasshook__
p71
sg7
L2L
sg26
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p72
sa(dp73
g4
I01
sg5
V__weakref__
p74
sg7
L5L
sa(dp75
g4
I01
sg5
Vcreate_module
p76
sg7
L5L
sa(dp77
g4
I01
sg5
Vexec_module
p78
sg7
L5L
sa(dp79
g4
I01
sg5
Vfind_module
p80
sg7
L5L
sa(dp81
g4
I01
sg5
Vfind_spec
p82
sg7
L5L
sa(dp83
g4
I01
sg5
Vget_code
p84
sg7
L5L
sa(dp85
g4
I01
sg5
Vget_source
p86
sg7
L5L
sa(dp87
g4
I01
sg5
Vis_package
p88
sg7
L5L
sa(dp89
g4
I01
sg5
Vload_module
p90
sg7
L5L
sa(dp91
g4
I01
sg5
Vmodule_repr
p92
sg7
L5L
sasg4
I01
sg5
V__loader__
p93
sg7
L3L
sg26
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p94
sa(dp95
g4
I01
sg5
V__name__
p96
sg7
L5L
sa(dp97
g4
I01
sg5
V__package__
p98
sg7
L5L
sa(dp99
g4
I01
sg5
V__spec__
p100
sg7
L5L
sa(dp101
g4
I01
sg5
Vcallbacks
p102
sg7
L5L
sa(dp103
g4
I01
sg5
Vcollect
p104
sg7
L2L
sg26
Vcollect([generation]) -> n\u000a\u000aWith no arguments, run a full collection.  The optional argument\u000amay be an integer specifying which generation to collect.  A ValueError\u000ais raised if the generation number is invalid.\u000a\u000aThe number of unreachable objects is returned.\u000a
p105
sa(dp106
g4
I01
sg5
Vdisable
p107
sg7
L2L
sg26
Vdisable() -> None\u000a\u000aDisable automatic garbage collection.\u000a
p108
sa(dp109
g4
I01
sg5
Venable
p110
sg7
L2L
sg26
Venable() -> None\u000a\u000aEnable automatic garbage collection.\u000a
p111
sa(dp112
g4
I01
sg5
Vgarbage
p113
sg7
L5L
sa(dp114
g4
I01
sg5
Vget_count
p115
sg7
L2L
sg26
Vget_count() -> (count0, count1, count2)\u000a\u000aReturn the current collection counts\u000a
p116
sa(dp117
g4
I01
sg5
Vget_debug
p118
sg7
L2L
sg26
Vget_debug() -> flags\u000a\u000aGet the garbage collection debugging flags.\u000a
p119
sa(dp120
g4
I01
sg5
Vget_objects
p121
sg7
L2L
sg26
Vget_objects() -> [...]\u000a\u000aReturn a list of objects tracked by the collector (excluding the list\u000areturned).\u000a
p122
sa(dp123
g4
I01
sg5
Vget_referents
p124
sg7
L2L
sg26
Vget_referents(*objs) -> list\u000aReturn the list of objects that are directly referred to by objs.
p125
sa(dp126
g4
I01
sg5
Vget_referrers
p127
sg7
L2L
sg26
Vget_referrers(*objs) -> list\u000aReturn the list of objects that directly refer to any of objs.
p128
sa(dp129
g4
I01
sg5
Vget_stats
p130
sg7
L2L
sg26
Vget_stats() -> [...]\u000a\u000aReturn a list of dictionaries containing per-generation statistics.\u000a
p131
sa(dp132
g4
I01
sg5
Vget_threshold
p133
sg7
L2L
sg26
Vget_threshold() -> (threshold0, threshold1, threshold2)\u000a\u000aReturn the current collection thresholds\u000a
p134
sa(dp135
g4
I01
sg5
Vis_tracked
p136
sg7
L2L
sg26
Vis_tracked(obj) -> bool\u000a\u000aReturns true if the object is tracked by the garbage collector.\u000aSimple atomic objects will return false.\u000a
p137
sa(dp138
g4
I01
sg5
Visenabled
p139
sg7
L2L
sg26
Visenabled() -> status\u000a\u000aReturns true if automatic garbage collection is enabled.\u000a
p140
sa(dp141
g4
I01
sg5
Vset_debug
p142
sg7
L2L
sg26
Vset_debug(flags) -> None\u000a\u000aSet the garbage collection debugging flags. Debugging information is\u000awritten to sys.stderr.\u000a\u000aflags is an integer and can have the following bits turned on:\u000a\u000a  DEBUG_STATS - Print statistics during collection.\u000a  DEBUG_COLLECTABLE - Print collectable objects found.\u000a  DEBUG_UNCOLLECTABLE - Print unreachable but uncollectable objects found.\u000a  DEBUG_SAVEALL - Save objects to gc.garbage rather than freeing them.\u000a  DEBUG_LEAK - Debug leaking programs (everything but STATS).\u000a
p143
sa(dp144
g4
I01
sg5
Vset_threshold
p145
sg7
L2L
sg26
Vset_threshold(threshold0, [threshold1, threshold2]) -> None\u000a\u000aSets the collection thresholds.  Setting threshold0 to zero disables\u000acollection.\u000a
p146
sasg4
I01
sg5
Vgc
p147
sg26
VThis module provides access to the garbage collector for reference cycles.\u000a\u000aenable() -- Enable automatic garbage collection.\u000adisable() -- Disable automatic garbage collection.\u000aisenabled() -- Returns true if automatic collection is enabled.\u000acollect() -- Do a full collection right now.\u000aget_count() -- Return the current collection counts.\u000aget_stats() -- Return list of dictionaries containing per-generation stats.\u000aset_debug() -- Set debugging flags.\u000aget_debug() -- Get debugging flags.\u000aset_threshold() -- Set the collection thresholds.\u000aget_threshold() -- Return the current the collection thresholds.\u000aget_objects() -- Return a list of all objects tracked by the collector.\u000ais_tracked() -- Returns true if a given object is tracked.\u000aget_referrers() -- Return the list of objects that refer to an object.\u000aget_referents() -- Return the list of objects that an object refers to.\u000a
p148
s.