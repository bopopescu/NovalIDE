(dp0
Vchilds
p1
(lp2
(dp3
g1
(lp4
(dp5
Vis_builtin
p6
I01
sVname
p7
V__cause__
p8
sVtype
p9
L5L
sa(dp10
g6
I01
sg7
V__context__
p11
sg9
L5L
sa(dp12
g6
I01
sg7
V__delattr__
p13
sg9
L5L
sa(dp14
g6
I01
sg7
V__dict__
p15
sg9
L5L
sa(dp16
g6
I01
sg7
V__dir__
p17
sg9
L2L
sVdoc
p18
V__dir__() -> list\u000adefault dir() implementation
p19
sa(dp20
g6
I01
sg7
V__doc__
p21
sg9
L5L
sa(dp22
g6
I01
sg7
V__eq__
p23
sg9
L5L
sa(dp24
g6
I01
sg7
V__format__
p25
sg9
L2L
sg18
Vdefault object formatter
p26
sa(dp27
g6
I01
sg7
V__ge__
p28
sg9
L5L
sa(dp29
g6
I01
sg7
V__getattribute__
p30
sg9
L5L
sa(dp31
g6
I01
sg7
V__gt__
p32
sg9
L5L
sa(dp33
g6
I01
sg7
V__hash__
p34
sg9
L5L
sa(dp35
g6
I01
sg7
V__init__
p36
sg9
L5L
sa(dp37
g6
I01
sg7
V__le__
p38
sg9
L5L
sa(dp39
g6
I01
sg7
V__lt__
p40
sg9
L5L
sa(dp41
g6
I01
sg7
V__module__
p42
sg9
L5L
sa(dp43
g6
I01
sg7
V__ne__
p44
sg9
L5L
sa(dp45
g6
I01
sg7
V__new__
p46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p47
sa(dp48
g6
I01
sg7
V__reduce__
p49
sg9
L2L
sg18
Nsa(dp50
g6
I01
sg7
V__reduce_ex__
p51
sg9
L2L
sg18
Vhelper for pickle
p52
sa(dp53
g6
I01
sg7
V__repr__
p54
sg9
L5L
sa(dp55
g6
I01
sg7
V__setattr__
p56
sg9
L5L
sa(dp57
g6
I01
sg7
V__setstate__
p58
sg9
L2L
sg18
Nsa(dp59
g6
I01
sg7
V__sizeof__
p60
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p61
sa(dp62
g6
I01
sg7
V__str__
p63
sg9
L5L
sa(dp64
g6
I01
sg7
V__subclasshook__
p65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p66
sa(dp67
g6
I01
sg7
V__suppress_context__
p68
sg9
L5L
sa(dp69
g6
I01
sg7
V__traceback__
p70
sg9
L5L
sa(dp71
g6
I01
sg7
V__weakref__
p72
sg9
L5L
sa(dp73
g6
I01
sg7
Vargs
p74
sg9
L5L
sa(dp75
g6
I01
sg7
Vmsg
p76
sg9
L5L
sa(dp77
g6
I01
sg7
g7
sg9
L5L
sa(dp78
g6
I01
sg7
Vpath
p79
sg9
L5L
sa(dp80
g6
I01
sg7
Vwith_traceback
p81
sg9
L2L
sg18
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p82
sasg6
I01
sg7
VZipImportError
p83
sg9
L3L
sg18
Nsa(dp84
g6
I01
sg7
g21
sg9
L5L
sa(dp85
g1
(lp86
(dp87
g6
I01
sg7
g13
sg9
L5L
sa(dp88
g6
I01
sg7
g15
sg9
L5L
sa(dp89
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p90
sa(dp91
g6
I01
sg7
g21
sg9
L5L
sa(dp92
g6
I01
sg7
g23
sg9
L5L
sa(dp93
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p94
sa(dp95
g6
I01
sg7
g28
sg9
L5L
sa(dp96
g6
I01
sg7
g30
sg9
L5L
sa(dp97
g6
I01
sg7
g32
sg9
L5L
sa(dp98
g6
I01
sg7
g34
sg9
L5L
sa(dp99
g6
I01
sg7
g36
sg9
L5L
sa(dp100
g6
I01
sg7
g38
sg9
L5L
sa(dp101
g6
I01
sg7
g40
sg9
L5L
sa(dp102
g6
I01
sg7
g42
sg9
L5L
sa(dp103
g6
I01
sg7
g44
sg9
L5L
sa(dp104
g6
I01
sg7
g46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p105
sa(dp106
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p107
sa(dp108
g6
I01
sg7
g51
sg9
L2L
sg18
Vhelper for pickle
p109
sa(dp110
g6
I01
sg7
g54
sg9
L5L
sa(dp111
g6
I01
sg7
g56
sg9
L5L
sa(dp112
g6
I01
sg7
g60
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p113
sa(dp114
g6
I01
sg7
g63
sg9
L5L
sa(dp115
g6
I01
sg7
g65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p116
sa(dp117
g6
I01
sg7
g72
sg9
L5L
sa(dp118
g6
I01
sg7
Vcreate_module
p119
sg9
L5L
sa(dp120
g6
I01
sg7
Vexec_module
p121
sg9
L5L
sa(dp122
g6
I01
sg7
Vfind_module
p123
sg9
L5L
sa(dp124
g6
I01
sg7
Vfind_spec
p125
sg9
L5L
sa(dp126
g6
I01
sg7
Vget_code
p127
sg9
L5L
sa(dp128
g6
I01
sg7
Vget_source
p129
sg9
L5L
sa(dp130
g6
I01
sg7
Vis_package
p131
sg9
L5L
sa(dp132
g6
I01
sg7
Vload_module
p133
sg9
L5L
sa(dp134
g6
I01
sg7
Vmodule_repr
p135
sg9
L5L
sasg6
I01
sg7
V__loader__
p136
sg9
L3L
sg18
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p137
sa(dp138
g6
I01
sg7
V__name__
p139
sg9
L5L
sa(dp140
g6
I01
sg7
V__package__
p141
sg9
L5L
sa(dp142
g6
I01
sg7
V__spec__
p143
sg9
L5L
sa(dp144
g6
I01
sg7
V_zip_directory_cache
p145
sg9
L5L
sa(dp146
g1
(lp147
(dp148
g6
I01
sg7
g13
sg9
L5L
sa(dp149
g6
I01
sg7
g17
sg9
L2L
sg18
V__dir__() -> list\u000adefault dir() implementation
p150
sa(dp151
g6
I01
sg7
g21
sg9
L5L
sa(dp152
g6
I01
sg7
g23
sg9
L5L
sa(dp153
g6
I01
sg7
g25
sg9
L2L
sg18
Vdefault object formatter
p154
sa(dp155
g6
I01
sg7
g28
sg9
L5L
sa(dp156
g6
I01
sg7
g30
sg9
L5L
sa(dp157
g6
I01
sg7
g32
sg9
L5L
sa(dp158
g6
I01
sg7
g34
sg9
L5L
sa(dp159
g6
I01
sg7
g36
sg9
L5L
sa(dp160
g6
I01
sg7
g38
sg9
L5L
sa(dp161
g6
I01
sg7
g40
sg9
L5L
sa(dp162
g6
I01
sg7
g44
sg9
L5L
sa(dp163
g6
I01
sg7
g46
sg9
L2L
sg18
VCreate and return a new object.  See help(type) for accurate signature.
p164
sa(dp165
g6
I01
sg7
g49
sg9
L2L
sg18
Vhelper for pickle
p166
sa(dp167
g6
I01
sg7
g51
sg9
L2L
sg18
Vhelper for pickle
p168
sa(dp169
g6
I01
sg7
g54
sg9
L5L
sa(dp170
g6
I01
sg7
g56
sg9
L5L
sa(dp171
g6
I01
sg7
g60
sg9
L2L
sg18
V__sizeof__() -> int\u000asize of object in memory, in bytes
p172
sa(dp173
g6
I01
sg7
g63
sg9
L5L
sa(dp174
g6
I01
sg7
g65
sg9
L2L
sg18
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p175
sa(dp176
g6
I01
sg7
V_files
p177
sg9
L5L
sa(dp178
g6
I01
sg7
Varchive
p179
sg9
L5L
sa(dp180
g6
I01
sg7
Vfind_loader
p181
sg9
L2L
sg18
Vfind_loader(fullname, path=None) -> self, str or None.\u000a\u000aSearch for a module specified by 'fullname'. 'fullname' must be the\u000afully qualified (dotted) module name. It returns the zipimporter\u000ainstance itself if the module was found, a string containing the\u000afull path name if it's possibly a portion of a namespace package,\u000aor None otherwise. The optional 'path' argument is ignored -- it's\u000a there for compatibility with the importer protocol.
p182
sa(dp183
g6
I01
sg7
g123
sg9
L2L
sg18
Vfind_module(fullname, path=None) -> self or None.\u000a\u000aSearch for a module specified by 'fullname'. 'fullname' must be the\u000afully qualified (dotted) module name. It returns the zipimporter\u000ainstance itself if the module was found, or None if it wasn't.\u000aThe optional 'path' argument is ignored -- it's there for compatibility\u000awith the importer protocol.
p184
sa(dp185
g6
I01
sg7
g127
sg9
L2L
sg18
Vget_code(fullname) -> code object.\u000a\u000aReturn the code object for the specified module. Raise ZipImportError\u000aif the module couldn't be found.
p186
sa(dp187
g6
I01
sg7
Vget_data
p188
sg9
L2L
sg18
Vget_data(pathname) -> string with file data.\u000a\u000aReturn the data associated with 'pathname'. Raise IOError if\u000athe file wasn't found.
p189
sa(dp190
g6
I01
sg7
Vget_filename
p191
sg9
L2L
sg18
Vget_filename(fullname) -> filename string.\u000a\u000aReturn the filename for the specified module.
p192
sa(dp193
g6
I01
sg7
g129
sg9
L2L
sg18
Vget_source(fullname) -> source string.\u000a\u000aReturn the source code for the specified module. Raise ZipImportError\u000aif the module couldn't be found, return None if the archive does\u000acontain the module, but has no source for it.
p194
sa(dp195
g6
I01
sg7
g131
sg9
L2L
sg18
Vis_package(fullname) -> bool.\u000a\u000aReturn True if the module specified by fullname is a package.\u000aRaise ZipImportError if the module couldn't be found.
p196
sa(dp197
g6
I01
sg7
g133
sg9
L2L
sg18
Vload_module(fullname) -> module.\u000a\u000aLoad the module specified by 'fullname'. 'fullname' must be the\u000afully qualified (dotted) module name. It returns the imported\u000amodule, or raises ZipImportError if it wasn't found.
p198
sa(dp199
g6
I01
sg7
Vprefix
p200
sg9
L5L
sasg6
I01
sg7
Vzipimporter
p201
sg9
L3L
sg18
Vzipimporter(archivepath) -> zipimporter object\u000a\u000aCreate a new zipimporter instance. 'archivepath' must be a path to\u000aa zipfile, or to a specific path inside a zipfile. For example, it can be\u000a'/tmp/myimport.zip', or '/tmp/myimport.zip/mydirectory', if mydirectory is a\u000avalid directory inside the archive.\u000a\u000a'ZipImportError is raised if 'archivepath' doesn't point to a valid Zip\u000aarchive.\u000a\u000aThe 'archive' attribute of zipimporter objects contains the name of the\u000azipfile targeted.
p202
sasg6
I01
sg7
Vzipimport
p203
sg18
Vzipimport provides support for importing Python modules from Zip archives.\u000a\u000aThis module exports three objects:\u000a- zipimporter: a class; its constructor takes a path to a Zip archive.\u000a- ZipImportError: exception raised by zipimporter objects. It's a\u000a  subclass of ImportError, so it can be caught as ImportError, too.\u000a- _zip_directory_cache: a dict, mapping archive paths to zip directory\u000a  info dicts, as used in zipimporter._files.\u000a\u000aIt is usually not needed to use the zipimport module explicitly; it is\u000aused by the builtin import mechanism for sys.path items that are paths\u000ato Zip archives.
p204
s.