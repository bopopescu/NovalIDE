(dp0
Vchilds
p1
(lp2
(dp3
Vis_builtin
p4
I01
sVname
p5
V__doc__
p6
sVtype
p7
L5L
sa(dp8
g1
(lp9
(dp10
g4
I01
sg5
V__delattr__
p11
sg7
L5L
sa(dp12
g4
I01
sg5
V__dict__
p13
sg7
L5L
sa(dp14
g4
I01
sg5
V__dir__
p15
sg7
L2L
sVdoc
p16
V__dir__() -> list\u000adefault dir() implementation
p17
sa(dp18
g4
I01
sg5
g6
sg7
L5L
sa(dp19
g4
I01
sg5
V__eq__
p20
sg7
L5L
sa(dp21
g4
I01
sg5
V__format__
p22
sg7
L2L
sg16
Vdefault object formatter
p23
sa(dp24
g4
I01
sg5
V__ge__
p25
sg7
L5L
sa(dp26
g4
I01
sg5
V__getattribute__
p27
sg7
L5L
sa(dp28
g4
I01
sg5
V__gt__
p29
sg7
L5L
sa(dp30
g4
I01
sg5
V__hash__
p31
sg7
L5L
sa(dp32
g4
I01
sg5
V__init__
p33
sg7
L5L
sa(dp34
g4
I01
sg5
V__le__
p35
sg7
L5L
sa(dp36
g4
I01
sg5
V__lt__
p37
sg7
L5L
sa(dp38
g4
I01
sg5
V__module__
p39
sg7
L5L
sa(dp40
g4
I01
sg5
V__ne__
p41
sg7
L5L
sa(dp42
g4
I01
sg5
V__new__
p43
sg7
L2L
sg16
VCreate and return a new object.  See help(type) for accurate signature.
p44
sa(dp45
g4
I01
sg5
V__reduce__
p46
sg7
L2L
sg16
Vhelper for pickle
p47
sa(dp48
g4
I01
sg5
V__reduce_ex__
p49
sg7
L2L
sg16
Vhelper for pickle
p50
sa(dp51
g4
I01
sg5
V__repr__
p52
sg7
L5L
sa(dp53
g4
I01
sg5
V__setattr__
p54
sg7
L5L
sa(dp55
g4
I01
sg5
V__sizeof__
p56
sg7
L2L
sg16
V__sizeof__() -> int\u000asize of object in memory, in bytes
p57
sa(dp58
g4
I01
sg5
V__str__
p59
sg7
L5L
sa(dp60
g4
I01
sg5
V__subclasshook__
p61
sg7
L2L
sg16
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p62
sa(dp63
g4
I01
sg5
V__weakref__
p64
sg7
L5L
sa(dp65
g4
I01
sg5
Vcreate_module
p66
sg7
L5L
sa(dp67
g4
I01
sg5
Vexec_module
p68
sg7
L5L
sa(dp69
g4
I01
sg5
Vfind_module
p70
sg7
L5L
sa(dp71
g4
I01
sg5
Vfind_spec
p72
sg7
L5L
sa(dp73
g4
I01
sg5
Vget_code
p74
sg7
L5L
sa(dp75
g4
I01
sg5
Vget_source
p76
sg7
L5L
sa(dp77
g4
I01
sg5
Vis_package
p78
sg7
L5L
sa(dp79
g4
I01
sg5
Vload_module
p80
sg7
L5L
sa(dp81
g4
I01
sg5
Vmodule_repr
p82
sg7
L5L
sasg4
I01
sg5
V__loader__
p83
sg7
L3L
sg16
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p84
sa(dp85
g4
I01
sg5
V__name__
p86
sg7
L5L
sa(dp87
g4
I01
sg5
V__package__
p88
sg7
L5L
sa(dp89
g4
I01
sg5
V__spec__
p90
sg7
L5L
sa(dp91
g4
I01
sg5
Vbench
p92
sg7
L2L
sg16
Nsa(dp93
g1
(lp94
(dp95
g4
I01
sg5
V__contains__
p96
sg7
L2L
sg16
VTrue if D has a key k, else False.
p97
sa(dp98
g4
I01
sg5
g11
sg7
L5L
sa(dp99
g4
I01
sg5
V__delitem__
p100
sg7
L5L
sa(dp101
g4
I01
sg5
g15
sg7
L2L
sg16
V__dir__() -> list\u000adefault dir() implementation
p102
sa(dp103
g4
I01
sg5
g6
sg7
L5L
sa(dp104
g4
I01
sg5
g20
sg7
L5L
sa(dp105
g4
I01
sg5
g22
sg7
L2L
sg16
Vdefault object formatter
p106
sa(dp107
g4
I01
sg5
g25
sg7
L5L
sa(dp108
g4
I01
sg5
g27
sg7
L5L
sa(dp109
g4
I01
sg5
V__getitem__
p110
sg7
L2L
sg16
Vx.__getitem__(y) <==> x[y]
p111
sa(dp112
g4
I01
sg5
g29
sg7
L5L
sa(dp113
g4
I01
sg5
g31
sg7
L5L
sa(dp114
g4
I01
sg5
g33
sg7
L5L
sa(dp115
g4
I01
sg5
V__iter__
p116
sg7
L5L
sa(dp117
g4
I01
sg5
g35
sg7
L5L
sa(dp118
g4
I01
sg5
V__len__
p119
sg7
L5L
sa(dp120
g4
I01
sg5
g37
sg7
L5L
sa(dp121
g4
I01
sg5
g41
sg7
L5L
sa(dp122
g4
I01
sg5
g43
sg7
L2L
sg16
VCreate and return a new object.  See help(type) for accurate signature.
p123
sa(dp124
g4
I01
sg5
g46
sg7
L2L
sg16
Vhelper for pickle
p125
sa(dp126
g4
I01
sg5
g49
sg7
L2L
sg16
Vhelper for pickle
p127
sa(dp128
g4
I01
sg5
g52
sg7
L5L
sa(dp129
g4
I01
sg5
g54
sg7
L5L
sa(dp130
g4
I01
sg5
V__setitem__
p131
sg7
L5L
sa(dp132
g4
I01
sg5
g56
sg7
L2L
sg16
VD.__sizeof__() -> size of D in memory, in bytes
p133
sa(dp134
g4
I01
sg5
g59
sg7
L5L
sa(dp135
g4
I01
sg5
g61
sg7
L2L
sg16
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p136
sa(dp137
g4
I01
sg5
Vclear
p138
sg7
L2L
sg16
VD.clear() -> None.  Remove all items from D.
p139
sa(dp140
g4
I01
sg5
Vcopy
p141
sg7
L2L
sg16
VD.copy() -> a shallow copy of D
p142
sa(dp143
g4
I01
sg5
Vfromkeys
p144
sg7
L2L
sg16
VReturns a new dict with keys from iterable and values equal to value.
p145
sa(dp146
g4
I01
sg5
Vget
p147
sg7
L2L
sg16
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p148
sa(dp149
g4
I01
sg5
Vgetstate
p150
sg7
L2L
sg16
Vgetstate() -> state
p151
sa(dp152
g4
I01
sg5
Vitems
p153
sg7
L2L
sg16
VD.items() -> a set-like object providing a view on D's items
p154
sa(dp155
g4
I01
sg5
Vkeys
p156
sg7
L2L
sg16
VD.keys() -> a set-like object providing a view on D's keys
p157
sa(dp158
g4
I01
sg5
Vpop
p159
sg7
L2L
sg16
VD.pop(k[,d]) -> v, remove specified key and return the corresponding value.\u000aIf key is not found, d is returned if given, otherwise KeyError is raised
p160
sa(dp161
g4
I01
sg5
Vpopitem
p162
sg7
L2L
sg16
VD.popitem() -> (k, v), remove and return some (key, value) pair as a\u000a2-tuple; but raise KeyError if D is empty.
p163
sa(dp164
g4
I01
sg5
Vsetdefault
p165
sg7
L2L
sg16
VD.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
p166
sa(dp167
g4
I01
sg5
Vsetstate
p168
sg7
L2L
sg16
Vsetstate(state)
p169
sa(dp170
g4
I01
sg5
Vstate
p171
sg7
L5L
sa(dp172
g4
I01
sg5
Vupdate
p173
sg7
L2L
sg16
VD.update([E, ]**F) -> None.  Update D from dict/iterable E and F.\u000aIf E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\u000aIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\u000aIn either case, this is followed by: for k in F:  D[k] = F[k]
p174
sa(dp175
g4
I01
sg5
Vvalues
p176
sg7
L2L
sg16
VD.values() -> an object providing a view on D's values
p177
sasg4
I01
sg5
Vspamdict
p178
sg7
L3L
sg16
Nsa(dp179
g1
(lp180
(dp181
g4
I01
sg5
V__add__
p182
sg7
L5L
sa(dp183
g4
I01
sg5
g96
sg7
L5L
sa(dp184
g4
I01
sg5
g11
sg7
L5L
sa(dp185
g4
I01
sg5
g100
sg7
L5L
sa(dp186
g4
I01
sg5
g15
sg7
L2L
sg16
V__dir__() -> list\u000adefault dir() implementation
p187
sa(dp188
g4
I01
sg5
g6
sg7
L5L
sa(dp189
g4
I01
sg5
g20
sg7
L5L
sa(dp190
g4
I01
sg5
g22
sg7
L2L
sg16
Vdefault object formatter
p191
sa(dp192
g4
I01
sg5
g25
sg7
L5L
sa(dp193
g4
I01
sg5
g27
sg7
L5L
sa(dp194
g4
I01
sg5
g110
sg7
L2L
sg16
Vx.__getitem__(y) <==> x[y]
p195
sa(dp196
g4
I01
sg5
g29
sg7
L5L
sa(dp197
g4
I01
sg5
g31
sg7
L5L
sa(dp198
g4
I01
sg5
V__iadd__
p199
sg7
L5L
sa(dp200
g4
I01
sg5
V__imul__
p201
sg7
L5L
sa(dp202
g4
I01
sg5
g33
sg7
L5L
sa(dp203
g4
I01
sg5
g116
sg7
L5L
sa(dp204
g4
I01
sg5
g35
sg7
L5L
sa(dp205
g4
I01
sg5
g119
sg7
L5L
sa(dp206
g4
I01
sg5
g37
sg7
L5L
sa(dp207
g4
I01
sg5
V__mul__
p208
sg7
L5L
sa(dp209
g4
I01
sg5
g41
sg7
L5L
sa(dp210
g4
I01
sg5
g43
sg7
L2L
sg16
VCreate and return a new object.  See help(type) for accurate signature.
p211
sa(dp212
g4
I01
sg5
g46
sg7
L2L
sg16
Vhelper for pickle
p213
sa(dp214
g4
I01
sg5
g49
sg7
L2L
sg16
Vhelper for pickle
p215
sa(dp216
g4
I01
sg5
g52
sg7
L5L
sa(dp217
g4
I01
sg5
V__reversed__
p218
sg7
L2L
sg16
VL.__reversed__() -- return a reverse iterator over the list
p219
sa(dp220
g4
I01
sg5
V__rmul__
p221
sg7
L5L
sa(dp222
g4
I01
sg5
g54
sg7
L5L
sa(dp223
g4
I01
sg5
g131
sg7
L5L
sa(dp224
g4
I01
sg5
g56
sg7
L2L
sg16
VL.__sizeof__() -- size of L in memory, in bytes
p225
sa(dp226
g4
I01
sg5
g59
sg7
L5L
sa(dp227
g4
I01
sg5
g61
sg7
L2L
sg16
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p228
sa(dp229
g4
I01
sg5
Vappend
p230
sg7
L2L
sg16
VL.append(object) -> None -- append object to end
p231
sa(dp232
g4
I01
sg5
Vclassmeth
p233
sg7
L2L
sg16
Vclassmeth(*args, **kw)
p234
sa(dp235
g4
I01
sg5
g138
sg7
L2L
sg16
VL.clear() -> None -- remove all items from L
p236
sa(dp237
g4
I01
sg5
g141
sg7
L2L
sg16
VL.copy() -> list -- a shallow copy of L
p238
sa(dp239
g4
I01
sg5
Vcount
p240
sg7
L2L
sg16
VL.count(value) -> integer -- return number of occurrences of value
p241
sa(dp242
g4
I01
sg5
Vextend
p243
sg7
L2L
sg16
VL.extend(iterable) -> None -- extend list by appending elements from the iterable
p244
sa(dp245
g4
I01
sg5
g150
sg7
L2L
sg16
Vgetstate() -> state
p246
sa(dp247
g4
I01
sg5
Vindex
p248
sg7
L2L
sg16
VL.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p249
sa(dp250
g4
I01
sg5
Vinsert
p251
sg7
L2L
sg16
VL.insert(index, object) -- insert object before index
p252
sa(dp253
g4
I01
sg5
g159
sg7
L2L
sg16
VL.pop([index]) -> item -- remove and return item at index (default last).\u000aRaises IndexError if list is empty or index is out of range.
p254
sa(dp255
g4
I01
sg5
Vremove
p256
sg7
L2L
sg16
VL.remove(value) -> None -- remove first occurrence of value.\u000aRaises ValueError if the value is not present.
p257
sa(dp258
g4
I01
sg5
Vreverse
p259
sg7
L2L
sg16
VL.reverse() -- reverse *IN PLACE*
p260
sa(dp261
g4
I01
sg5
g168
sg7
L2L
sg16
Vsetstate(state)
p262
sa(dp263
g4
I01
sg5
Vsort
p264
sg7
L2L
sg16
VL.sort(key=None, reverse=False) -> None -- stable sort *IN PLACE*
p265
sa(dp266
g4
I01
sg5
g171
sg7
L5L
sa(dp267
g4
I01
sg5
Vstaticmeth
p268
sg7
L2L
sg16
Vstaticmeth(*args, **kw)
p269
sasg4
I01
sg5
Vspamlist
p270
sg7
L3L
sg16
Nsasg4
I01
sg5
Vxxsubtype
p271
sg16
Vxxsubtype is an example module showing how to subtype builtin types from C.\u000atest_descr.py in the standard test suite requires it in order to complete.\u000aIf you don't care about the examples, and don't intend to run the Python\u000atest suite, you can recompile Python without Modules/xxsubtype.c.
p272
s.