#This file was originally generated by NovalIDE's unitest wizard
import unittest
import noval.tool.Interpreter

class TestInterpreter(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

    def testName(self):
        pass

class TestPythonInterpreter(unittest.TestCase):
    def setUp(self):
        self.intrepreter = noval.tool.Interpreter.PythonInterpreter('tttt',"c:\\python26\python.exe")
    def tearDown(self):
        pass

    def testGetVersion(self):
        pass

    def testCheckSyntax(self):
        print self.intrepreter.Version
        print self.intrepreter.IsV27()
        print self.intrepreter.IsV26()
        print self.intrepreter.CheckSyntax(r"D:\env\Noval\noval\test\ast_test_file.py")

    def testHelpPath(self):
        pass

    def testDefault(self):
        pass

    def testGetSyspathList(self):
        pass

    def testGetBuiltins(self):
        pass

    def testSetInterpreterInfo(self):
        pass

    def testAnalysing(self):
        pass

    def testIsAnalysed(self):
        pass

class TestInterpreterManager(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

    def testLoadDefaultInterpreter(self):
        pass

    def testChooseDefaultInterpreter(self):
        pass

    def testGetInterpreterByName(self):
        pass

    def testLoadPythonInterpreters(self):
        pass

    def testLoadPythonInterpretersFromConfig(self):
        pass

    def testConvertInterpretersToDictList(self):
        pass

    def testSavePythonInterpretersConfig(self):
        pass

    def testAddPythonInterpreter(self):
        pass

    def testRemovePythonInterpreter(self):
        pass

    def testSetDefaultInterpreter(self):
        pass

    def testMakeDefaultInterpreter(self):
        pass

    def testGetDefaultInterpreter(self):
        pass

    def testGetChoices(self):
        pass

    def testGetInterpreterById(self):
        pass

    def testCheckInterpreterExist(self):
        pass

    def testCheckIdExist(self):
        pass

    def testGenerateId(self):
        pass

    def testIsInterpreterAnalysing(self):
        pass

    def testSetCurrentInterpreter(self):
        pass

    def testGetCurrentInterpreter(self):
        pass

class TestInterpreterAddError(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

    def test__str__(self):
        pass

class TestGlobalFunction(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

    def testGetCommandOutput(self):
        pass


if __name__ == "__main__":
    unittest.main()
