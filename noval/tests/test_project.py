#This file was originally generated by NovalIDE's unitest wizard
import unittest
import noval.tool.IDE
noval.tool.IDE.ACTIVEGRID_BASE_IDE = True
import noval.tool.project as project
import noval.tool.Interpreter



class TestPythonProject(unittest.TestCase):
    def setUp(self):
        noval.tool.Interpreter.InterpreterManager().LoadDefaultInterpreter()
    def tearDown(self):
        pass

    def testSetInterpreter(self):
        
        f = file("test3.agp","w")
        pj = project.PythonProject()
        pj.SetDocCallback('dddddd')
        pj.Name = 'hahahah'
        pj.SetInterpreter('yyyyyyy')
        pj.AddFile(r"D:\env\Noval\noval\parser\intellisence.py")
        pj.AddFile(r"D:\env\Noval\noval\parser\intellisence.py")
        pj.AddFile(r"D:\env\Noval\noval\parser\factory.py")
        pj.AddFile(r"D:\env\Noval\noval\tool\ProjectEditor.py")
        pj.AddFile(r"D:\env\Noval\noval\tool\AboutDialog.py")
        pj.AddFile(r"D:\env\Noval\noval\util\appdirs.py")
        pj.homeDir = r"D:\env\Noval"
        project.save(f,pj)
        f.close()

class TestProjectInterpreter(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

class TestProjectFile(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

    def test_GetDocumentModel(self):
        pass

    def test_GetDocument(self):
        pass

    def testClearCache(self):
        pass

    def test_typeEnumeration(self):
        pass

    def test_GetPhysicalFolder(self):
        pass

    def testGetRelativeFolder(self):
        pass

    def testAbsToRelativePath(self):
        pass

    def testRelativeToAbsPath(self):
        pass

    def test_GetDoc(self):
        pass

    def test_GetLocalServiceProcessName(self):
        pass

    def test_GetStateful(self):
        pass

    def test_SetStateful(self):
        pass

    def test_GetLocalServiceCodeFile(self):
        pass

    def test_SetLocalServiceCodeFile(self):
        pass

    def test_GetLocalServiceClassName(self):
        pass

    def test_SetLocalServiceClassName(self):
        pass

    def testgetServiceParameter(self):
        pass

    def test_GetServiceRefServiceType(self):
        pass

    def test_SetServiceRefServiceType(self):
        pass

    def testgetExternalPackage(self):
        pass

class TestGlobalFunction(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

    def testload(self):
        pass

    def testsave(self):
        pass


if __name__ == "__main__":
    unittest.main()
